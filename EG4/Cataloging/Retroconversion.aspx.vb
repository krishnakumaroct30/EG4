Imports System.Data
Imports System.Data.SqlClient
Imports AjaxControlToolkit
Imports System.IO
Imports System.Xml
Imports System.Web
Imports System.Web.UI
Imports Microsoft.VisualBasic
Imports System.Configuration
Imports System.Security.Cryptography
Imports EG4.Module1
Imports EG4.CaptchaImage
Imports CDO
Imports System.Net.Mail
Imports System.Net
Imports EG4.PopulateCombo

Public Class Retroconversion
    Inherits System.Web.UI.Page
    Dim index As Integer = 0
    Public Srno As Integer = 0
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Try
            If Session.Item("IsThisU") <> Nothing Then
                If Not SConnection() = True Then
                    Label6.Text = "Database Connection is lost..Try Again !'"
                    Label15.Text = ""
                Else
                    LibCode = Session.Item("LoggedLibcode")
                    If Page.IsPostBack = False Then
                        GetUserSettings()
                        GetLibrarySettings()
                        PopulateBibCodes()
                        DDL_Bib_Level.SelectedValue = "M"
                        Me.DDL_Bib_Level_SelectedIndexChanged(sender, e)
                        DDL_Mat_Type.SelectedValue = "B"
                        DDL_Mat_Type_SelectedIndexChanged(sender, e)
                        DDL_Doc_Type.SelectedValue = "BK"
                        DDL_Doc_Type_SelectedIndexChanged(sender, e)
                        PopulateLanguages()
                        DDL_Lang.SelectedValue = "ENG"
                        PopulateCountries()
                        DDL_Countries.SelectedValue = ""
                        PopulatePub()
                        PopulateSubjects()
                        PopulateCurrencies()
                        DDL_Currencies.SelectedValue = "INR"
                        PopulateAcqModes()
                        DDL_AcqModes.SelectedValue = "P"
                        PopulateVendors()


                        'holdings
                        PopulateSections()
                        PopulateLibrary()
                        PopulateAccMaterials()
                        PopulateBindings()
                        PopulateFormats()
                        PopulateSections()
                        PopulateStatus()
                        DDL_Format.SelectedValue = "PT"
                        DDL_Show.SelectedValue = "Y"
                        DDL_Issuable.SelectedValue = "Y"
                        DDL_CollectionType.SelectedValue = "C"
                        DDL_Status.SelectedValue = "1"
                        DDL_Binding.SelectedValue = "P"


                        Me.Acq_Save_Bttn.Visible = True
                        Acq_Cancel_Bttn.Visible = True
                        Acq_Delete_Bttn.Visible = False
                        Acq_Update_Bttn.Visible = False
                        Acq_SaveNew_Bttn.Visible = False
                        Acq_AddCopy_Bttn.Visible = False
                        Acq_SaveCopy_Bttn.Visible = False
                        Label15.Text = "Enter Data and Press SAVE Button to save the record.."
                        Label6.Text = ""

                        If Acq_Update_Bttn.Visible = False Then
                            txt_Cat_Year.Text = Now.Year
                        Else
                            txt_Display_Value.Focus()
                        End If
                    End If
                    Dim CreateSUserButton As Object 'System.Web.UI.WebControls.Button
                    CreateSUserButton = Master.FindControl("Accordion1").FindControl("CatPane").FindControl("Cat_Retro_Bttn")
                    CreateSUserButton.ForeColor = Drawing.Color.Red
                    myPaneName = "CatPane"
                End If
            Else
                Response.Redirect("~/Default.aspx", False)
            End If
            LibCode = Session.Item("LoggedLibcode")
            DDL_Library.SelectedValue = LibCode
            If AcqRetro = "Y" Then
                Table4.Visible = True
            Else
                Table4.Visible = False
            End If
        Catch ex As Exception
            Label6.Text = "Error in this Page!"
            Label15.Text = ""
        End Try
    End Sub
    Public Sub GetUserSettings()
        Dim Command As SqlCommand = Nothing
        Dim drUSERS As SqlDataReader = Nothing
        Try
            'get record details from database
            Dim SQL As String = Nothing
            SQL = "SELECT DOWNLOAD_CATS  FROM USERS WHERE (USER_CODE = '" & TrimX(UserCode) & "') "
            Command = New SqlCommand(SQL, SqlConn)
            SqlConn.Open()
            drUSERS = Command.ExecuteReader(CommandBehavior.CloseConnection)
            drUSERS.Read()
            If drUSERS.HasRows = True Then
                If drUSERS.Item("DOWNLOAD_CATS").ToString <> "" And drUSERS.Item("DOWNLOAD_CATS").ToString = "Y" Then
                    CheckBox2.Checked = True
                Else
                    CheckBox2.Checked = False
                End If
            End If
        Catch s As Exception
            Label6.Text = "Error: " & (s.Message())
            If drUSERS IsNot Nothing Then
                drUSERS.Close()
            Else
                SqlConn.Close()
            End If
        Finally
            Command.Dispose()
            SqlConn.Close()
        End Try
    End Sub
    Public Sub GetLibrarySettings()
        Dim Command As SqlCommand = Nothing
        Dim dr As SqlDataReader = Nothing
        Try
            'get record details from database
            Dim SQL As String = Nothing
            SQL = "SELECT LIB_ID, ACQ_RETRO FROM LIBRARIES WHERE (LIB_CODE = '" & TrimX(LibCode) & "') "
            Command = New SqlCommand(SQL, SqlConn)
            SqlConn.Open()
            dr = Command.ExecuteReader(CommandBehavior.CloseConnection)
            dr.Read()
            If dr.HasRows = True Then
                If dr.Item("ACQ_RETRO").ToString <> "" Then
                    AcqRetro = dr.Item("ACQ_RETRO").ToString
                Else
                    AcqRetro = "N"
                End If
            End If
        Catch s As Exception
            If dr IsNot Nothing Then
                dr.Close()
            Else
                SqlConn.Close()
            End If
        Finally
            SqlConn.Close()
        End Try
    End Sub
    Public Sub PopulateBibCodes()
        Me.DDL_Bib_Level.DataTextField = "BIB_NAME"
        Me.DDL_Bib_Level.DataValueField = "BIB_CODE"
        Me.DDL_Bib_Level.DataSource = GetBibLevelist()
        Me.DDL_Bib_Level.DataBind()
    End Sub
    'select materials type on selection of bib levels
    Protected Sub DDL_Bib_Level_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles DDL_Bib_Level.SelectedIndexChanged
        Dim Command As SqlCommand = Nothing
        Dim dt As DataTable = Nothing
        Try
            Dim myBibName As Object = Nothing
            If DDL_Bib_Level.Text <> "" Then
                myBibName = DDL_Bib_Level.SelectedValue
            Else
                myBibName = ""
            End If

            If myBibName = "S" Then
                Label6.Text = "This Form can not be used to Add SERIALS - use SERIALS Module for such materials.)"
                Label15.Text = ""
                DDL_Mat_Type.Items.Clear()
                DDL_Doc_Type.Items.Clear()
                DDL_Bib_Level.Focus()
                Exit Sub
            End If
                Command = New SqlCommand("SELECT  MAT_CODE, MAT_NAME FROM MATERIALS WHERE (BIB_CODE = '" & Trim(myBibName) & "') ORDER BY MAT_NAME ", SqlConn)
                If SqlConn.State = 0 Then
                    SqlConn.Open()
                End If
                Dim da As New SqlDataAdapter(Command)
                Dim ds As New DataSet
                Dim RecordCount As Long = 0
                da.Fill(ds)

                dt = ds.Tables(0).Copy

                Dim Dr As DataRow
                Dr = dt.NewRow
                Dr("MAT_CODE") = ""
                Dr("MAT_NAME") = ""
                dt.Rows.InsertAt(Dr, 0)

                If dt.Rows.Count = 0 Then
                    Me.DDL_Mat_Type.DataSource = Nothing
                Else
                    Me.DDL_Mat_Type.DataSource = dt
                    Me.DDL_Mat_Type.DataTextField = "MAT_NAME"
                    Me.DDL_Mat_Type.DataValueField = "MAT_CODE"
                    Me.DDL_Mat_Type.DataBind()
                End If
                dt.Dispose()
            SqlConn.Close()
            DDL_Doc_Type.Items.Clear()
            DDL_Bib_Level.Focus()
        Catch s As Exception
            Label6.Text = "Error: " & (s.Message())
            Label15.Text = ""
        Finally
            SqlConn.Close()
        End Try

    End Sub
    'select doc type on selection of materials
    Public Sub DDL_Mat_Type_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles DDL_Mat_Type.SelectedIndexChanged
        Dim Command As SqlCommand = Nothing
        Dim dt As DataTable = Nothing
        Try
            Dim myMatName As Object = Nothing
            If DDL_Mat_Type.Text <> "" Then
                myMatName = DDL_Mat_Type.SelectedValue
            Else
                myMatName = ""
            End If
            Command = New SqlCommand("SELECT  DOC_TYPE_CODE, DOC_TYPE_NAME FROM DOC_TYPES WHERE (MAT_CODE = '" & Trim(myMatName) & "') ORDER BY DOC_TYPE_NAME ", SqlConn)
            If SqlConn.State = 0 Then
                SqlConn.Open()
            End If
            Dim da As New SqlDataAdapter(Command)
            Dim ds As New DataSet
            Dim RecordCount As Long = 0
            da.Fill(ds)

            dt = ds.Tables(0).Copy

            Dim Dr As DataRow
            Dr = dt.NewRow
            Dr("DOC_TYPE_CODE") = ""
            Dr("DOC_TYPE_NAME") = ""
            dt.Rows.InsertAt(Dr, 0)

            If dt.Rows.Count = 0 Then
                Me.DDL_Doc_Type.DataSource = Nothing
            Else
                Me.DDL_Doc_Type.DataSource = dt
                Me.DDL_Doc_Type.DataTextField = "DOC_TYPE_NAME"
                Me.DDL_Doc_Type.DataValueField = "DOC_TYPE_CODE"
                Me.DDL_Doc_Type.DataBind()
            End If
            dt.Dispose()
            SqlConn.Close()
            DDL_Mat_Type.Focus()
        Catch s As Exception
            Label6.Text = "Error: " & (s.Message())
            Label15.Text = ""
        Finally
            Command.Dispose()
            dt.Dispose()
            SqlConn.Close()
        End Try

    End Sub
    'populate lang
    Public Sub PopulateLanguages()
        Me.DDL_Lang.DataSource = GetLanguageList()
        Me.DDL_Lang.DataTextField = "LANG_NAME"
        Me.DDL_Lang.DataValueField = "LANG_CODE"
        Me.DDL_Lang.DataBind()
    End Sub
    Public Sub PopulateCountries()
        Me.DDL_Countries.DataSource = GetCountryList()
        Me.DDL_Countries.DataTextField = "CON_NAME"
        Me.DDL_Countries.DataValueField = "CON_CODE"
        Me.DDL_Countries.DataBind()
        DDL_Countries.Items.Insert(0, "")
    End Sub
    Public Sub PopulatePub()
        Pub_ComboBox.DataTextField = "PUB_NAME"
        Pub_ComboBox.DataValueField = "PUB_ID"
        Pub_ComboBox.DataSource = GetPublisherList()
        Pub_ComboBox.DataBind()
        Pub_ComboBox.Items.Insert(0, "")
    End Sub
    Public Sub PopulateSubjects()
        Me.DDL_Subjects.DataSource = GetSubjectList()
        Me.DDL_Subjects.DataTextField = "SUB_NAME"
        Me.DDL_Subjects.DataValueField = "SUB_ID"
        Me.DDL_Subjects.DataBind()
        DDL_Subjects.Items.Insert(0, "")
    End Sub
    'get place country on selection of publisher
    Protected Sub Pub_ComboBox_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles Pub_ComboBox.SelectedIndexChanged
        Dim Command As SqlCommand = Nothing
        Dim dt As DataTable = Nothing
        If Me.Acq_Save_Bttn.Visible = True Then
            Try
                Dim myPubID As Object = Nothing
                If Pub_ComboBox.Text <> "" Then
                    myPubID = Pub_ComboBox.SelectedValue
                    Command = New SqlCommand("SELECT  PUB_PLACE, CON_CODE FROM PUBLISHERS WHERE (PUB_ID = '" & Trim(myPubID) & "') ", SqlConn)
                    If SqlConn.State = 0 Then
                        SqlConn.Open()
                    End If
                    Dim da As New SqlDataAdapter(Command)
                    Dim ds As New DataSet
                    Dim RecordCount As Long = 0
                    da.Fill(ds)
                    dt = ds.Tables(0).Copy
                    If dt.Rows.Count <> 0 Then
                        txt_Cat_Place.Text = dt.Rows(0).Item("PUB_PLACE").ToString
                        DDL_Countries.SelectedValue = dt.Rows(0).Item("CON_CODE")
                    Else
                        txt_Cat_Place.Text = ""
                    End If
                    dt.Dispose()
                    SqlConn.Close()
                Else
                    myPubID = 0
                End If
                Pub_ComboBox.Focus()
            Catch s As Exception
                Label6.Text = "Error: " & (s.Message())
                Label15.Text = ""
            Finally
                SqlConn.Close()
            End Try
        Else
            Pub_ComboBox.Focus()
        End If
    End Sub
    'get keywords on selection of subject
    Protected Sub DDL_Subjects_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles DDL_Subjects.SelectedIndexChanged
        Dim Command As SqlCommand = Nothing
        Dim dt As DataTable = Nothing
        If Me.Acq_Save_Bttn.Visible = True Then
            Try
                Dim mySubID As Object = Nothing
                If DDL_Subjects.Text <> "" Then
                    mySubID = DDL_Subjects.SelectedValue
                    Command = New SqlCommand("SELECT SUB_KEYWORDS FROM SUBJECTS WHERE (SUB_ID = '" & Trim(mySubID) & "') ", SqlConn)
                    If SqlConn.State = 0 Then
                        SqlConn.Open()
                    End If
                    Dim da As New SqlDataAdapter(Command)
                    Dim ds As New DataSet
                    Dim RecordCount As Long = 0
                    da.Fill(ds)
                    dt = ds.Tables(0).Copy

                    If dt.Rows.Count <> 0 Then
                        txt_Cat_Keywords.Text = dt.Rows(0).Item("SUB_KEYWORDS").ToString
                    Else
                        txt_Cat_Keywords.Text = ""
                    End If
                    dt.Dispose()
                    SqlConn.Close()
                Else
                    mySubID = 0
                End If
                DDL_Subjects.Focus()
            Catch s As Exception
                Label6.Text = "Error: " & (s.Message())
                Label15.Text = ""
            Finally
                Command.Dispose()
                dt.Dispose()
                SqlConn.Close()
            End Try
        Else
            DDL_Subjects.Focus()
        End If
    End Sub
    'load / display fields
    Protected Sub DDL_Doc_Type_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles DDL_Doc_Type.SelectedIndexChanged
        LoadDeFormats()
    End Sub
    Public Sub LoadDeFormats()
        Dim Command As SqlCommand = Nothing
        Dim dt As DataTable = Nothing
        Try
            Dim myCatFields As Object = Nothing
            Dim myHoldFields As Object = Nothing

            Dim myDocName As Object = Nothing
            If DDL_Doc_Type.Text <> "" Then
                myDocName = DDL_Doc_Type.SelectedValue
            Else
                Exit Sub
            End If

            Dim SQL As String = Nothing
            SQL = "SELECT DEF_ID, CAT_FORMAT,HOLD_FORMAT,DOC_TYPE_NAME  FROM DEFORMATS WHERE (LIB_CODE = '" & Trim(LibCode) & "'  AND DOC_TYPE_CODE = '" & Trim(myDocName) & "') "
            Command = New SqlCommand(SQL, SqlConn)
            If SqlConn.State = 0 Then
                SqlConn.Open()
            End If
            Dim da As New SqlDataAdapter(Command)
            Dim ds As New DataSet
            Dim RecordCount As Long = 0
            da.Fill(ds)
            dt = ds.Tables(0).Copy

            If dt.Rows.Count <> 0 Then
                If dt.Rows(0).Item("CAT_FORMAT").ToString <> "" Then
                    myCatFields = dt.Rows(0).Item("CAT_FORMAT")
                    If myCatFields <> "" Then
                        TR_LANG.Visible = True
                        TR_TITLE.Visible = True
                        TR_CONTENTS.Visible = True
                        TR_PHOTO.Visible = True

                        TR_ACQMODE.Visible = True
                        TR_CONVERSION.Visible = True
                        TR_VENDOR.Visible = True

                        TR_ACCSERIES.Visible = True
                        TR_LIBRARY.Visible = True
                        TR_HOLDREMARKS.Visible = True

                        If InStr(myCatFields, "STANDARD_NO") <> 0 Then
                            TR_ISBN.Visible = True
                        Else
                            TR_ISBN.Visible = False
                        End If

                        If InStr(myCatFields, "SP_NO") <> 0 Then
                            TR_SPNo.Visible = True
                        Else
                            TR_SPNo.Visible = False
                        End If

                        If InStr(myCatFields, "SP_TCSC") <> 0 Then
                            TR_SP_TCSC.Visible = True
                        Else
                            TR_SP_TCSC.Visible = False
                        End If
                        If InStr(myCatFields, "SP_UPDATES") <> 0 Then
                            TR_SP_UPDATES.Visible = True
                        Else
                            TR_SP_UPDATES.Visible = False
                        End If
                        If InStr(myCatFields, "SP_AMMENDMENTS") <> 0 Then
                            TR_SP_AMMENDMENTS.Visible = True
                        Else
                            TR_SP_AMMENDMENTS.Visible = False
                        End If

                        If InStr(myCatFields, "SP_ISSUE_BODY") <> 0 Then
                            TR_SP_ISSUE_BODY.Visible = True
                        Else
                            TR_SP_ISSUE_BODY.Visible = False
                        End If


                        If InStr(myCatFields, "MANUAL_NO") <> 0 Then
                            TR_ManualNo.Visible = True
                        Else
                            TR_ManualNo.Visible = False
                        End If

                        If InStr(myCatFields, "REPORT_NO") <> 0 Then
                            TR_ReportNo.Visible = True
                        Else
                            TR_ReportNo.Visible = False
                        End If

                        If InStr(myCatFields, "SUB_TITLE") <> 0 Then
                            TR_SubTitle.Visible = True
                        Else
                            TR_SubTitle.Visible = False
                        End If
                        If InStr(myCatFields, "VAR_TITLE") <> 0 Then
                            TR_VarTitle.Visible = True
                        Else
                            TR_VarTitle.Visible = False
                        End If
                        If InStr(myCatFields, "SCHOLAR_NAME") <> 0 Then
                            TR_ScholarName.Visible = True
                        Else
                            TR_ScholarName.Visible = False
                        End If
                        If InStr(myCatFields, "SCHOLAR_DEPT") <> 0 Then
                            TR_ScholarDepartment.Visible = True
                        Else
                            TR_ScholarDepartment.Visible = False
                        End If
                        If InStr(myCatFields, "GUIDE_NAME") <> 0 Then
                            TR_GuideName.Visible = True
                        Else
                            TR_GuideName.Visible = False
                        End If
                        If InStr(myCatFields, "GUIDE_DEPT") <> 0 Then
                            TR_GuideDepartment.Visible = True
                        Else
                            TR_GuideDepartment.Visible = False
                        End If
                        If InStr(myCatFields, "DEGREE_NAME") <> 0 Then
                            TR_DegreeName.Visible = True
                        Else
                            TR_DegreeName.Visible = False
                        End If
                        If InStr(myCatFields, "SP_VERSION") <> 0 Then
                            TR_SPRevision.Visible = True
                        Else
                            TR_SPRevision.Visible = False
                        End If
                        If InStr(myCatFields, "MANUAL_VER") <> 0 Then
                            TR_ManualRev.Visible = True
                        Else
                            TR_ManualRev.Visible = False
                        End If
                        If InStr(myCatFields, "PATENT_NO") <> 0 Then
                            TR_PatentNo.Visible = True
                        Else
                            TR_PatentNo.Visible = False
                        End If
                        If InStr(myCatFields, "PATENTEE") <> 0 Then
                            TR_Patentee.Visible = True
                        Else
                            TR_Patentee.Visible = False
                        End If
                        If InStr(myCatFields, "PATENT_INVENTOR") <> 0 Then
                            TR_PatentInventor.Visible = True
                        Else
                            TR_PatentInventor.Visible = False
                        End If
                        If InStr(myCatFields, "CONF_NAME") <> 0 Then
                            TR_ConfName.Visible = True
                        Else
                            TR_ConfName.Visible = False
                        End If
                        If InStr(myCatFields, "CONF_NAME") <> 0 Then
                            TR_ConfDetails.Visible = True
                        Else
                            TR_ConfDetails.Visible = False
                        End If
                        If InStr(myCatFields, "AUTHOR1") <> 0 Then
                            TR_Author.Visible = True
                        Else
                            TR_Author.Visible = False
                        End If
                        If InStr(myCatFields, "EDITOR") <> 0 Then
                            TR_Editor.Visible = True
                        Else
                            TR_Editor.Visible = False
                        End If
                        If InStr(myCatFields, "TRANSLATOR") <> 0 Then
                            TR_Translator.Visible = True
                        Else
                            TR_Translator.Visible = False
                        End If
                        If InStr(myCatFields, "ILLUSTRATOR") <> 0 Then
                            TR_Illustrator.Visible = True
                        Else
                            TR_Illustrator.Visible = False
                        End If
                        If InStr(myCatFields, "COMPILER") <> 0 Then
                            TR_Compiler.Visible = True
                        Else
                            TR_Compiler.Visible = False
                        End If
                        If InStr(myCatFields, "COMMENTATORS") <> 0 Then
                            TR_Commentator.Visible = True
                        Else
                            TR_Commentator.Visible = False
                        End If
                        If InStr(myCatFields, "REVISED_BY") <> 0 Then
                            TR_RevisedBy.Visible = True
                        Else
                            TR_RevisedBy.Visible = False
                        End If
                        If InStr(myCatFields, "CORPORATE_AUTHOR") <> 0 Then
                            TR_CorpAuthor.Visible = True
                        Else
                            TR_CorpAuthor.Visible = False
                        End If
                        If InStr(myCatFields, "EDITION") <> 0 Then
                            TR_Edition.Visible = True
                        Else
                            TR_Edition.Visible = False
                        End If
                        If InStr(myCatFields, "REPRINTS") <> 0 Then
                            TR_Reprint.Visible = True
                        Else
                            TR_Reprint.Visible = False
                        End If
                        If InStr(myCatFields, "PUB_ID") <> 0 Then
                            TR_Publisher.Visible = True
                        Else
                            TR_Publisher.Visible = False
                        End If
                        If InStr(myCatFields, "PLACE_OF_PUB") <> 0 Then
                            TR_Place.Visible = True
                        Else
                            TR_Place.Visible = False
                        End If
                        If InStr(myCatFields, "YEAR_OF_PUB") <> 0 Then
                            TR_Year.Visible = True
                        Else
                            TR_Year.Visible = False
                        End If
                        If InStr(myCatFields, "SERIES_TITLE") <> 0 Then
                            TR_Series.Visible = True
                        Else
                            TR_Series.Visible = False
                        End If
                        If InStr(myCatFields, "SERIES_EDITOR") <> 0 Then
                            TR_SeriesEditor.Visible = True
                        Else
                            TR_SeriesEditor.Visible = False
                        End If
                        If InStr(myCatFields, "NOTE") <> 0 Then
                            TR_Note.Visible = True
                        Else
                            TR_Note.Visible = False
                        End If
                        If InStr(myCatFields, "REMARKS") <> 0 Then
                            TR_Remarks.Visible = True
                        Else
                            TR_Remarks.Visible = False
                        End If
                        If InStr(myCatFields, "URL") <> 0 Then
                            TR_URL.Visible = True
                        Else
                            TR_URL.Visible = False
                        End If
                        If InStr(myCatFields, "COMMENTS") <> 0 Then
                            TR_Comments.Visible = True
                        Else
                            TR_Comments.Visible = False
                        End If
                        If InStr(myCatFields, "SUB_ID") <> 0 Then
                            TR_Subject.Visible = True
                        Else
                            TR_Subject.Visible = False
                        End If
                        If InStr(myCatFields, "KEYWORDS") <> 0 Then
                            TR_Keyword.Visible = True
                        Else
                            TR_Keyword.Visible = False
                        End If
                        If InStr(myCatFields, "TR_FROM") <> 0 Then
                            TR_TranslatedFrom.Visible = True
                        Else
                            TR_TranslatedFrom.Visible = False
                        End If
                        If InStr(myCatFields, "ABSTRACT") <> 0 Then
                            TR_Absract.Visible = True
                        Else
                            TR_Absract.Visible = False
                        End If
                        If InStr(myCatFields, "REFERENCE_NO") <> 0 Then
                            TR_ReferenceNo.Visible = True
                        Else
                            TR_ReferenceNo.Visible = False
                        End If

                        If InStr(myCatFields, "PRODUCER") <> 0 Then
                            TR_Producer.Visible = True
                        Else
                            TR_Producer.Visible = False
                        End If

                        If InStr(myCatFields, "DESIGNER") <> 0 Then
                            TR_Designer.Visible = True
                        Else
                            TR_Designer.Visible = False
                        End If

                        If InStr(myCatFields, "MANUFACTURER") <> 0 Then
                            TR_Manufacturer.Visible = True
                        Else
                            TR_Manufacturer.Visible = False
                        End If

                        If InStr(myCatFields, "CREATOR") <> 0 Then
                            TR_Creator.Visible = True
                        Else
                            TR_Creator.Visible = False
                        End If

                        If InStr(myCatFields, "MATERIALS") <> 0 Then
                            TR_Materials.Visible = True
                        Else
                            TR_Materials.Visible = False
                        End If

                        If InStr(myCatFields, "WORK_CATEGORY") <> 0 Then
                            TR_Work.Visible = True
                        Else
                            TR_Work.Visible = False
                        End If

                        If InStr(myCatFields, "RELATED_WORK") <> 0 Then
                            TR_RelatedWork.Visible = True
                        Else
                            TR_RelatedWork.Visible = False
                        End If

                        If InStr(myCatFields, "SOURCE") <> 0 Then
                            TR_Source.Visible = True
                        Else
                            TR_Source.Visible = False
                        End If

                        If InStr(myCatFields, "PHOTOGRAPHER") <> 0 Then
                            TR_Photographer.Visible = True
                        Else
                            TR_Photographer.Visible = False
                        End If

                        If InStr(myCatFields, "NATIONALITY") <> 0 Then
                            TR_Nationality.Visible = True
                        Else
                            TR_Nationality.Visible = False
                        End If

                        If InStr(myCatFields, "ACT_NO") <> 0 Then
                            TR_ACT.Visible = True
                        Else
                            TR_ACT.Visible = False
                        End If

                        If InStr(myCatFields, "CHAIRMAN") <> 0 Then
                            TR_CHAIRMAN.Visible = True
                        Else
                            TR_CHAIRMAN.Visible = False
                        End If

                        If InStr(myCatFields, "GOVERNMENT") <> 0 Then
                            TR_GOVERNMENT.Visible = True
                        Else
                            TR_GOVERNMENT.Visible = False
                        End If

                        Label15.Text = "Enter Data and Press SAVE Button to save the record.."
                        Label6.Text = ""
                    Else
                        'Label6.Text = "Data Entry Format is not proper..Create Data Entry Format for this Document Type in Library Administrator Module"
                        ' Label15.Text = ""
                    End If
                Else
                    'Label6.Text = "Data Entry Format has not been added..Create Data Entry Format for this Document Type in Library Administrator Module"
                    'Label15.Text = ""
                End If
            Else
                Label6.Text = "Data Entry Format has not been added..Create Data Entry Format for this Document Type in Library Administrator Module"
                Label15.Text = ""

                TR_LANG.Visible = False
                TR_TITLE.Visible = False
                TR_CONTENTS.Visible = False
                TR_PHOTO.Visible = False

                TR_ACQMODE.Visible = False
                TR_CONVERSION.Visible = False
                TR_VENDOR.Visible = False

                TR_ACCSERIES.Visible = False
                TR_LIBRARY.Visible = False
                TR_HOLDREMARKS.Visible = False

                TR_ISBN.Visible = False
                TR_SPNo.Visible = False
                TR_SP_TCSC.Visible = False
                TR_SP_AMMENDMENTS.Visible = False
                TR_SP_UPDATES.Visible = False
                TR_SP_ISSUE_BODY.Visible = False
                TR_ManualNo.Visible = False
                TR_ReportNo.Visible = False
                TR_SubTitle.Visible = False
                TR_VarTitle.Visible = False
                TR_ScholarName.Visible = False
                TR_ScholarDepartment.Visible = False
                TR_GuideName.Visible = False
                TR_GuideDepartment.Visible = False
                TR_DegreeName.Visible = False
                TR_SPRevision.Visible = False
                TR_ManualRev.Visible = False
                TR_PatentNo.Visible = False
                TR_Patentee.Visible = False
                TR_PatentInventor.Visible = False
                TR_ConfName.Visible = False
                TR_ConfDetails.Visible = False
                TR_Author.Visible = False
                TR_Editor.Visible = False
                TR_Translator.Visible = False
                TR_Illustrator.Visible = False
                TR_Compiler.Visible = False
                TR_Commentator.Visible = False
                TR_RevisedBy.Visible = False
                TR_CorpAuthor.Visible = False
                TR_Edition.Visible = False
                TR_Reprint.Visible = False
                TR_Publisher.Visible = False
                TR_Place.Visible = False
                TR_Year.Visible = False
                TR_Series.Visible = False
                TR_SeriesEditor.Visible = False
                TR_Note.Visible = False
                TR_Remarks.Visible = False
                TR_URL.Visible = False
                TR_Comments.Visible = False
                TR_Subject.Visible = False
                TR_Keyword.Visible = False
                TR_TranslatedFrom.Visible = False
                TR_Absract.Visible = False
                TR_ReferenceNo.Visible = False
                TR_Producer.Visible = False
                TR_Designer.Visible = False
                TR_Manufacturer.Visible = False
                TR_Creator.Visible = False
                TR_Materials.Visible = False
                TR_Work.Visible = False
                TR_RelatedWork.Visible = False
                TR_Source.Visible = False
                TR_Photographer.Visible = False
                TR_Nationality.Visible = False
                TR_ACT.Visible = False
            End If
            SqlConn.Close()
            DDL_Doc_Type.Focus()
            If Label7.Text = "" Then
                LoadHoldFormat()
            End If
        Catch s As Exception
            Label6.Text = "Error: " & (s.Message())
            Label15.Text = ""
        Finally
            SqlConn.Close()
        End Try

    End Sub
    Public Sub LoadHoldFormat()
        Dim Command As SqlCommand = Nothing
        Dim dt As DataTable = Nothing
        Try
            Dim myHoldFields As Object = Nothing
            Dim myDocName As Object = Nothing
            If DDL_Doc_Type.Text <> "" Then
                myDocName = DDL_Doc_Type.SelectedValue
            Else
                Exit Sub
            End If

            Dim SQL As String = Nothing
            SQL = "SELECT DEF_ID, HOLD_FORMAT, DOC_TYPE_NAME  FROM DEFORMATS WHERE (LIB_CODE = '" & Trim(LibCode) & "'  AND DOC_TYPE_CODE = '" & Trim(myDocName) & "') "
            Command = New SqlCommand(SQL, SqlConn)
            If SqlConn.State = 0 Then
                SqlConn.Open()
            End If
            Dim da As New SqlDataAdapter(Command)
            Dim ds As New DataSet
            Dim RecordCount As Long = 0
            da.Fill(ds)
            dt = ds.Tables(0).Copy

            If dt.Rows.Count <> 0 Then
                If dt.Rows(0).Item("HOLD_FORMAT").ToString <> "" Then
                    myHoldFields = dt.Rows(0).Item("HOLD_FORMAT")
                    If myHoldFields <> "" Then
                        Table2.Visible = True

                        If InStr(myHoldFields, "CLASS_NO") <> 0 Then
                            TR_CLASS_NO.Visible = True
                        Else
                            TR_CLASS_NO.Visible = False
                        End If

                        If InStr(myHoldFields, "PAGINATION") <> 0 Then
                            TR_PAGINATION.Visible = True
                        Else
                            TR_PAGINATION.Visible = False
                        End If

                        If InStr(myHoldFields, "ILLUSTRATION") <> 0 Then
                            TR_ILLUSTRATION.Visible = True
                        Else
                            TR_ILLUSTRATION.Visible = False
                        End If

                        If InStr(myHoldFields, "SIZE") <> 0 Then
                            TR_SIZE.Visible = True
                        Else
                            TR_SIZE.Visible = False
                        End If

                        If InStr(myHoldFields, "COLLECTION_TYPE") <> 0 Then
                            TR_COLLECTION_TYPE.Visible = True
                        Else
                            TR_COLLECTION_TYPE.Visible = False
                        End If
                        If InStr(myHoldFields, "PHYSICAL_LOCATION") <> 0 Then
                            TR_PHYSICAL_LOCATION.Visible = True
                        Else
                            TR_PHYSICAL_LOCATION.Visible = False
                        End If
                        If InStr(myHoldFields, "STA_CODE") <> 0 Then
                            TR_STA_CODE.Visible = True
                        Else
                            TR_STA_CODE.Visible = False
                        End If
                        If InStr(myHoldFields, "BIND_CODE") <> 0 Then
                            TR_BIND_CODE.Visible = True
                        Else
                            TR_BIND_CODE.Visible = False
                        End If
                        If InStr(myHoldFields, "ACC_MAT_CODE") <> 0 Then
                            TR_ACC_MAT_CODE.Visible = True
                        Else
                            TR_ACC_MAT_CODE.Visible = False
                        End If
                        If InStr(myHoldFields, "SEC_CODE") <> 0 Then
                            TR_SEC_CODE.Visible = True
                        Else
                            TR_SEC_CODE.Visible = False
                        End If
                        If InStr(myHoldFields, "FORMAT_CODE") <> 0 Then
                            TR_FORMAT_CODE.Visible = True
                        Else
                            TR_FORMAT_CODE.Visible = False
                        End If

                        If InStr(myHoldFields, "REFERENCE_NO") <> 0 Then
                            TR_REFERENCE_NO.Visible = True
                        Else
                            TR_REFERENCE_NO.Visible = False
                        End If
                        If InStr(myHoldFields, "REMARKS") <> 0 Then
                            TR_HOLDREMARKS.Visible = True
                        Else
                            TR_HOLDREMARKS.Visible = False
                        End If
                        If InStr(myHoldFields, "MEDIUM") <> 0 Then
                            TR_MEDIUM.Visible = True
                        Else
                            TR_MEDIUM.Visible = False
                        End If
                        If InStr(myHoldFields, "RECORDING_CATEGORY") <> 0 Then
                            TR_RECORDING_CATEGORY.Visible = True
                        Else
                            TR_RECORDING_CATEGORY.Visible = False
                        End If
                        If InStr(myHoldFields, "RECORDING_FORM") <> 0 Then
                            TR_RECORDING_FORM.Visible = True
                        Else
                            TR_RECORDING_FORM.Visible = False
                        End If
                        If InStr(myHoldFields, "RECORDING_FORMAT") <> 0 Then
                            TR_RECORDING_FORMAT.Visible = True
                        Else
                            TR_RECORDING_FORMAT.Visible = False
                        End If
                        If InStr(myHoldFields, "RECORDING_SPEED") <> 0 Then
                            TR_RECORDING_SPEED.Visible = True
                        Else
                            TR_RECORDING_SPEED.Visible = False
                        End If
                        If InStr(myHoldFields, "RECORDING_STORAGE_TECH") <> 0 Then
                            TR_RECORDING_STORAGE_TECH.Visible = True
                        Else
                            TR_RECORDING_STORAGE_TECH.Visible = False
                        End If
                        If InStr(myHoldFields, "RECORDING_PLAY_DURATION") <> 0 Then
                            TR_RECORDING_PLAY_DURATION.Visible = True
                        Else
                            TR_RECORDING_PLAY_DURATION.Visible = False
                        End If
                        If InStr(myHoldFields, "VIDEO_TYPEOFVISUAL") <> 0 Then
                            TR_VIDEO_TYPEOFVISUAL.Visible = True
                        Else
                            TR_VIDEO_TYPEOFVISUAL.Visible = False
                        End If
                        If InStr(myHoldFields, "VIDEO_COLOR") <> 0 Then
                            TR_VIDEO_COLOR.Visible = True
                        Else
                            TR_VIDEO_COLOR.Visible = False
                        End If
                        If InStr(myHoldFields, "PLAYBACK_CHANNELS") <> 0 Then
                            TR_PLAYBACK_CHANNELS.Visible = True
                        Else
                            TR_PLAYBACK_CHANNELS.Visible = False
                        End If
                        If InStr(myHoldFields, "TAPE_WIDTH") <> 0 Then
                            TR_TAPE_WIDTH.Visible = True
                        Else
                            TR_TAPE_WIDTH.Visible = False
                        End If
                        If InStr(myHoldFields, "TAPE_CONFIGURATION") <> 0 Then
                            TR_TAPE_CONFIGURATION.Visible = True
                        Else
                            TR_TAPE_CONFIGURATION.Visible = False
                        End If
                        If InStr(myHoldFields, "KIND_OF_DISK") <> 0 Then
                            TR_KIND_OF_DISK.Visible = True
                        Else
                            TR_KIND_OF_DISK.Visible = False
                        End If
                        If InStr(myHoldFields, "KIND_OF_CUTTING") <> 0 Then
                            TR_KIND_OF_CUTTING.Visible = True
                        Else
                            TR_KIND_OF_CUTTING.Visible = False
                        End If
                        If InStr(myHoldFields, "ENCODING_STANDARD") <> 0 Then
                            TR_ENCODING_STANDARD.Visible = True
                        Else
                            TR_ENCODING_STANDARD.Visible = False
                        End If
                        If InStr(myHoldFields, "CAPTURE_TECHNIQUE") <> 0 Then
                            TR_CAPTURE_TECHNIQUE.Visible = True
                        Else
                            TR_CAPTURE_TECHNIQUE.Visible = False
                        End If
                        If InStr(myHoldFields, "CARTOGRAPHIC_MEDIUM") <> 0 Then
                            TR_CARTOGRAPHIC_MEDIUM.Visible = True
                        Else
                            TR_CARTOGRAPHIC_MEDIUM.Visible = False
                        End If
                        If InStr(myHoldFields, "CARTOGRAPHIC_COORDINATES") <> 0 Then
                            TR_CARTOGRAPHIC_COORDINATES.Visible = True
                        Else
                            TR_CARTOGRAPHIC_COORDINATES.Visible = False
                        End If
                        If InStr(myHoldFields, "CARTOGRAPHIC_GEOGRAPHIC_LOCATION") <> 0 Then
                            TR_CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Visible = True
                        Else
                            TR_CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Visible = False
                        End If
                        If InStr(myHoldFields, "CARTOGRAPHIC_DATAGATHERING_DATE") <> 0 Then
                            TR_CARTOGRAPHIC_DATAGATHERING_DATE.Visible = True
                        Else
                            TR_CARTOGRAPHIC_DATAGATHERING_DATE.Visible = False
                        End If
                        If InStr(myHoldFields, "CARTOGRAPHIC_COMPILATION_DATE") <> 0 Then
                            TR_CARTOGRAPHIC_COMPILATION_DATE.Visible = True
                        Else
                            TR_CARTOGRAPHIC_COMPILATION_DATE.Visible = False
                        End If
                        If InStr(myHoldFields, "CARTOGRAPHIC_INSPECTION_DATE") <> 0 Then
                            TR_CARTOGRAPHIC_INSPECTION_DATE.Visible = True
                        Else
                            TR_CARTOGRAPHIC_INSPECTION_DATE.Visible = False
                        End If
                        If InStr(myHoldFields, "CARTOGRAPHIC_SCALE") <> 0 Then
                            TR_CARTOGRAPHIC_SCALE.Visible = True
                        Else
                            TR_CARTOGRAPHIC_SCALE.Visible = False
                        End If
                        If InStr(myHoldFields, "CARTOGRAPHIC_PROJECTION") <> 0 Then
                            TR_CARTOGRAPHIC_PROJECTION.Visible = True
                        Else
                            TR_CARTOGRAPHIC_PROJECTION.Visible = False
                        End If
                        If InStr(myHoldFields, "CREATION_DATE") <> 0 Then
                            TR_CREATION_DATE.Visible = True
                        Else
                            TR_CREATION_DATE.Visible = False
                        End If
                        If InStr(myHoldFields, "PHOTO_NO") <> 0 Then
                            TR_PHOTO_NO.Visible = True
                        Else
                            TR_PHOTO_NO.Visible = False
                        End If
                        If InStr(myHoldFields, "PHOTO_ALBUM_NO") <> 0 Then
                            TR_PHOTO_ALBUM_NO.Visible = True
                        Else
                            TR_PHOTO_ALBUM_NO.Visible = False
                        End If
                        If InStr(myHoldFields, "PHOTO_OCASION") <> 0 Then
                            TR_PHOTO_OCASION.Visible = True
                        Else
                            TR_PHOTO_OCASION.Visible = False
                        End If

                        If InStr(myHoldFields, "IMAGE_VIEW_TYPE") <> 0 Then
                            TR_IMAGE_VIEW_TYPE.Visible = True
                        Else
                            TR_IMAGE_VIEW_TYPE.Visible = False
                        End If

                        If InStr(myHoldFields, "VIEW_DATE") <> 0 Then
                            TR_VIEW_DATE.Visible = True
                        Else
                            TR_VIEW_DATE.Visible = False
                        End If

                        If InStr(myHoldFields, "THEME") <> 0 Then
                            TR_THEME.Visible = True
                        Else
                            TR_THEME.Visible = False
                        End If

                        If InStr(myHoldFields, "STYLE") <> 0 Then
                            TR_STYLE.Visible = True
                        Else
                            TR_STYLE.Visible = False
                        End If

                        If InStr(myHoldFields, "CULTURE") <> 0 Then
                            TR_CULTURE.Visible = True
                        Else
                            TR_CULTURE.Visible = False
                        End If

                        If InStr(myHoldFields, "CURRENT_STIE") <> 0 Then
                            TR_CURRENT_SITE.Visible = True
                        Else
                            TR_CURRENT_SITE.Visible = False
                        End If

                        If InStr(myHoldFields, "CREATION_SITE") <> 0 Then
                            TR_CREATION_SITE.Visible = True
                        Else
                            TR_CREATION_SITE.Visible = False
                        End If

                        If InStr(myHoldFields, "YARN_COUNT") <> 0 Then
                            TR_YARNCOUNT.Visible = True
                        Else
                            TR_YARNCOUNT.Visible = False
                        End If

                        If InStr(myHoldFields, "MATERIAL_TYPE") <> 0 Then
                            TR_MATERIAL_TYPE.Visible = True
                        Else
                            TR_MATERIAL_TYPE.Visible = False
                        End If

                        If InStr(myHoldFields, "TECHNIQUE") <> 0 Then
                            TR_TECHNIQUE.Visible = True
                        Else
                            TR_TECHNIQUE.Visible = False
                        End If

                        If InStr(myHoldFields, "TECH_DETAILS") <> 0 Then
                            TR_TECH_DETAILS.Visible = True
                        Else
                            TR_TECH_DETAILS.Visible = False
                        End If

                        If InStr(myHoldFields, "INSCRIPTIONS") <> 0 Then
                            TR_INSCRIPTIONS.Visible = True
                        Else
                            TR_INSCRIPTIONS.Visible = False
                        End If

                        If InStr(myHoldFields, "DESCRIPTION") <> 0 Then
                            TR_DESCRIPTION.Visible = True
                        Else
                            TR_DESCRIPTION.Visible = False
                        End If

                        If InStr(myHoldFields, "GLOBE_TYPE") <> 0 Then
                            TR_GLOBE_TYPE.Visible = True
                        Else
                            TR_GLOBE_TYPE.Visible = False
                        End If

                        If InStr(myHoldFields, "ALTER_DATE") <> 0 Then
                            TR_ALTER_DATE.Visible = True
                        Else
                            TR_ALTER_DATE.Visible = False
                        End If

                        If DDL_YesNo.Text = "Y" Then
                            TR_VOL_NO.Visible = True
                            TR_VOL_EDITORS.Visible = True
                            TR_VOL_TITLE.Visible = True
                        Else
                            TR_VOL_NO.Visible = False
                            TR_VOL_EDITORS.Visible = False
                            TR_VOL_TITLE.Visible = False
                        End If
                    Else
                        Table2.Visible = False
                    End If
                Else
                   Table2.Visible = False
                End If
            Else
                Table2.Visible = False
            End If
        Catch s As Exception
            Label6.Text = "Error: " & (s.Message())
            Label15.Text = ""
        Finally
            Command.Dispose()
            dt.Dispose()
            SqlConn.Close()
        End Try
    End Sub
    'Search Catalog
    Public Sub Search_Bttn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles Search_Bttn.Click
        Dim dtSearch As DataTable = Nothing
        Try
            Dim c, counter1, counter2, counter3, counter4, counter5 As Integer
            Dim iloop As Integer
            Dim strcurrentchar As Object

            'search string validation
            Dim mySearchString As Object = Nothing
            If txt_Search.Text <> "" Then
                mySearchString = TrimAll(txt_Search.Text)
                mySearchString = RemoveQuotes(mySearchString)
                If mySearchString.Length > 250 Then
                    Label6.Text = "Error:  Input is not Valid!"
                    Label15.Text = ""
                    Me.txt_Search.Focus()
                    Exit Sub
                End If
                mySearchString = " " & mySearchString & " "
                If InStr(1, mySearchString, "CREATE", 1) > 0 Or InStr(1, mySearchString, "DELETE", 1) > 0 Or InStr(1, mySearchString, "DROP", 1) > 0 Or InStr(1, mySearchString, "INSERT", 1) > 1 Or InStr(1, mySearchString, "TRACK", 1) > 1 Or InStr(1, mySearchString, "TRACE", 1) > 1 Then
                    Label6.Text = "Error:  Input is not Valid !"
                    Label15.Text = ""
                    Me.txt_Search.Focus()
                    Exit Sub
                End If
                mySearchString = TrimAll(mySearchString)
                'check unwanted characters
                c = 0
                counter1 = 0
                For iloop = 1 To Len(mySearchString)
                    strcurrentchar = Mid(mySearchString, iloop, 1)
                    If c = 0 Then
                        If Not InStr("';""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter1 = 1
                        End If
                    End If
                Next
                If counter1 = 1 Then
                    Label6.Text = "Error: data is not Valid !"
                    Label15.Text = ""
                    Me.txt_Search.Focus()
                    Exit Sub
                End If
            Else
                mySearchString = String.Empty
            End If

            'Field Name validation
            Dim myfield As String = Nothing
            If DropDownList1.Text <> "" Then
                myfield = TrimAll(DropDownList1.SelectedValue)
                myfield = RemoveQuotes(myfield)
                If myfield.Length > 50 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    Me.DropDownList1.Focus()
                    Exit Sub
                End If
                myfield = " " & myfield & " "
                If InStr(1, myfield, "CREATE", 1) > 0 Or InStr(1, myfield, "DELETE", 1) > 0 Or InStr(1, myfield, "DROP", 1) > 0 Or InStr(1, myfield, "INSERT", 1) > 1 Or InStr(1, myfield, "TRACK", 1) > 1 Or InStr(1, myfield, "TRACE", 1) > 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    Me.DropDownList1.Focus()
                    Exit Sub
                End If
                myfield = TrimAll(myfield)
                'check unwanted characters
                c = 0
                counter2 = 0
                For iloop = 1 To Len(myfield)
                    strcurrentchar = Mid(myfield, iloop, 1)
                    If c = 0 Then
                        If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter2 = 1
                        End If
                    End If
                Next
                If counter2 = 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    DropDownList1.Focus()
                    Exit Sub
                End If
            Else
                myfield = "TITLE"
            End If

            'Boolean Operator validation
            Dim myBoolean As String = Nothing
            If DropDownList2.Text <> "" Then
                myBoolean = TrimAll(DropDownList2.SelectedValue)
                myBoolean = RemoveQuotes(myBoolean)
                If myBoolean.Length > 20 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    Me.DropDownList2.Focus()
                    Exit Sub
                End If
                myBoolean = " " & myBoolean & " "
                If InStr(1, myBoolean, "CREATE", 1) > 0 Or InStr(1, myBoolean, "DELETE", 1) > 0 Or InStr(1, myBoolean, "DROP", 1) > 0 Or InStr(1, myBoolean, "INSERT", 1) > 1 Or InStr(1, myBoolean, "TRACK", 1) > 1 Or InStr(1, myBoolean, "TRACE", 1) > 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    Me.DropDownList2.Focus()
                    Exit Sub
                End If
                myBoolean = TrimAll(myBoolean)
                'check unwanted characters
                c = 0
                counter3 = 0
                For iloop = 1 To Len(myBoolean)
                    strcurrentchar = Mid(myBoolean, iloop, 1)
                    If c = 0 Then
                        If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter3 = 1
                        End If
                    End If
                Next
                If counter3 = 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    DropDownList2.Focus()
                    Exit Sub
                End If
            Else
                myBoolean = "AND"
            End If

            'Order by validation
            Dim myOrderBy As String = Nothing
            If DropDownList3.Text <> "" Then
                myOrderBy = TrimAll(DropDownList3.SelectedValue)
                myOrderBy = RemoveQuotes(myOrderBy)
                If myOrderBy.Length > 20 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    Me.DropDownList3.Focus()
                    Exit Sub
                End If
                myOrderBy = " " & myOrderBy & " "
                If InStr(1, myOrderBy, "CREATE", 1) > 0 Or InStr(1, myOrderBy, "DELETE", 1) > 0 Or InStr(1, myOrderBy, "DROP", 1) > 0 Or InStr(1, myOrderBy, "INSERT", 1) > 1 Or InStr(1, myOrderBy, "TRACK", 1) > 1 Or InStr(1, myOrderBy, "TRACE", 1) > 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    Me.DropDownList3.Focus()
                    Exit Sub
                End If
                myOrderBy = TrimAll(myOrderBy)
                'check unwanted characters
                c = 0
                counter4 = 0
                For iloop = 1 To Len(myOrderBy)
                    strcurrentchar = Mid(myOrderBy, iloop, 1)
                    If c = 0 Then
                        If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter4 = 1
                        End If
                    End If
                Next
                If counter4 = 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    DropDownList3.Focus()
                    Exit Sub
                End If
            Else
                myOrderBy = "TITLE"
            End If

            'Sort by validation
            Dim mySortBy As String = Nothing
            If DropDownList4.Text <> "" Then
                mySortBy = TrimAll(DropDownList4.SelectedValue)
                mySortBy = RemoveQuotes(mySortBy)
                If mySortBy.Length > 5 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    Me.DropDownList4.Focus()
                    Exit Sub
                End If
                mySortBy = " " & mySortBy & " "
                If InStr(1, mySortBy, "CREATE", 1) > 0 Or InStr(1, mySortBy, "DELETE", 1) > 0 Or InStr(1, mySortBy, "DROP", 1) > 0 Or InStr(1, mySortBy, "INSERT", 1) > 1 Or InStr(1, mySortBy, "TRACK", 1) > 1 Or InStr(1, mySortBy, "TRACE", 1) > 1 Then
                    Label6.Text = "Error: Input is not Valid !" & Label15.Text = ""
                    Me.DropDownList4.Focus()
                    Exit Sub
                End If
                mySortBy = TrimAll(mySortBy)
                'check unwanted characters
                c = 0
                counter5 = 0
                For iloop = 1 To Len(mySortBy)
                    strcurrentchar = Mid(mySortBy, iloop, 1)
                    If c = 0 Then
                        If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter5 = 1
                        End If
                    End If
                Next
                If counter5 = 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    DropDownList4.Focus()
                    Exit Sub
                End If
            Else
                mySortBy = "ASC"
            End If


            '**********************************************************************************
            Dim SQL As String = Nothing
            SQL = "SELECT CAT_NO, TITLE FROM CATS_AUTHORS_VIEW WHERE (CAT_NO IS NOT NULL) AND (BIB_CODE <>'S') "

            If txt_Search.Text <> "" Then
                If myBoolean = "LIKE" Then
                    SQL = SQL & " AND (" & myfield & " LIKE N'%" & Trim(mySearchString) & "%') "
                End If
                    If myBoolean = "SW" Then
                        SQL = SQL & " AND (" & myfield & " LIKE N'" & Trim(mySearchString) & "%') "
                    End If
                    If myBoolean = "EW" Then
                        SQL = SQL & " AND (" & myfield & " LIKE N'%" & Trim(mySearchString) & "') "
                    End If
                    If myBoolean = "AND" Then
                        Dim h As Integer
                        Dim myNewSearchString As Object
                        myNewSearchString = Split(mySearchString, " ")
                        SQL = SQL & " AND (" & myfield & " LIKE N'%" & Trim(myNewSearchString(0)) & "%' "
                        For h = 1 To UBound(myNewSearchString)
                            SQL = SQL & " AND " & myfield & " LIKE N'%" & Trim(myNewSearchString(h)) & "%'"
                        Next
                        SQL = SQL & ")"
                    End If
                    If myBoolean = "OR" Then
                        Dim h As Integer
                        Dim myNewSearchString As Object
                        myNewSearchString = Split(mySearchString, " ")
                        SQL = SQL & " AND (" & myfield & " LIKE N'%" & Trim(myNewSearchString(0)) & "%' "
                        For h = 1 To UBound(myNewSearchString)
                            SQL = SQL & " OR " & myfield & " LIKE N'%" & Trim(myNewSearchString(h)) & "%' "
                        Next
                        SQL = SQL & ")"
                    End If
                End If

            SQL = SQL & " ORDER BY " & myOrderBy & " " & mySortBy & " "

            Dim ds As New DataSet
            Dim da As New SqlDataAdapter(SQL, SqlConn)
            If SqlConn.State = 0 Then
                SqlConn.Open()
            End If
            da.Fill(ds)

            dtSearch = ds.Tables(0).Copy
            Dim RecordCount As Long = 0
            If dtSearch.Rows.Count = 0 Then
                Me.Grid1_Search.DataSource = Nothing
                Grid1_Search.DataBind()
                Label1.Text = "Total Record(s): 0 "
                Delete_Bttn.Enabled = False
                Delete_Photo_Bttn.Enabled = False
            Else
                Grid1_Search.Visible = True
                RecordCount = dtSearch.Rows.Count
                Grid1_Search.DataSource = dtSearch
                Grid1_Search.DataBind()
                Label1.Text = "Total Record(s): " & RecordCount
                Delete_Bttn.Enabled = True
                Delete_Photo_Bttn.Enabled = True
            End If
            ViewState("dt") = dtSearch
            UpdatePanel1.Update()
        Catch s As Exception
            Label6.Text = "Error: " & (s.Message())
            Label15.Text = ""
        Finally
            SqlConn.Close()
        End Try
    End Sub
    Private Function ColumnEqual(ByVal A As Object, ByVal B As Object) As Boolean
        If A Is DBNull.Value And B Is DBNull.Value Then Return True ' Both are DBNull.Value.
        If A Is DBNull.Value Or B Is DBNull.Value Then Return False ' Only one is DBNull.Value.
        Return A = B                                                ' Value type standard comparison
    End Function
    'grid view page index changing event
    Protected Sub Grid1_Search_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs) Handles Grid1_Search.PageIndexChanging
        Try
            'rebind datagrid
            Grid1_Search.DataSource = ViewState("dt") 'temp
            Grid1_Search.PageIndex = e.NewPageIndex
            index = e.NewPageIndex * Grid1_Search.PageSize
            Grid1_Search.DataBind()
        Catch s As Exception
            Label6.Text = "Error:  there is error in page index !"
            Label15.Text = ""
        End Try
    End Sub
    'property to set sortdirection
    Private Property GridViewSortDirection() As String
        Get
            Return IIf(ViewState("SortDirection") = Nothing, "ASC", ViewState("SortDirection"))
        End Get
        Set(ByVal value As String)
            ViewState("SortDirection") = value
        End Set
    End Property
    'property to set gridviewsortexpression
    Private Property GridViewSortExpression() As String
        Get
            Return IIf(ViewState("SortExpression") = Nothing, String.Empty, ViewState("SortExpression"))
        End Get
        Set(ByVal value As String)
            ViewState("SortExpression") = value
        End Set
    End Property
    'private fxn to get sort direction
    Private Function GetSortDirection() As String
        Select Case GridViewSortDirection
            Case "ASC"
                GridViewSortDirection = "DESC"
            Case "DESC"
                GridViewSortDirection = "ASC"
        End Select
        Return GridViewSortDirection
    End Function
    'fxn to sort data table
    Protected Function SortDataTable(ByVal datatable As DataTable, ByVal isPageIndexChanging As Boolean) As DataView
        If Not datatable Is Nothing Then
            Dim dataView As New DataView(datatable)
            If GridViewSortExpression <> String.Empty Then
                If isPageIndexChanging Then
                    dataView.Sort = String.Format("{0} {1}", GridViewSortExpression, GridViewSortDirection)
                Else
                    dataView.Sort = String.Format("{0} {1}", GridViewSortExpression, GetSortDirection())
                End If
            End If
            Return dataView
        Else
            Return New DataView()
        End If
    End Function
    'gridview sorting event
    Protected Sub Grid1_Search_Sorting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewSortEventArgs) Handles Grid1_Search.Sorting
        Dim temp As DataTable = CType(ViewState("dt"), DataTable)
        GridViewSortExpression = e.SortExpression
        Grid1_Search.DataSource = temp
        Dim pageIndex As Integer = Grid1_Search.PageIndex
        Grid1_Search.DataSource = SortDataTable(Grid1_Search.DataSource, False)
        Grid1_Search.DataBind()
        Grid1_Search.PageIndex = pageIndex
    End Sub
    Protected Sub Grid1_Search_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs) Handles Grid1_Search.RowDataBound

        If e.Row.RowType = DataControlRowType.DataRow Then
            Dim Lblsr As Label = e.Row.FindControl("lblsr")
            Srno = index + 1
            If Lblsr Is Nothing = False Then
                Lblsr.Text = Srno
                index += 1
            End If
            e.Row.Attributes("onmouseover") = "this.style.cursor='hand';this.style.textDecoration='bold';this.style.background='#FFDFDF'"
            e.Row.Attributes("onmouseout") = "this.style.textDecoration='none';this.style.background='none'"
            'e.Row.Attributes("onclick") = ClientScript.GetPostBackClientHyperlink(Me, "Edit$" & Convert.ToString(e.Row.RowIndex))
        End If
    End Sub
    Private Shared Function t() As Object
        Throw New NotImplementedException
    End Function
    'get value of row from grid
    Private Sub Grid1_Search_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs) Handles Grid1_Search.RowCommand
        If e.CommandName = "Select" Then
            Dim myRowID, ID As Integer
            myRowID = e.CommandArgument.ToString()
            If Grid1_Search.Rows(myRowID).Cells(3).Text <> "" Then
                ID = Grid1_Search.Rows(myRowID).Cells(3).Text
                txt_Display_Value.Text = ID
                DDL_Display.SelectedValue = "CAT_NO"
                Me.DisplayRecord()
            Else
                Exit Sub
            End If
        Else
            Label6.Text = "Display Error: No Record Selected!"
            Label15.Text = ""
        End If
        DDL_Bib_Level.Focus()
    End Sub 'Grid1_ItemCommand
    'save record
    Public Sub Acq_Save_Bttn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles Acq_Save_Bttn.Click

        If IsPostBack = True Then
            'check unwanted characters
            Dim iloop As Integer
            Dim strcurrentchar As Object
            Dim c As Integer
            Dim counter1, counter2, counter3, counter4, counter5, counter6, counter7, counter8, counter9, counter10, counter11, counter12, counter13, counter14, counter15, counter16, counter17, counter18, counter19 As Integer
            Dim counter20, counter21, counter22, counter23, counter24, counter25, counter26, counter27, counter28, counter29, counter30, counter31, counter32, counter33, counter34, counter35, counter36, counter37, counter38, counter39 As Integer
            Dim counter40, counter41, counter42, counter43, counter44, counter45, counter46, counter47, counter48, counter49, counter50, counter51, counter52, counter53, counter54 As Integer
            Dim counter55, counter56, counter57, counter58, counter59, counter60, counter61, counter62, counter63, counter64, counter65, counter66, counter67, counter68, counter69, counter70 As Integer
            Dim counter71, counter72, counter73, counter74, counter75 As Integer
            Dim counter76, counter77, counter78, counter79, counter80, counter81, counter82 As Integer
            Dim thisTransaction As SqlClient.SqlTransaction = Nothing

            Dim intCat As Integer = 0
            Dim intAcqID As Integer = 0
            Try
                'validation for DDL_Bib_Level
                Dim myBibLevel As Object = Nothing
                myBibLevel = DDL_Bib_Level.SelectedValue
                If Not String.IsNullOrEmpty(myBibLevel) Then
                    myBibLevel = RemoveQuotes(myBibLevel)
                    If myBibLevel.Length > 2 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Bib_Level.Focus()
                        Exit Sub
                    End If
                    myBibLevel = " " & myBibLevel & " "
                    If InStr(1, myBibLevel, "CREATE", 1) > 0 Or InStr(1, myBibLevel, "DELETE", 1) > 0 Or InStr(1, myBibLevel, "DROP", 1) > 0 Or InStr(1, myBibLevel, "INSERT", 1) > 1 Or InStr(1, myBibLevel, "TRACK", 1) > 1 Or InStr(1, myBibLevel, "TRACE", 1) > 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Bib_Level.Focus()
                        Exit Sub
                    End If
                    myBibLevel = TrimX(myBibLevel)
                    'check unwanted characters
                    c = 0
                    counter1 = 0
                    For iloop = 1 To Len(myBibLevel)
                        strcurrentchar = Mid(myBibLevel, iloop, 1)
                        If c = 0 Then
                            If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter1 = 1
                            End If
                        End If
                    Next
                    If counter1 = 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Bib_Level.Focus()
                        Exit Sub
                    End If
                Else
                    myBibLevel = "M"
                End If

                'validation for DDL_Mat_Type
                Dim myMatType As Object = Nothing
                myMatType = DDL_Mat_Type.SelectedValue
                If Not String.IsNullOrEmpty(myMatType) Then
                    myMatType = RemoveQuotes(myMatType)
                    If myMatType.Length > 2 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Mat_Type.Focus()
                        Exit Sub
                    End If
                    myMatType = " " & myMatType & " "
                    If InStr(1, myMatType, "CREATE", 1) > 0 Or InStr(1, myMatType, "DELETE", 1) > 0 Or InStr(1, myMatType, "DROP", 1) > 0 Or InStr(1, myMatType, "INSERT", 1) > 1 Or InStr(1, myMatType, "TRACK", 1) > 1 Or InStr(1, myMatType, "TRACE", 1) > 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Mat_Type.Focus()
                        Exit Sub
                    End If
                    myMatType = TrimX(myMatType)
                    'check unwanted characters
                    c = 0
                    counter2 = 0
                    For iloop = 1 To Len(myMatType)
                        strcurrentchar = Mid(myBibLevel, iloop, 1)
                        If c = 0 Then
                            If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter2 = 1
                            End If
                        End If
                    Next
                    If counter2 = 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Mat_Type.Focus()
                        Exit Sub
                    End If
                Else
                    myMatType = "B"
                End If

                'validation for document Type
                Dim myDocType As Object = Nothing
                myDocType = DDL_Doc_Type.SelectedValue
                If Not String.IsNullOrEmpty(myDocType) Then
                    myDocType = RemoveQuotes(myDocType)
                    If myDocType.Length > 4 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Doc_Type.Focus()
                        Exit Sub
                    End If
                    myDocType = " " & myDocType & " "
                    If InStr(1, myDocType, "CREATE", 1) > 0 Or InStr(1, myDocType, "DELETE", 1) > 0 Or InStr(1, myDocType, "DROP", 1) > 0 Or InStr(1, myDocType, "INSERT", 1) > 1 Or InStr(1, myDocType, "TRACK", 1) > 1 Or InStr(1, myDocType, "TRACE", 1) > 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Doc_Type.Focus()
                        Exit Sub
                    End If
                    myDocType = TrimX(myDocType)
                    'check unwanted characters
                    c = 0
                    counter3 = 0
                    For iloop = 1 To Len(myDocType)
                        strcurrentchar = Mid(myDocType, iloop, 1)
                        If c = 0 Then
                            If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter3 = 1
                            End If
                        End If
                    Next
                    If counter3 = 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Doc_Type.Focus()
                        Exit Sub
                    End If
                Else
                    myDocType = "BK"
                End If

                'validation for Lang DDL_Lang
                Dim myLangCode As Object = Nothing
                myLangCode = DDL_Lang.SelectedValue
                If Not String.IsNullOrEmpty(myLangCode) Then
                    myLangCode = RemoveQuotes(myLangCode)
                    If myLangCode.Length > 4 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Lang.Focus()
                        Exit Sub
                    End If
                    myLangCode = " " & myLangCode & " "
                    If InStr(1, myLangCode, "CREATE", 1) > 0 Or InStr(1, myLangCode, "DELETE", 1) > 0 Or InStr(1, myLangCode, "DROP", 1) > 0 Or InStr(1, myLangCode, "INSERT", 1) > 1 Or InStr(1, myLangCode, "TRACK", 1) > 1 Or InStr(1, myLangCode, "TRACE", 1) > 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Lang.Focus()
                        Exit Sub
                    End If
                    myLangCode = TrimX(myLangCode)
                    'check unwanted characters
                    c = 0
                    counter4 = 0
                    For iloop = 1 To Len(myLangCode)
                        strcurrentchar = Mid(myLangCode, iloop, 1)
                        If c = 0 Then
                            If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter4 = 1
                            End If
                        End If
                    Next
                    If counter4 = 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_Lang.Focus()
                        Exit Sub
                    End If
                Else
                    myLangCode = "ENG"
                End If

                'DDL_YesNo for Multi-Vol Y/N
                Dim myYesNo As Object = Nothing
                myYesNo = DDL_YesNo.SelectedValue
                If Not String.IsNullOrEmpty(myYesNo) Then
                    myYesNo = RemoveQuotes(myYesNo)
                    If myYesNo.Length > 2 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_YesNo.Focus()
                        Exit Sub
                    End If
                    myYesNo = " " & myYesNo & " "
                    If InStr(1, myYesNo, "CREATE", 1) > 0 Or InStr(1, myYesNo, "DELETE", 1) > 0 Or InStr(1, myYesNo, "DROP", 1) > 0 Or InStr(1, myYesNo, "INSERT", 1) > 1 Or InStr(1, myYesNo, "TRACK", 1) > 1 Or InStr(1, myYesNo, "TRACE", 1) > 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_YesNo.Focus()
                        Exit Sub
                    End If
                    myYesNo = TrimX(myYesNo)
                    'check unwanted characters
                    c = 0
                    counter5 = 0
                    For iloop = 1 To Len(myYesNo)
                        strcurrentchar = Mid(myYesNo, iloop, 1)
                        If c = 0 Then
                            If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter5 = 1
                            End If
                        End If
                    Next
                    If counter5 = 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        DDL_YesNo.Focus()
                        Exit Sub
                    End If
                Else
                    myYesNo = "N"
                End If

                'Server Validation for  total vol - numeric only
                Dim TotalVol As Integer = Nothing
                If myYesNo = "Y" Then
                    If txt_Cat_TotalVol.Text <> "" Then
                        TotalVol = TrimX(txt_Cat_TotalVol.Text)
                        TotalVol = RemoveQuotes(TotalVol)
                        If Len(TotalVol.ToString) > 5 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_TotalVol.Focus()
                            Exit Sub
                        End If

                        If Not IsNumeric(TotalVol) = True Then 'maximum length
                            Label6.Text = " Data must be Numeric Only.. "
                            Label15.Text = ""
                            txt_Cat_TotalVol.Focus()
                            Exit Sub
                        End If

                        TotalVol = " " & TotalVol & " "
                        If InStr(1, TotalVol, "CREATE", 1) > 0 Or InStr(1, TotalVol, "DELETE", 1) > 0 Or InStr(1, TotalVol, "DROP", 1) > 0 Or InStr(1, TotalVol, "INSERT", 1) > 1 Or InStr(1, TotalVol, "TRACK", 1) > 1 Or InStr(1, TotalVol, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_TotalVol.Focus()
                            Exit Sub
                        End If
                        TotalVol = TrimX(TotalVol)
                        'check unwanted characters
                        c = 0
                        counter6 = 0
                        For iloop = 1 To Len(TotalVol.ToString)
                            strcurrentchar = Mid(TotalVol, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#$^*+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter6 = 1
                                End If
                            End If
                        Next
                        If counter6 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_TotalVol.Focus()
                            Exit Sub
                        End If
                    Else
                        TotalVol = Nothing
                    End If
                End If

                'Server Validation for txt_Cat_ISBN
                Dim myISBN As Object = Nothing
                If txt_Cat_ISBN.Text <> "" Then
                    myISBN = TrimX(txt_Cat_ISBN.Text)
                    myISBN = RemoveQuotes(myISBN)
                    If myISBN.Length > 30 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ISBN.Focus()
                        Exit Sub
                    End If

                    myISBN = " " & myISBN & " "
                    If InStr(1, myISBN, "CREATE", 1) > 0 Or InStr(1, myISBN, "DELETE", 1) > 0 Or InStr(1, myISBN, "DROP", 1) > 0 Or InStr(1, myISBN, "INSERT", 1) > 1 Or InStr(1, myISBN, "TRACK", 1) > 1 Or InStr(1, myISBN, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ISBN.Focus()
                        Exit Sub
                    End If
                    myISBN = TrimX(myISBN)
                    'check unwanted characters
                    c = 0
                    counter7 = 0
                    For iloop = 1 To Len(myISBN.ToString)
                        strcurrentchar = Mid(myISBN, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#$^*+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter7 = 1
                            End If
                        End If
                    Next
                    If counter7 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ISBN.Focus()
                        Exit Sub
                    End If

                    'check duplicate isbn
                    Dim str As Object = Nothing
                    Dim flag As Object = Nothing
                    str = "SELECT CAT_NO FROM CATS WHERE (replace(STANDARD_NO,'-','') = '" & Replace(myISBN.ToString, "-", "") & "' ) "
                    Dim cmd1 As New SqlCommand(str, SqlConn)
                    SqlConn.Open()
                    flag = cmd1.ExecuteScalar
                    If flag <> Nothing Then
                        Label6.Text = "This ISBN Already Exists ! "
                        Label15.Text = ""
                        Me.txt_Cat_ISBN.Focus()
                        Exit Sub
                    End If
                    SqlConn.Close()
                Else
                    myISBN = ""
                End If

                'Server validation for Standard Specification No : txt_Cat_SPNo
                Dim mySPNo As Object = Nothing
                If txt_Cat_SPNo.Text <> "" Then
                    mySPNo = TrimX(txt_Cat_SPNo.Text)
                    mySPNo = RemoveQuotes(mySPNo)
                    If mySPNo.Length > 100 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_SPNo.Focus()
                        Exit Sub
                    End If

                    mySPNo = " " & mySPNo & " "
                    If InStr(1, mySPNo, "CREATE", 1) > 0 Or InStr(1, mySPNo, "DELETE", 1) > 0 Or InStr(1, mySPNo, "DROP", 1) > 0 Or InStr(1, mySPNo, "INSERT", 1) > 1 Or InStr(1, mySPNo, "TRACK", 1) > 1 Or InStr(1, mySPNo, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_SPNo.Focus()
                        Exit Sub
                    End If
                    mySPNo = TrimX(mySPNo)
                    'check unwanted characters
                    c = 0
                    counter8 = 0
                    For iloop = 1 To Len(mySPNo.ToString)
                        strcurrentchar = Mid(mySPNo, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#$^*+|?<>=%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter8 = 1
                            End If
                        End If
                    Next
                    If counter8 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_SPNo.Focus()
                        Exit Sub
                    End If
                Else
                    mySPNo = ""
                End If

                'Server validation for Standard Specification No : txt_Cat_ManualNo
                Dim myManualNo As Object = Nothing
                If txt_Cat_ManualNo.Text <> "" Then
                    myManualNo = TrimX(txt_Cat_ManualNo.Text)
                    myManualNo = RemoveQuotes(myManualNo)
                    If myManualNo.Length > 100 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ManualNo.Focus()
                        Exit Sub
                    End If

                    myManualNo = " " & myManualNo & " "
                    If InStr(1, myManualNo, "CREATE", 1) > 0 Or InStr(1, myManualNo, "DELETE", 1) > 0 Or InStr(1, myManualNo, "DROP", 1) > 0 Or InStr(1, myManualNo, "INSERT", 1) > 1 Or InStr(1, myManualNo, "TRACK", 1) > 1 Or InStr(1, myManualNo, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ManualNo.Focus()
                        Exit Sub
                    End If
                    myManualNo = TrimX(myManualNo)
                    'check unwanted characters
                    c = 0
                    counter9 = 0
                    For iloop = 1 To Len(myManualNo.ToString)
                        strcurrentchar = Mid(myManualNo, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#$^*+|?<>=%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter9 = 1
                            End If
                        End If
                    Next
                    If counter9 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ManualNo.Focus()
                        Exit Sub
                    End If
                Else
                    myManualNo = ""
                End If

                'Server validation for  : txt_Cat_ReportNo
                Dim myReportNo As Object = Nothing
                If txt_Cat_ReportNo.Text <> "" Then
                    myReportNo = TrimX(txt_Cat_ReportNo.Text)
                    myReportNo = RemoveQuotes(myReportNo)
                    If myReportNo.Length > 100 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ReportNo.Focus()
                        Exit Sub
                    End If

                    myReportNo = " " & myReportNo & " "
                    If InStr(1, myReportNo, "CREATE", 1) > 0 Or InStr(1, myReportNo, "DELETE", 1) > 0 Or InStr(1, myReportNo, "DROP", 1) > 0 Or InStr(1, myReportNo, "INSERT", 1) > 1 Or InStr(1, myReportNo, "TRACK", 1) > 1 Or InStr(1, myReportNo, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ReportNo.Focus()
                        Exit Sub
                    End If
                    myReportNo = TrimX(myReportNo)
                    'check unwanted characters
                    c = 0
                    counter10 = 0
                    For iloop = 1 To Len(myReportNo.ToString)
                        strcurrentchar = Mid(myReportNo, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#$^*+|?<>=%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter10 = 1
                            End If
                        End If
                    Next
                    If counter10 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ReportNo.Focus()
                        Exit Sub
                    End If
                Else
                    myReportNo = ""
                End If

                'Server validation for  : txt_Cat_Title
                Dim myTitle As Object = Nothing
                If txt_Cat_Title.Text <> "" Then
                    myTitle = TrimAll(txt_Cat_Title.Text)
                    myTitle = RemoveQuotes(myTitle)
                    If myTitle.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Title.Focus()
                        Exit Sub
                    End If

                    myTitle = " " & myTitle & " "
                    If InStr(1, myTitle, "CREATE", 1) > 0 Or InStr(1, myTitle, "DELETE", 1) > 0 Or InStr(1, myTitle, "DROP", 1) > 0 Or InStr(1, myTitle, "INSERT", 1) > 1 Or InStr(1, myTitle, "TRACK", 1) > 1 Or InStr(1, myTitle, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Title.Focus()
                        Exit Sub
                    End If
                    myTitle = TrimAll(myTitle)
                    'check unwanted characters
                    c = 0
                    counter11 = 0
                    For iloop = 1 To Len(myTitle.ToString)
                        strcurrentchar = Mid(myTitle, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!+|""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter11 = 1
                            End If
                        End If
                    Next
                    If counter11 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Title.Focus()
                        Exit Sub
                    End If
                Else
                    Label6.Text = " Plz Enter Data... "
                    Label15.Text = ""
                    Me.txt_Cat_Title.Focus()
                    Exit Sub
                End If

                'Server validation for  : txt_Cat_SubTitle
                Dim mySubTitle As Object = Nothing
                If txt_Cat_SubTitle.Text <> "" Then
                    mySubTitle = TrimAll(txt_Cat_SubTitle.Text)
                    mySubTitle = RemoveQuotes(mySubTitle)
                    If mySubTitle.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_SubTitle.Focus()
                        Exit Sub
                    End If

                    mySubTitle = " " & mySubTitle & " "
                    If InStr(1, mySubTitle, "CREATE", 1) > 0 Or InStr(1, mySubTitle, "DELETE", 1) > 0 Or InStr(1, mySubTitle, "DROP", 1) > 0 Or InStr(1, mySubTitle, "INSERT", 1) > 1 Or InStr(1, mySubTitle, "TRACK", 1) > 1 Or InStr(1, mySubTitle, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_SubTitle.Focus()
                        Exit Sub
                    End If
                    mySubTitle = TrimAll(mySubTitle)
                    'check unwanted characters
                    c = 0
                    counter12 = 0
                    For iloop = 1 To Len(mySubTitle.ToString)
                        strcurrentchar = Mid(mySubTitle, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter12 = 1
                            End If
                        End If
                    Next
                    If counter12 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_SubTitle.Focus()
                        Exit Sub
                    End If
                Else
                    mySubTitle = ""
                End If

                'Server validation for  : txt_Cat_VarTitle
                Dim myVarTitle As Object = Nothing
                If txt_Cat_VarTitle.Text <> "" Then
                    myVarTitle = TrimAll(txt_Cat_VarTitle.Text)
                    myVarTitle = RemoveQuotes(myVarTitle)
                    If myVarTitle.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_VarTitle.Focus()
                        Exit Sub
                    End If

                    myVarTitle = " " & myVarTitle & " "
                    If InStr(1, myVarTitle, "CREATE", 1) > 0 Or InStr(1, myVarTitle, "DELETE", 1) > 0 Or InStr(1, myVarTitle, "DROP", 1) > 0 Or InStr(1, myVarTitle, "INSERT", 1) > 1 Or InStr(1, myVarTitle, "TRACK", 1) > 1 Or InStr(1, myVarTitle, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_VarTitle.Focus()
                        Exit Sub
                    End If
                    myVarTitle = TrimAll(myVarTitle)
                    'check unwanted characters
                    c = 0
                    counter13 = 0
                    For iloop = 1 To Len(myVarTitle.ToString)
                        strcurrentchar = Mid(myVarTitle, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter13 = 1
                            End If
                        End If
                    Next
                    If counter13 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_VarTitle.Focus()
                        Exit Sub
                    End If
                Else
                    myVarTitle = ""
                End If

                'Server validation for  : txt_Cat_ScholarName
                Dim myScholarName As Object = Nothing
                If txt_Cat_ScholarName.Text <> "" Then
                    myScholarName = TrimAll(txt_Cat_ScholarName.Text)
                    myScholarName = RemoveQuotes(myScholarName)
                    If myScholarName.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ScholarName.Focus()
                        Exit Sub
                    End If

                    myScholarName = " " & myScholarName & " "
                    If InStr(1, myScholarName, "CREATE", 1) > 0 Or InStr(1, myScholarName, "DELETE", 1) > 0 Or InStr(1, myScholarName, "DROP", 1) > 0 Or InStr(1, myScholarName, "INSERT", 1) > 1 Or InStr(1, myScholarName, "TRACK", 1) > 1 Or InStr(1, myScholarName, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ScholarName.Focus()
                        Exit Sub
                    End If
                    myScholarName = TrimAll(myScholarName)
                    'check unwanted characters
                    c = 0
                    counter14 = 0
                    For iloop = 1 To Len(myScholarName.ToString)
                        strcurrentchar = Mid(myScholarName, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter14 = 1
                            End If
                        End If
                    Next
                    If counter14 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ScholarName.Focus()
                        Exit Sub
                    End If
                Else
                    myScholarName = ""
                End If

                'Server validation for  : txt_Cat_ScholarDept
                Dim myScholarDept As Object = Nothing
                If txt_Cat_ScholarDept.Text <> "" Then
                    myScholarDept = TrimAll(txt_Cat_ScholarDept.Text)
                    myScholarDept = RemoveQuotes(myScholarDept)
                    If myScholarDept.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ScholarDept.Focus()
                        Exit Sub
                    End If

                    myScholarDept = " " & myScholarDept & " "
                    If InStr(1, myScholarDept, "CREATE", 1) > 0 Or InStr(1, myScholarDept, "DELETE", 1) > 0 Or InStr(1, myScholarDept, "DROP", 1) > 0 Or InStr(1, myScholarDept, "INSERT", 1) > 1 Or InStr(1, myScholarDept, "TRACK", 1) > 1 Or InStr(1, myScholarDept, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ScholarDept.Focus()
                        Exit Sub
                    End If
                    myScholarDept = TrimAll(myScholarDept)
                    'check unwanted characters
                    c = 0
                    counter15 = 0
                    For iloop = 1 To Len(myScholarDept.ToString)
                        strcurrentchar = Mid(myScholarDept, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter15 = 1
                            End If
                        End If
                    Next
                    If counter15 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ScholarDept.Focus()
                        Exit Sub
                    End If
                Else
                    myScholarDept = ""
                End If

                'Server validation for  : txt_Cat_GuideName
                Dim myGuideName As Object = Nothing
                If txt_Cat_GuideName.Text <> "" Then
                    myGuideName = TrimAll(txt_Cat_GuideName.Text)
                    myGuideName = RemoveQuotes(myGuideName)
                    If myGuideName.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_GuideName.Focus()
                        Exit Sub
                    End If

                    myGuideName = " " & myGuideName & " "
                    If InStr(1, myGuideName, "CREATE", 1) > 0 Or InStr(1, myGuideName, "DELETE", 1) > 0 Or InStr(1, myGuideName, "DROP", 1) > 0 Or InStr(1, myGuideName, "INSERT", 1) > 1 Or InStr(1, myGuideName, "TRACK", 1) > 1 Or InStr(1, myGuideName, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_GuideName.Focus()
                        Exit Sub
                    End If
                    myGuideName = TrimAll(myGuideName)
                    'check unwanted characters
                    c = 0
                    counter16 = 0
                    For iloop = 1 To Len(myGuideName.ToString)
                        strcurrentchar = Mid(myGuideName, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter16 = 1
                            End If
                        End If
                    Next
                    If counter16 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_GuideName.Focus()
                        Exit Sub
                    End If
                Else
                    myGuideName = ""
                End If

                'Server validation for  : txt_Cat_GuideDept
                Dim myGuideDept As Object = Nothing
                If txt_Cat_GuideDept.Text <> "" Then
                    myGuideDept = TrimAll(txt_Cat_GuideDept.Text)
                    myGuideDept = RemoveQuotes(myGuideDept)
                    If myGuideDept.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_GuideDept.Focus()
                        Exit Sub
                    End If

                    myGuideDept = " " & myGuideDept & " "
                    If InStr(1, myGuideDept, "CREATE", 1) > 0 Or InStr(1, myGuideDept, "DELETE", 1) > 0 Or InStr(1, myGuideDept, "DROP", 1) > 0 Or InStr(1, myGuideDept, "INSERT", 1) > 1 Or InStr(1, myGuideDept, "TRACK", 1) > 1 Or InStr(1, myGuideDept, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_GuideDept.Focus()
                        Exit Sub
                    End If
                    myGuideDept = TrimAll(myGuideDept)
                    'check unwanted characters
                    c = 0
                    counter17 = 0
                    For iloop = 1 To Len(myGuideDept.ToString)
                        strcurrentchar = Mid(myGuideDept, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter17 = 1
                            End If
                        End If
                    Next
                    If counter17 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_GuideDept.Focus()
                        Exit Sub
                    End If
                Else
                    myGuideDept = ""
                End If

                'Server validation for  : txt_Cat_DegreeName
                Dim myDegreeName As Object = Nothing
                If txt_Cat_DegreeName.Text <> "" Then
                    myDegreeName = TrimAll(txt_Cat_DegreeName.Text)
                    myDegreeName = RemoveQuotes(myDegreeName)
                    If myDegreeName.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_DegreeName.Focus()
                        Exit Sub
                    End If

                    myDegreeName = " " & myDegreeName & " "
                    If InStr(1, myDegreeName, "CREATE", 1) > 0 Or InStr(1, myDegreeName, "DELETE", 1) > 0 Or InStr(1, myDegreeName, "DROP", 1) > 0 Or InStr(1, myDegreeName, "INSERT", 1) > 1 Or InStr(1, myDegreeName, "TRACK", 1) > 1 Or InStr(1, myDegreeName, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_DegreeName.Focus()
                        Exit Sub
                    End If
                    myDegreeName = TrimAll(myDegreeName)
                    'check unwanted characters
                    c = 0
                    counter18 = 0
                    For iloop = 1 To Len(myDegreeName.ToString)
                        strcurrentchar = Mid(myDegreeName, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter18 = 1
                            End If
                        End If
                    Next
                    If counter18 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_DegreeName.Focus()
                        Exit Sub
                    End If
                Else
                    myDegreeName = ""
                End If

                'Server validation for  : txt_Cat_SPRevision
                Dim mySPRev As Object = Nothing
                If txt_Cat_SPRevision.Text <> "" Then
                    mySPRev = TrimAll(txt_Cat_SPRevision.Text)
                    mySPRev = RemoveQuotes(mySPRev)
                    If mySPRev.Length > 100 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_SPRevision.Focus()
                        Exit Sub
                    End If

                    mySPRev = " " & mySPRev & " "
                    If InStr(1, mySPRev, "CREATE", 1) > 0 Or InStr(1, mySPRev, "DELETE", 1) > 0 Or InStr(1, mySPRev, "DROP", 1) > 0 Or InStr(1, mySPRev, "INSERT", 1) > 1 Or InStr(1, mySPRev, "TRACK", 1) > 1 Or InStr(1, mySPRev, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_SPRevision.Focus()
                        Exit Sub
                    End If
                    mySPRev = TrimAll(mySPRev)
                    'check unwanted characters
                    c = 0
                    counter19 = 0
                    For iloop = 1 To Len(mySPRev.ToString)
                        strcurrentchar = Mid(mySPRev, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter19 = 1
                            End If
                        End If
                    Next
                    If counter19 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_SPRevision.Focus()
                        Exit Sub
                    End If
                Else
                    mySPRev = ""
                End If

                'Server validation for  : txt_Cat_ManualRevision
                Dim myManualVer As Object = Nothing
                If txt_Cat_ManualRevision.Text <> "" Then
                    myManualVer = TrimAll(txt_Cat_ManualRevision.Text)
                    myManualVer = RemoveQuotes(myManualVer)
                    If myManualVer.Length > 50 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ManualRevision.Focus()
                        Exit Sub
                    End If

                    myManualVer = " " & myManualVer & " "
                    If InStr(1, myManualVer, "CREATE", 1) > 0 Or InStr(1, myManualVer, "DELETE", 1) > 0 Or InStr(1, myManualVer, "DROP", 1) > 0 Or InStr(1, myManualVer, "INSERT", 1) > 1 Or InStr(1, myManualVer, "TRACK", 1) > 1 Or InStr(1, myManualVer, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ManualRevision.Focus()
                        Exit Sub
                    End If
                    myManualVer = TrimAll(myManualVer)
                    'check unwanted characters
                    c = 0
                    counter20 = 0
                    For iloop = 1 To Len(myManualVer.ToString)
                        strcurrentchar = Mid(myManualVer, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter20 = 1
                            End If
                        End If
                    Next
                    If counter20 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ManualRevision.Focus()
                        Exit Sub
                    End If
                Else
                    myManualVer = ""
                End If

                'Server validation for  : txt_Cat_PatentNo
                Dim myPatentNo As Object = Nothing
                If txt_Cat_PatentNo.Text <> "" Then
                    myPatentNo = TrimAll(txt_Cat_PatentNo.Text)
                    myPatentNo = RemoveQuotes(myPatentNo)
                    If myPatentNo.Length > 100 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_PatentNo.Focus()
                        Exit Sub
                    End If

                    myPatentNo = " " & myPatentNo & " "
                    If InStr(1, myPatentNo, "CREATE", 1) > 0 Or InStr(1, myPatentNo, "DELETE", 1) > 0 Or InStr(1, myPatentNo, "DROP", 1) > 0 Or InStr(1, myPatentNo, "INSERT", 1) > 1 Or InStr(1, myPatentNo, "TRACK", 1) > 1 Or InStr(1, myPatentNo, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_PatentNo.Focus()
                        Exit Sub
                    End If
                    myPatentNo = TrimAll(myPatentNo)
                    'check unwanted characters
                    c = 0
                    counter21 = 0
                    For iloop = 1 To Len(myPatentNo.ToString)
                        strcurrentchar = Mid(myPatentNo, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter21 = 1
                            End If
                        End If
                    Next
                    If counter21 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_PatentNo.Focus()
                        Exit Sub
                    End If
                Else
                    myPatentNo = ""
                End If

                'Server validation for  : txt_Cat_Patentee
                Dim myPatentee As Object = Nothing
                If txt_Cat_Patentee.Text <> "" Then
                    myPatentee = TrimAll(txt_Cat_Patentee.Text)
                    myPatentee = RemoveQuotes(myPatentee)
                    If myPatentee.Length > 150 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Patentee.Focus()
                        Exit Sub
                    End If

                    myPatentee = " " & myPatentee & " "
                    If InStr(1, myPatentee, "CREATE", 1) > 0 Or InStr(1, myPatentee, "DELETE", 1) > 0 Or InStr(1, myPatentee, "DROP", 1) > 0 Or InStr(1, myPatentee, "INSERT", 1) > 1 Or InStr(1, myPatentee, "TRACK", 1) > 1 Or InStr(1, myPatentee, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Patentee.Focus()
                        Exit Sub
                    End If
                    myPatentee = TrimAll(myPatentee)
                    'check unwanted characters
                    c = 0
                    counter22 = 0
                    For iloop = 1 To Len(myPatentee.ToString)
                        strcurrentchar = Mid(myPatentee, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter22 = 1
                            End If
                        End If
                    Next
                    If counter22 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Patentee.Focus()
                        Exit Sub
                    End If
                Else
                    myPatentee = ""
                End If

                'Server validation for  : txt_Cat_PatentInventor
                Dim myPatentInventor As Object = Nothing
                If txt_Cat_PatentInventor.Text <> "" Then
                    myPatentInventor = TrimAll(txt_Cat_PatentInventor.Text)
                    myPatentInventor = RemoveQuotes(myPatentInventor)
                    If myPatentInventor.Length > 256 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_PatentInventor.Focus()
                        Exit Sub
                    End If

                    myPatentInventor = " " & myPatentInventor & " "
                    If InStr(1, myPatentInventor, "CREATE", 1) > 0 Or InStr(1, myPatentInventor, "DELETE", 1) > 0 Or InStr(1, myPatentInventor, "DROP", 1) > 0 Or InStr(1, myPatentInventor, "INSERT", 1) > 1 Or InStr(1, myPatentInventor, "TRACK", 1) > 1 Or InStr(1, myPatentInventor, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_PatentInventor.Focus()
                        Exit Sub
                    End If
                    myPatentInventor = TrimAll(myPatentInventor)
                    'check unwanted characters
                    c = 0
                    counter23 = 0
                    For iloop = 1 To Len(myPatentInventor.ToString)
                        strcurrentchar = Mid(myPatentInventor, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter23 = 1
                            End If
                        End If
                    Next
                    If counter23 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_PatentInventor.Focus()
                        Exit Sub
                    End If
                Else
                    myPatentInventor = ""
                End If

                'Server validation for  : txt_Cat_ConfName
                Dim myConfName As Object = Nothing
                If txt_Cat_ConfName.Text <> "" Then
                    myConfName = TrimAll(txt_Cat_ConfName.Text)
                    myConfName = RemoveQuotes(myConfName)
                    If myConfName.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ConfName.Focus()
                        Exit Sub
                    End If

                    myConfName = " " & myConfName & " "
                    If InStr(1, myConfName, "CREATE", 1) > 0 Or InStr(1, myConfName, "DELETE", 1) > 0 Or InStr(1, myConfName, "DROP", 1) > 0 Or InStr(1, myConfName, "INSERT", 1) > 1 Or InStr(1, myConfName, "TRACK", 1) > 1 Or InStr(1, myConfName, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ConfName.Focus()
                        Exit Sub
                    End If
                    myConfName = TrimAll(myConfName)
                    'check unwanted characters
                    c = 0
                    counter24 = 0
                    For iloop = 1 To Len(myConfName.ToString)
                        strcurrentchar = Mid(myConfName, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter24 = 1
                            End If
                        End If
                    Next
                    If counter24 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ConfName.Focus()
                        Exit Sub
                    End If
                Else
                    myConfName = ""
                End If

                'Server validation for  : txt_Cat_ConfName
                Dim myConfSDate As Object = Nothing
                If txt_Cat_SDate.Text <> "" Then
                    myConfSDate = TrimX(txt_Cat_SDate.Text)
                    myConfSDate = RemoveQuotes(myConfSDate)
                    myConfSDate = Convert.ToDateTime(myConfSDate, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us
                    If myConfSDate.Length > 12 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_SDate.Focus()
                        Exit Sub
                    End If

                    myConfSDate = " " & myConfSDate & " "
                    If InStr(1, myConfSDate, "CREATE", 1) > 0 Or InStr(1, myConfSDate, "DELETE", 1) > 0 Or InStr(1, myConfSDate, "DROP", 1) > 0 Or InStr(1, myConfSDate, "INSERT", 1) > 1 Or InStr(1, myConfSDate, "TRACK", 1) > 1 Or InStr(1, myConfSDate, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_SDate.Focus()
                        Exit Sub
                    End If
                    myConfSDate = TrimX(myConfSDate)
                    'check unwanted characters
                    c = 0
                    counter25 = 0
                    For iloop = 1 To Len(myConfSDate.ToString)
                        strcurrentchar = Mid(myConfSDate, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter25 = 1
                            End If
                        End If
                    Next
                    If counter25 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_SDate.Focus()
                        Exit Sub
                    End If
                Else
                    myConfSDate = ""
                End If

                'Server validation for  : txt_Cat_EDate
                Dim myConfEDate As Object = Nothing
                If txt_Cat_EDate.Text <> "" Then
                    myConfEDate = TrimX(txt_Cat_EDate.Text)
                    myConfEDate = RemoveQuotes(myConfEDate)
                    myConfEDate = Convert.ToDateTime(myConfEDate, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us
                    If myConfEDate.Length > 12 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_EDate.Focus()
                        Exit Sub
                    End If

                    myConfEDate = " " & myConfEDate & " "
                    If InStr(1, myConfEDate, "CREATE", 1) > 0 Or InStr(1, myConfEDate, "DELETE", 1) > 0 Or InStr(1, myConfEDate, "DROP", 1) > 0 Or InStr(1, myConfEDate, "INSERT", 1) > 1 Or InStr(1, myConfEDate, "TRACK", 1) > 1 Or InStr(1, myConfEDate, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_EDate.Focus()
                        Exit Sub
                    End If
                    myConfEDate = TrimX(myConfEDate)
                    'check unwanted characters
                    c = 0
                    counter26 = 0
                    For iloop = 1 To Len(myConfEDate.ToString)
                        strcurrentchar = Mid(myConfEDate, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter26 = 1
                            End If
                        End If
                    Next
                    If counter26 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_EDate.Focus()
                        Exit Sub
                    End If
                Else
                    myConfEDate = ""
                End If

                'Server validation for  : txt_Cat_ConfPlace
                Dim myConfPlace As Object = Nothing
                If txt_Cat_ConfPlace.Text <> "" Then
                    myConfPlace = TrimAll(txt_Cat_ConfPlace.Text)
                    myConfPlace = RemoveQuotes(myConfPlace)
                    If myConfPlace.Length > 100 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ConfName.Focus()
                        Exit Sub
                    End If

                    myConfPlace = " " & myConfPlace & " "
                    If InStr(1, myConfPlace, "CREATE", 1) > 0 Or InStr(1, myConfPlace, "DELETE", 1) > 0 Or InStr(1, myConfPlace, "DROP", 1) > 0 Or InStr(1, myConfPlace, "INSERT", 1) > 1 Or InStr(1, myConfPlace, "TRACK", 1) > 1 Or InStr(1, myConfPlace, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ConfPlace.Focus()
                        Exit Sub
                    End If
                    myConfPlace = TrimAll(myConfPlace)
                    'check unwanted characters
                    c = 0
                    counter27 = 0
                    For iloop = 1 To Len(myConfPlace.ToString)
                        strcurrentchar = Mid(myConfPlace, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter27 = 1
                            End If
                        End If
                    Next
                    If counter27 = 1 Then
                        Label6.Text = "Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ConfPlace.Focus()
                        Exit Sub
                    End If
                Else
                    myConfPlace = ""
                End If

                'Server validation for  : txt_Cat_Author1
                Dim myAuthor1 As Object = Nothing
                If txt_Cat_Author1.Text <> "" Then
                    myAuthor1 = TrimAll(txt_Cat_Author1.Text)
                    myAuthor1 = RemoveQuotes(myAuthor1)
                    If myAuthor1.Length > 250 Then 'maximum length
                        Label6.Text = "Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Author1.Focus()
                        Exit Sub
                    End If

                    myAuthor1 = " " & myAuthor1 & " "
                    If InStr(1, myAuthor1, "CREATE", 1) > 0 Or InStr(1, myAuthor1, "DELETE", 1) > 0 Or InStr(1, myAuthor1, "DROP", 1) > 0 Or InStr(1, myAuthor1, "INSERT", 1) > 1 Or InStr(1, myAuthor1, "TRACK", 1) > 1 Or InStr(1, myAuthor1, "TRACE", 1) > 1 Then
                        Label6.Text = "Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Author1.Focus()
                        Exit Sub
                    End If
                    myAuthor1 = TrimAll(myAuthor1)
                    'check unwanted characters
                    c = 0
                    counter28 = 0
                    For iloop = 1 To Len(myAuthor1.ToString)
                        strcurrentchar = Mid(myAuthor1, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter28 = 1
                            End If
                        End If
                    Next
                    myAuthor1 = TrimAll(Replace(myAuthor1, ".", " "))
                    myAuthor1 = TrimAll(Replace(myAuthor1, ",", ", "))
                    myAuthor1 = TrimAll(Replace(myAuthor1, ":", ", "))

                    If counter28 = 1 Then
                        Label6.Text = "Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Author1.Focus()
                        Exit Sub
                    End If
                Else
                    myAuthor1 = ""
                End If

                'Server validation for  : txt_Cat_Author2
                Dim myAuthor2 As Object = Nothing
                If txt_Cat_Author2.Text <> "" Then
                    myAuthor2 = TrimAll(txt_Cat_Author2.Text)
                    myAuthor2 = RemoveQuotes(myAuthor2)
                    If myAuthor2.Length > 250 Then 'maximum length
                        Label6.Text = "Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Author2.Focus()
                        Exit Sub
                    End If

                    myAuthor2 = " " & myAuthor2 & " "
                    If InStr(1, myAuthor2, "CREATE", 1) > 0 Or InStr(1, myAuthor2, "DELETE", 1) > 0 Or InStr(1, myAuthor2, "DROP", 1) > 0 Or InStr(1, myAuthor2, "INSERT", 1) > 1 Or InStr(1, myAuthor2, "TRACK", 1) > 1 Or InStr(1, myAuthor2, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Author2.Focus()
                        Exit Sub
                    End If
                    myAuthor2 = TrimAll(myAuthor2)
                    'check unwanted characters
                    c = 0
                    counter29 = 0
                    For iloop = 1 To Len(myAuthor2.ToString)
                        strcurrentchar = Mid(myAuthor2, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter29 = 1
                            End If
                        End If
                    Next
                    myAuthor2 = TrimAll(Replace(myAuthor2, ".", " "))
                    myAuthor2 = TrimAll(Replace(myAuthor2, ",", ", "))
                    myAuthor2 = TrimAll(Replace(myAuthor2, ":", ", "))
                    If counter29 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Author2.Focus()
                        Exit Sub
                    End If
                Else
                    myAuthor2 = ""
                End If

                'Server validation for  : txt_Cat_Author2
                Dim myAuthor3 As Object = Nothing
                If txt_Cat_Author3.Text <> "" Then
                    myAuthor3 = TrimAll(txt_Cat_Author3.Text)
                    myAuthor3 = RemoveQuotes(myAuthor3)
                    If myAuthor3.Length > 250 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Author3.Focus()
                        Exit Sub
                    End If

                    myAuthor3 = " " & myAuthor3 & " "
                    If InStr(1, myAuthor3, "CREATE", 1) > 0 Or InStr(1, myAuthor3, "DELETE", 1) > 0 Or InStr(1, myAuthor3, "DROP", 1) > 0 Or InStr(1, myAuthor3, "INSERT", 1) > 1 Or InStr(1, myAuthor3, "TRACK", 1) > 1 Or InStr(1, myAuthor3, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Author3.Focus()
                        Exit Sub
                    End If
                    myAuthor3 = TrimAll(myAuthor3)
                    'check unwanted characters
                    c = 0
                    counter30 = 0
                    For iloop = 1 To Len(myAuthor3.ToString)
                        strcurrentchar = Mid(myAuthor3, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter30 = 1
                            End If
                        End If
                    Next
                    myAuthor3 = TrimAll(Replace(myAuthor3, ".", " "))
                    myAuthor3 = TrimAll(Replace(myAuthor3, ",", ", "))
                    myAuthor3 = TrimAll(Replace(myAuthor3, ":", ", "))
                    If counter30 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Author3.Focus()
                        Exit Sub
                    End If
                Else
                    myAuthor3 = ""
                End If

                'Server validation for  : txt_Cat_Editor
                Dim myEditor As Object = Nothing
                If txt_Cat_Editor.Text <> "" Then
                    myEditor = TrimAll(txt_Cat_Editor.Text)
                    myEditor = RemoveQuotes(myEditor)
                    If myEditor.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Editor.Focus()
                        Exit Sub
                    End If

                    myEditor = " " & myEditor & " "
                    If InStr(1, myEditor, "CREATE", 1) > 0 Or InStr(1, myEditor, "DELETE", 1) > 0 Or InStr(1, myEditor, "DROP", 1) > 0 Or InStr(1, myEditor, "INSERT", 1) > 1 Or InStr(1, myEditor, "TRACK", 1) > 1 Or InStr(1, myEditor, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Editor.Focus()
                        Exit Sub
                    End If
                    myEditor = TrimAll(myEditor)
                    'check unwanted characters
                    c = 0
                    counter31 = 0
                    For iloop = 1 To Len(myEditor.ToString)
                        strcurrentchar = Mid(myEditor, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter31 = 1
                            End If
                        End If
                    Next
                    If counter31 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Editor.Focus()
                        Exit Sub
                    End If
                Else
                    myEditor = ""
                End If

                'Server validation for  : txt_Cat_Editor
                Dim myTr As Object = Nothing
                If txt_Cat_Translator.Text <> "" Then
                    myTr = TrimAll(txt_Cat_Translator.Text)
                    myTr = RemoveQuotes(myTr)
                    If myTr.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Translator.Focus()
                        Exit Sub
                    End If

                    myTr = " " & myTr & " "
                    If InStr(1, myTr, "CREATE", 1) > 0 Or InStr(1, myTr, "DELETE", 1) > 0 Or InStr(1, myTr, "DROP", 1) > 0 Or InStr(1, myTr, "INSERT", 1) > 1 Or InStr(1, myTr, "TRACK", 1) > 1 Or InStr(1, myTr, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Translator.Focus()
                        Exit Sub
                    End If
                    myTr = TrimAll(myTr)
                    'check unwanted characters
                    c = 0
                    counter32 = 0
                    For iloop = 1 To Len(myTr.ToString)
                        strcurrentchar = Mid(myTr, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter32 = 1
                            End If
                        End If
                    Next
                    If counter32 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Translator.Focus()
                        Exit Sub
                    End If
                Else
                    myTr = ""
                End If

                'Server validation for  : txt_Cat_Illustrator
                Dim myIllus As Object = Nothing
                If txt_Cat_Illustrator.Text <> "" Then
                    myIllus = TrimAll(txt_Cat_Illustrator.Text)
                    myIllus = RemoveQuotes(myIllus)
                    If myIllus.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Illustrator.Focus()
                        Exit Sub
                    End If

                    myIllus = " " & myIllus & " "
                    If InStr(1, myIllus, "CREATE", 1) > 0 Or InStr(1, myIllus, "DELETE", 1) > 0 Or InStr(1, myIllus, "DROP", 1) > 0 Or InStr(1, myIllus, "INSERT", 1) > 1 Or InStr(1, myIllus, "TRACK", 1) > 1 Or InStr(1, myIllus, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Illustrator.Focus()
                        Exit Sub
                    End If
                    myIllus = TrimAll(myIllus)
                    'check unwanted characters
                    c = 0
                    counter33 = 0
                    For iloop = 1 To Len(myIllus.ToString)
                        strcurrentchar = Mid(myIllus, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter33 = 1
                            End If
                        End If
                    Next
                    If counter33 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Illustrator.Focus()
                        Exit Sub
                    End If
                Else
                    myIllus = ""
                End If

                'Server validation for  : txt_Cat_Compiler
                Dim myCompiler As Object = Nothing
                If txt_Cat_Compiler.Text <> "" Then
                    myCompiler = TrimAll(txt_Cat_Compiler.Text)
                    myCompiler = RemoveQuotes(myCompiler)
                    If myCompiler.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Compiler.Focus()
                        Exit Sub
                    End If

                    myCompiler = " " & myCompiler & " "
                    If InStr(1, myCompiler, "CREATE", 1) > 0 Or InStr(1, myCompiler, "DELETE", 1) > 0 Or InStr(1, myCompiler, "DROP", 1) > 0 Or InStr(1, myCompiler, "INSERT", 1) > 1 Or InStr(1, myCompiler, "TRACK", 1) > 1 Or InStr(1, myCompiler, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Compiler.Focus()
                        Exit Sub
                    End If
                    myCompiler = TrimAll(myCompiler)
                    'check unwanted characters
                    c = 0
                    counter34 = 0
                    For iloop = 1 To Len(myCompiler.ToString)
                        strcurrentchar = Mid(myCompiler, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter34 = 1
                            End If
                        End If
                    Next
                    If counter34 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Compiler.Focus()
                        Exit Sub
                    End If
                Else
                    myCompiler = ""
                End If

                'Server validation for  : txt_Cat_Commentator
                Dim myCommentator As Object = Nothing
                If txt_Cat_Commentator.Text <> "" Then
                    myCommentator = TrimAll(txt_Cat_Commentator.Text)
                    myCommentator = RemoveQuotes(myCommentator)
                    If myCommentator.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Commentator.Focus()
                        Exit Sub
                    End If

                    myCommentator = " " & myCommentator & " "
                    If InStr(1, myCommentator, "CREATE", 1) > 0 Or InStr(1, myCommentator, "DELETE", 1) > 0 Or InStr(1, myCommentator, "DROP", 1) > 0 Or InStr(1, myCommentator, "INSERT", 1) > 1 Or InStr(1, myCommentator, "TRACK", 1) > 1 Or InStr(1, myCommentator, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Commentator.Focus()
                        Exit Sub
                    End If
                    myCommentator = TrimAll(myCommentator)
                    'check unwanted characters
                    c = 0
                    counter35 = 0
                    For iloop = 1 To Len(myCommentator.ToString)
                        strcurrentchar = Mid(myCommentator, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter35 = 1
                            End If
                        End If
                    Next
                    If counter35 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Commentator.Focus()
                        Exit Sub
                    End If
                Else
                    myCommentator = ""
                End If

                'Server validation for  : txt_Cat_RevisedBy
                Dim myRevisedBy As Object = Nothing
                If txt_Cat_RevisedBy.Text <> "" Then
                    myRevisedBy = TrimAll(txt_Cat_RevisedBy.Text)
                    myRevisedBy = RemoveQuotes(myRevisedBy)
                    If myRevisedBy.Length > 255 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_RevisedBy.Focus()
                        Exit Sub
                    End If

                    myRevisedBy = " " & myRevisedBy & " "
                    If InStr(1, myRevisedBy, "CREATE", 1) > 0 Or InStr(1, myRevisedBy, "DELETE", 1) > 0 Or InStr(1, myRevisedBy, "DROP", 1) > 0 Or InStr(1, myRevisedBy, "INSERT", 1) > 1 Or InStr(1, myRevisedBy, "TRACK", 1) > 1 Or InStr(1, myRevisedBy, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_RevisedBy.Focus()
                        Exit Sub
                    End If
                    myRevisedBy = TrimAll(myRevisedBy)
                    'check unwanted characters
                    c = 0
                    counter36 = 0
                    For iloop = 1 To Len(myRevisedBy.ToString)
                        strcurrentchar = Mid(myRevisedBy, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter36 = 1
                            End If
                        End If
                    Next
                    If counter36 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_RevisedBy.Focus()
                        Exit Sub
                    End If
                Else
                    myRevisedBy = ""
                End If

                'Server validation for  : txt_Cat_CorpAuthor
                Dim myCorpAuthor As Object = Nothing
                If txt_Cat_CorpAuthor.Text <> "" Then
                    myCorpAuthor = TrimAll(txt_Cat_CorpAuthor.Text)
                    myCorpAuthor = RemoveQuotes(myCorpAuthor)
                    If myCorpAuthor.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_CorpAuthor.Focus()
                        Exit Sub
                    End If

                    myCorpAuthor = " " & myCorpAuthor & " "
                    If InStr(1, myCorpAuthor, "CREATE", 1) > 0 Or InStr(1, myCorpAuthor, "DELETE", 1) > 0 Or InStr(1, myCorpAuthor, "DROP", 1) > 0 Or InStr(1, myCorpAuthor, "INSERT", 1) > 1 Or InStr(1, myCorpAuthor, "TRACK", 1) > 1 Or InStr(1, myCorpAuthor, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_CorpAuthor.Focus()
                        Exit Sub
                    End If
                    myCorpAuthor = TrimAll(myCorpAuthor)
                    'check unwanted characters
                    c = 0
                    counter37 = 0
                    For iloop = 1 To Len(myCorpAuthor.ToString)
                        strcurrentchar = Mid(myCorpAuthor, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter37 = 1
                            End If
                        End If
                    Next
                    If counter37 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_CorpAuthor.Focus()
                        Exit Sub
                    End If
                Else
                    myCorpAuthor = ""
                End If

                'Server validation for  : txt_Cat_Edition
                Dim myEdition As Object = Nothing
                If txt_Cat_Edition.Text <> "" Then
                    myEdition = TrimAll(txt_Cat_Edition.Text)
                    myEdition = RemoveQuotes(myEdition)
                    myEdition = LCase(myEdition)
                    If myEdition.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Edition.Focus()
                        Exit Sub
                    End If

                    myEdition = " " & myEdition & " "
                    If InStr(1, myEdition, "CREATE", 1) > 0 Or InStr(1, myEdition, "DELETE", 1) > 0 Or InStr(1, myEdition, "DROP", 1) > 0 Or InStr(1, myEdition, "INSERT", 1) > 1 Or InStr(1, myEdition, "TRACK", 1) > 1 Or InStr(1, myEdition, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Edition.Focus()
                        Exit Sub
                    End If
                    myEdition = TrimAll(myEdition)
                    'check unwanted characters
                    c = 0
                    counter38 = 0
                    For iloop = 1 To Len(myEdition.ToString)
                        strcurrentchar = Mid(myEdition, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter38 = 1
                            End If
                        End If
                    Next
                    If counter38 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Edition.Focus()
                        Exit Sub
                    End If
                    If InStr(myEdition, "edition") <> 0 Then
                        myEdition = LCase(TrimAll(Replace(myEdition, "edition", "")))
                    End If
                    If InStr(myEdition, "ed") <> 0 Then
                        myEdition = LCase(TrimAll(Replace(myEdition, "ed", "")))
                    End If
                    If InStr(myEdition, "ed.") <> 0 Then
                        myEdition = LCase(TrimAll(Replace(myEdition, "ed.", "")))
                    End If
                    If InStr(myEdition, "edition.") <> 0 Then
                        myEdition = LCase(TrimAll(Replace(myEdition, "edition.", "")))
                    End If
                Else
                    myEdition = ""
                End If

                'Server validation for  : txt_Cat_Reprint
                Dim myReprint As Object = Nothing
                If txt_Cat_Reprint.Text <> "" Then
                    myReprint = TrimAll(txt_Cat_Reprint.Text)
                    myReprint = RemoveQuotes(myReprint)
                    If myReprint.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Reprint.Focus()
                        Exit Sub
                    End If

                    myReprint = " " & myReprint & " "
                    If InStr(1, myReprint, "CREATE", 1) > 0 Or InStr(1, myReprint, "DELETE", 1) > 0 Or InStr(1, myReprint, "DROP", 1) > 0 Or InStr(1, myReprint, "INSERT", 1) > 1 Or InStr(1, myReprint, "TRACK", 1) > 1 Or InStr(1, myReprint, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Reprint.Focus()
                        Exit Sub
                    End If
                    myReprint = TrimAll(myReprint)
                    'check unwanted characters
                    c = 0
                    counter39 = 0
                    For iloop = 1 To Len(myReprint.ToString)
                        strcurrentchar = Mid(myReprint, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter39 = 1
                            End If
                        End If
                    Next
                    If counter39 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Reprint.Focus()
                        Exit Sub
                    End If
                Else
                    myReprint = ""
                End If

                'Server validation for  : txt_Cat_Place
                Dim myPubPlace As Object = Nothing
                If txt_Cat_Place.Text <> "" Then
                    myPubPlace = TrimAll(txt_Cat_Place.Text)
                    myPubPlace = RemoveQuotes(myPubPlace)
                    If myPubPlace.Length > 150 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Place.Focus()
                        Exit Sub
                    End If

                    myPubPlace = " " & myPubPlace & " "
                    If InStr(1, myPubPlace, "CREATE", 1) > 0 Or InStr(1, myPubPlace, "DELETE", 1) > 0 Or InStr(1, myPubPlace, "DROP", 1) > 0 Or InStr(1, myPubPlace, "INSERT", 1) > 1 Or InStr(1, myPubPlace, "TRACK", 1) > 1 Or InStr(1, myPubPlace, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Place.Focus()
                        Exit Sub
                    End If
                    myPubPlace = TrimAll(myPubPlace)
                    'check unwanted characters
                    c = 0
                    counter41 = 0
                    For iloop = 1 To Len(myPubPlace.ToString)
                        strcurrentchar = Mid(myPubPlace, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter41 = 1
                            End If
                        End If
                    Next
                    If counter41 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Place.Focus()
                        Exit Sub
                    End If
                Else
                    myPubPlace = ""
                End If

                'validation for Country Code
                Dim myConCode As Object = Nothing
                myConCode = DDL_Countries.SelectedValue
                If Not String.IsNullOrEmpty(myConCode) Then
                    myConCode = RemoveQuotes(myConCode)
                    If myConCode.Length > 4 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        DDL_Countries.Focus()
                        Exit Sub
                    End If

                    myConCode = " " & myConCode & " "
                    If InStr(1, myConCode, "CREATE", 1) > 0 Or InStr(1, myConCode, "DELETE", 1) > 0 Or InStr(1, myConCode, "DROP", 1) > 0 Or InStr(1, myConCode, "INSERT", 1) > 1 Or InStr(1, myConCode, "TRACK", 1) > 1 Or InStr(1, myConCode, "TRACE", 1) > 1 Then
                        ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                        DDL_Countries.Focus()
                        Exit Sub
                    End If
                    myConCode = TrimX(myConCode)
                    'check unwanted characters
                    c = 0
                    counter42 = 0
                    For iloop = 1 To Len(myConCode)
                        strcurrentchar = Mid(myConCode, iloop, 1)
                        If c = 0 Then
                            If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter42 = 1
                            End If
                        End If
                    Next
                    If counter42 = 1 Then
                        ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input  is not Valid... ');", True)
                        DDL_Countries.Focus()
                        Exit Sub
                    End If
                Else
                    myConCode = ""
                End If

                'validation for Publisher
                Dim myPubID As Object = Nothing
                Dim PUB_NAME As Object = Nothing
                If Pub_ComboBox.Text <> "" Then
                    myPubID = Pub_ComboBox.SelectedValue
                    If Microsoft.VisualBasic.IsNumeric(myPubID) = False Then
                        PUB_NAME = Trim(Pub_ComboBox.Text)
                        If PUB_NAME <> "" Then
                            PUB_NAME = TrimAll(Replace(PUB_NAME, ".", " "))
                            PUB_NAME = TrimAll(Replace(PUB_NAME, ",", ", "))
                            PUB_NAME = TrimAll(Replace(PUB_NAME, ";", ", "))
                        End If

                        'Check Duplicate User Code
                        Dim str As Object = Nothing
                        Dim flag As Object = Nothing
                        str = "SELECT PUB_ID FROM PUBLISHERS WHERE (PUB_NAME ='" & Trim(PUB_NAME) & "') "
                        Dim cmd1 As New SqlCommand(str, SqlConn)
                        SqlConn.Open()
                        flag = cmd1.ExecuteScalar
                        SqlConn.Close()
                        If flag <> Nothing Then
                            myPubID = flag
                            Pub_ComboBox.Items.FindByText(PUB_NAME).Selected = True
                        Else
                            Dim PubForm As New Publishers
                            'save new pub in database
                            PubForm.PUB_SAVE(PUB_NAME, myPubPlace, myConCode, LibCode)
                            Me.PopulatePub()
                            Pub_ComboBox.Items.FindByText(PUB_NAME).Selected = True
                            myPubID = Pub_ComboBox.SelectedValue
                        End If
                    End If

                    If Not String.IsNullOrEmpty(myPubID) Then
                        myPubID = RemoveQuotes(myPubID)
                        If Not IsNumeric(myPubID) = True Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            Pub_ComboBox.Focus()
                            Exit Sub
                        End If
                        myPubID = " " & myPubID & " "
                        If InStr(1, myPubID, "CREATE", 1) > 0 Or InStr(1, myPubID, "DELETE", 1) > 0 Or InStr(1, myPubID, "DROP", 1) > 0 Or InStr(1, myPubID, "INSERT", 1) > 1 Or InStr(1, myPubID, "TRACK", 1) > 1 Or InStr(1, myPubID, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            Pub_ComboBox.Focus()
                            Exit Sub
                        End If
                        myPubID = TrimX(myPubID)
                        'check unwanted characters
                        c = 0
                        counter40 = 0
                        For iloop = 1 To Len(myPubID.ToString)
                            strcurrentchar = Mid(myPubID, iloop, 1)
                            If c = 0 Then
                                If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter40 = 1
                                End If
                            End If
                        Next
                        If counter40 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            Pub_ComboBox.Focus()
                            Exit Sub
                        End If
                    End If
                Else
                    myPubID = 0
                End If

                'Server validation for  : txt_Cat_Place
                Dim myPubYear As Integer = Nothing
                If txt_Cat_Year.Text <> "" Then
                    myPubYear = TrimX(txt_Cat_Year.Text)
                    myPubYear = RemoveQuotes(myPubYear)
                    If Not Len(myPubYear.ToString) = 4 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Year.Focus()
                        Exit Sub
                    End If

                    myPubYear = " " & myPubYear & " "
                    If InStr(1, myPubYear, "CREATE", 1) > 0 Or InStr(1, myPubYear, "DELETE", 1) > 0 Or InStr(1, myPubYear, "DROP", 1) > 0 Or InStr(1, myPubYear, "INSERT", 1) > 1 Or InStr(1, myPubYear, "TRACK", 1) > 1 Or InStr(1, myPubYear, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Year.Focus()
                        Exit Sub
                    End If
                    myPubYear = TrimX(myPubYear)
                    'check unwanted characters
                    c = 0
                    counter43 = 0
                    For iloop = 1 To Len(myPubYear.ToString)
                        strcurrentchar = Mid(myPubYear, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter43 = 1
                            End If
                        End If
                    Next
                    If counter43 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Year.Focus()
                        Exit Sub
                    End If
                Else
                    myPubYear = 0
                End If

                'Server validation for  : txt_Cat_Place
                Dim mySeries As Object = Nothing
                If txt_Cat_Series.Text <> "" Then
                    mySeries = TrimAll(txt_Cat_Series.Text)
                    mySeries = RemoveQuotes(mySeries)
                    If mySeries.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Series.Focus()
                        Exit Sub
                    End If

                    mySeries = " " & mySeries & " "
                    If InStr(1, mySeries, "CREATE", 1) > 0 Or InStr(1, mySeries, "DELETE", 1) > 0 Or InStr(1, mySeries, "DROP", 1) > 0 Or InStr(1, mySeries, "INSERT", 1) > 1 Or InStr(1, mySeries, "TRACK", 1) > 1 Or InStr(1, mySeries, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Series.Focus()
                        Exit Sub
                    End If
                    mySeries = TrimAll(mySeries)
                    'check unwanted characters
                    c = 0
                    counter44 = 0
                    For iloop = 1 To Len(mySeries.ToString)
                        strcurrentchar = Mid(mySeries, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter44 = 1
                            End If
                        End If
                    Next
                    If counter44 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Series.Focus()
                        Exit Sub
                    End If
                Else
                    mySeries = ""
                End If

                'Server validation for  : txt_Cat_SeriesEditor
                Dim mySeriesEditor As Object = Nothing
                If txt_Cat_SeriesEditor.Text <> "" Then
                    mySeriesEditor = TrimAll(txt_Cat_SeriesEditor.Text)
                    mySeriesEditor = RemoveQuotes(mySeriesEditor)
                    If mySeriesEditor.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_SeriesEditor.Focus()
                        Exit Sub
                    End If

                    mySeriesEditor = " " & mySeriesEditor & " "
                    If InStr(1, mySeriesEditor, "CREATE", 1) > 0 Or InStr(1, mySeriesEditor, "DELETE", 1) > 0 Or InStr(1, mySeriesEditor, "DROP", 1) > 0 Or InStr(1, mySeriesEditor, "INSERT", 1) > 1 Or InStr(1, mySeriesEditor, "TRACK", 1) > 1 Or InStr(1, mySeriesEditor, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_SeriesEditor.Focus()
                        Exit Sub
                    End If
                    mySeriesEditor = TrimAll(mySeriesEditor)
                    'check unwanted characters
                    c = 0
                    counter45 = 0
                    For iloop = 1 To Len(mySeriesEditor.ToString)
                        strcurrentchar = Mid(mySeriesEditor, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter45 = 1
                            End If
                        End If
                    Next
                    If counter45 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_SeriesEditor.Focus()
                        Exit Sub
                    End If
                Else
                    mySeriesEditor = ""
                End If

                'Server validation for  : txt_Cat_Note
                Dim myNote As Object = Nothing
                If txt_Cat_Note.Text <> "" Then
                    myNote = TrimAll(txt_Cat_Note.Text)
                    myNote = RemoveQuotes(myNote)
                    If myNote.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Note.Focus()
                        Exit Sub
                    End If

                    myNote = " " & myNote & " "
                    If InStr(1, myNote, "CREATE", 1) > 0 Or InStr(1, myNote, "DELETE", 1) > 0 Or InStr(1, myNote, "DROP", 1) > 0 Or InStr(1, myNote, "INSERT", 1) > 1 Or InStr(1, myNote, "TRACK", 1) > 1 Or InStr(1, myNote, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Note.Focus()
                        Exit Sub
                    End If
                    myNote = TrimAll(myNote)
                    'check unwanted characters
                    c = 0
                    counter46 = 0
                    For iloop = 1 To Len(myNote.ToString)
                        strcurrentchar = Mid(myNote, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter46 = 1
                            End If
                        End If
                    Next
                    If counter46 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Note.Focus()
                        Exit Sub
                    End If
                Else
                    myNote = ""
                End If

                'Server validation for  : txt_Cat_Remarks
                Dim myRemarks As Object = Nothing
                If txt_Cat_Remarks.Text <> "" Then
                    myRemarks = TrimAll(txt_Cat_Remarks.Text)
                    myRemarks = RemoveQuotes(myRemarks)
                    If myRemarks.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Remarks.Focus()
                        Exit Sub
                    End If

                    myRemarks = " " & myRemarks & " "
                    If InStr(1, myRemarks, "CREATE", 1) > 0 Or InStr(1, myRemarks, "DELETE", 1) > 0 Or InStr(1, myRemarks, "DROP", 1) > 0 Or InStr(1, myRemarks, "INSERT", 1) > 1 Or InStr(1, myRemarks, "TRACK", 1) > 1 Or InStr(1, myRemarks, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Remarks.Focus()
                        Exit Sub
                    End If
                    myRemarks = TrimAll(myRemarks)
                    'check unwanted characters
                    c = 0
                    counter47 = 0
                    For iloop = 1 To Len(myRemarks.ToString)
                        strcurrentchar = Mid(myRemarks, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter47 = 1
                            End If
                        End If
                    Next
                    If counter47 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Remarks.Focus()
                        Exit Sub
                    End If
                Else
                    myRemarks = ""
                End If

                'Server validation for  : txt_Cat_URL
                Dim myURL As Object = Nothing
                If txt_Cat_URL.Text <> "" Then
                    myURL = TrimAll(txt_Cat_URL.Text)
                    myURL = RemoveQuotes(myURL)
                    If myURL.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_URL.Focus()
                        Exit Sub
                    End If

                    myURL = " " & myURL & " "
                    If InStr(1, myURL, "CREATE", 1) > 0 Or InStr(1, myURL, "DELETE", 1) > 0 Or InStr(1, myURL, "DROP", 1) > 0 Or InStr(1, myURL, "INSERT", 1) > 1 Or InStr(1, myURL, "TRACK", 1) > 1 Or InStr(1, myURL, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_URL.Focus()
                        Exit Sub
                    End If
                    myURL = TrimAll(myURL)
                    'check unwanted characters
                    c = 0
                    counter48 = 0
                    For iloop = 1 To Len(myURL.ToString)
                        strcurrentchar = Mid(myURL, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter48 = 1
                            End If
                        End If
                    Next
                    If InStr(myURL, "http://") <> 0 Then
                        myURL = "http://" & myURL
                    End If
                    If counter48 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_URL.Focus()
                        Exit Sub
                    End If
                Else
                    myURL = ""
                End If

                'Server validation for  : txt_Cat_Remarks
                Dim myComments As Object = Nothing
                If txt_Cat_Comments.Text <> "" Then
                    myComments = TrimAll(txt_Cat_Comments.Text)
                    myComments = RemoveQuotes(myComments)
                    If myComments.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_URL.Focus()
                        Exit Sub
                    End If
                    myComments = " " & myComments & " "
                    If InStr(1, myComments, "CREATE", 1) > 0 Or InStr(1, myComments, "DELETE", 1) > 0 Or InStr(1, myComments, "DROP", 1) > 0 Or InStr(1, myComments, "INSERT", 1) > 1 Or InStr(1, myComments, "TRACK", 1) > 1 Or InStr(1, myComments, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_URL.Focus()
                        Exit Sub
                    End If
                    myComments = TrimAll(myComments)
                    'check unwanted characters
                    c = 0
                    counter49 = 0
                    For iloop = 1 To Len(myComments.ToString)
                        strcurrentchar = Mid(myComments, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter49 = 1
                            End If
                        End If
                    Next
                    If counter49 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Comments.Focus()
                        Exit Sub
                    End If
                Else
                    myComments = ""
                End If

                'validation for DDL_Subjects
                Dim mySubId As Integer = Nothing
                If DDL_Subjects.Text <> "" Then
                    mySubId = DDL_Subjects.SelectedValue
                    If Not String.IsNullOrEmpty(mySubId) Then
                        mySubId = RemoveQuotes(mySubId)
                        If Len(mySubId) > 10 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            DDL_Subjects.Focus()
                            Exit Sub
                        End If

                        If Not IsNumeric(mySubId) = True Then 'maximum length
                            Label6.Text = " Data must be Numeric Only.. "
                            Label15.Text = ""
                            DDL_Subjects.Focus()
                            Exit Sub
                        End If

                        mySubId = " " & mySubId & " "
                        If InStr(1, mySubId, "CREATE", 1) > 0 Or InStr(1, mySubId, "DELETE", 1) > 0 Or InStr(1, mySubId, "DROP", 1) > 0 Or InStr(1, mySubId, "INSERT", 1) > 1 Or InStr(1, mySubId, "TRACK", 1) > 1 Or InStr(1, mySubId, "TRACE", 1) > 1 Then
                            ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                            DDL_Subjects.Focus()
                            Exit Sub
                        End If
                        mySubId = TrimX(mySubId)
                        'check unwanted characters
                        c = 0
                        counter50 = 0
                        For iloop = 1 To Len(mySubId.ToString)
                            strcurrentchar = Mid(mySubId, iloop, 1)
                            If c = 0 Then
                                If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter50 = 1
                                End If
                            End If
                        Next
                        If counter50 = 1 Then
                            ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input  is not Valid... ');", True)
                            DDL_Subjects.Focus()
                            Exit Sub
                        End If
                    Else
                        mySubId = Nothing
                    End If
                Else
                    mySubId = Nothing
                End If

                'Server validation for  : txt_Cat_Keywords
                Dim myKeywords As Object = Nothing
                If txt_Cat_Keywords.Text <> "" Then
                    myKeywords = TrimAll(txt_Cat_Keywords.Text)
                    myKeywords = RemoveQuotes(myKeywords)
                    If myKeywords.Length > 1000 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Keywords.Focus()
                        Exit Sub
                    End If
                    myKeywords = " " & myKeywords & " "
                    If InStr(1, myKeywords, "CREATE", 1) > 0 Or InStr(1, myKeywords, "DELETE", 1) > 0 Or InStr(1, myKeywords, "DROP", 1) > 0 Or InStr(1, myKeywords, "INSERT", 1) > 1 Or InStr(1, myKeywords, "TRACK", 1) > 1 Or InStr(1, myKeywords, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Keywords.Focus()
                        Exit Sub
                    End If
                    myKeywords = TrimAll(myKeywords)
                    'check unwanted characters
                    c = 0
                    counter51 = 0
                    For iloop = 1 To Len(myKeywords.ToString)
                        strcurrentchar = Mid(myKeywords, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter51 = 1
                            End If
                        End If
                    Next
                    If counter51 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Keywords.Focus()
                        Exit Sub
                    End If
                Else
                    myKeywords = ""
                End If

                'Server validation for  : txt_Cat_TrFrom
                Dim myTrFrom As Object = Nothing
                If txt_Cat_TrFrom.Text <> "" Then
                    myTrFrom = TrimAll(txt_Cat_TrFrom.Text)
                    myTrFrom = RemoveQuotes(myTrFrom)
                    If myTrFrom.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_TrFrom.Focus()
                        Exit Sub
                    End If
                    myTrFrom = " " & myTrFrom & " "
                    If InStr(1, myTrFrom, "CREATE", 1) > 0 Or InStr(1, myTrFrom, "DELETE", 1) > 0 Or InStr(1, myTrFrom, "DROP", 1) > 0 Or InStr(1, myTrFrom, "INSERT", 1) > 1 Or InStr(1, myTrFrom, "TRACK", 1) > 1 Or InStr(1, myTrFrom, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_TrFrom.Focus()
                        Exit Sub
                    End If
                    myTrFrom = TrimAll(myTrFrom)
                    'check unwanted characters
                    c = 0
                    counter52 = 0
                    For iloop = 1 To Len(myTrFrom.ToString)
                        strcurrentchar = Mid(myTrFrom, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter52 = 1
                            End If
                        End If
                    Next
                    If counter52 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_TrFrom.Focus()
                        Exit Sub
                    End If
                Else
                    myTrFrom = ""
                End If

                'Server validation for  : txt_Cat_Abstract
                Dim myAbstract As Object = Nothing
                If txt_Cat_Abstract.Text <> "" Then
                    myAbstract = TrimAll(txt_Cat_Abstract.Text)
                    myAbstract = RemoveQuotes(myAbstract)
                    If myAbstract.Length > 4000 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Abstract.Focus()
                        Exit Sub
                    End If
                    myAbstract = " " & myAbstract & " "
                    If InStr(1, myAbstract, "CREATE", 1) > 0 Or InStr(1, myAbstract, "DELETE", 1) > 0 Or InStr(1, myAbstract, "DROP", 1) > 0 Or InStr(1, myAbstract, "INSERT", 1) > 1 Or InStr(1, myAbstract, "TRACK", 1) > 1 Or InStr(1, myAbstract, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_Abstract.Focus()
                        Exit Sub
                    End If
                    myAbstract = TrimAll(myAbstract)
                    'check unwanted characters
                    c = 0
                    counter53 = 0
                    For iloop = 1 To Len(myAbstract.ToString)
                        strcurrentchar = Mid(myAbstract, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter53 = 1
                            End If
                        End If
                    Next
                    If counter53 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_Abstract.Focus()
                        Exit Sub
                    End If
                Else
                    myAbstract = ""
                End If

                'Server validation for  : txt_Cat_ReferenceNo
                Dim myRefNo As Object = Nothing
                If txt_Cat_ReferenceNo.Text <> "" Then
                    myRefNo = TrimAll(txt_Cat_ReferenceNo.Text)
                    myRefNo = RemoveQuotes(myRefNo)
                    If myRefNo.Length > 500 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ReferenceNo.Focus()
                        Exit Sub
                    End If
                    myRefNo = " " & myRefNo & " "
                    If InStr(1, myRefNo, "CREATE", 1) > 0 Or InStr(1, myRefNo, "DELETE", 1) > 0 Or InStr(1, myRefNo, "DROP", 1) > 0 Or InStr(1, myRefNo, "INSERT", 1) > 1 Or InStr(1, myRefNo, "TRACK", 1) > 1 Or InStr(1, myRefNo, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ReferenceNo.Focus()
                        Exit Sub
                    End If
                    myRefNo = TrimAll(myRefNo)
                    'check unwanted characters
                    c = 0
                    counter54 = 0
                    For iloop = 1 To Len(myRefNo.ToString)
                        strcurrentchar = Mid(myRefNo, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter54 = 1
                            End If
                        End If
                    Next
                    If counter54 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ReferenceNo.Focus()
                        Exit Sub
                    End If
                Else
                    myRefNo = ""
                End If

                'Server validation for  : SP Re-Affirmation year
                Dim myReaffirmYear As Integer = Nothing
                If txt_Cat_ReaffirmYear.Text <> "" Then
                    myReaffirmYear = TrimX(txt_Cat_ReaffirmYear.Text)
                    myReaffirmYear = RemoveQuotes(myReaffirmYear)
                    If Not Len(myReaffirmYear.ToString) = 4 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ReaffirmYear.Focus()
                        Exit Sub
                    End If

                    myReaffirmYear = " " & myReaffirmYear & " "
                    If InStr(1, myReaffirmYear, "CREATE", 1) > 0 Or InStr(1, myReaffirmYear, "DELETE", 1) > 0 Or InStr(1, myReaffirmYear, "DROP", 1) > 0 Or InStr(1, myReaffirmYear, "INSERT", 1) > 1 Or InStr(1, myReaffirmYear, "TRACK", 1) > 1 Or InStr(1, myReaffirmYear, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ReaffirmYear.Focus()
                        Exit Sub
                    End If
                    myReaffirmYear = TrimX(myReaffirmYear)
                    'check unwanted characters
                    c = 0
                    counter55 = 0
                    For iloop = 1 To Len(myReaffirmYear.ToString)
                        strcurrentchar = Mid(myReaffirmYear, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter55 = 1
                            End If
                        End If
                    Next
                    If counter55 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ReaffirmYear.Focus()
                        Exit Sub
                    End If
                Else
                    myReaffirmYear = 0
                End If

                'Server validation for  : SP Re-txt_Cat_WithdrawYear
                Dim myWithdrawYear As Integer = Nothing
                If txt_Cat_WithdrawYear.Text <> "" Then
                    myWithdrawYear = TrimX(txt_Cat_WithdrawYear.Text)
                    myWithdrawYear = RemoveQuotes(myWithdrawYear)
                    If Not Len(myWithdrawYear.ToString) = 4 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_WithdrawYear.Focus()
                        Exit Sub
                    End If

                    myWithdrawYear = " " & myWithdrawYear & " "
                    If InStr(1, myWithdrawYear, "CREATE", 1) > 0 Or InStr(1, myWithdrawYear, "DELETE", 1) > 0 Or InStr(1, myWithdrawYear, "DROP", 1) > 0 Or InStr(1, myWithdrawYear, "INSERT", 1) > 1 Or InStr(1, myWithdrawYear, "TRACK", 1) > 1 Or InStr(1, myWithdrawYear, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_WithdrawYear.Focus()
                        Exit Sub
                    End If
                    myWithdrawYear = TrimX(myWithdrawYear)
                    'check unwanted characters
                    c = 0
                    counter56 = 0
                    For iloop = 1 To Len(myWithdrawYear.ToString)
                        strcurrentchar = Mid(myWithdrawYear, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter56 = 1
                            End If
                        End If
                    Next
                    If counter56 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_WithdrawYear.Focus()
                        Exit Sub
                    End If
                Else
                    myWithdrawYear = 0
                End If

                'Server validation for  : SP Technical Committee
                Dim mySPCommittee As Object = Nothing
                If txt_Cat_SPTCSC.Text <> "" Then
                    mySPCommittee = TrimAll(txt_Cat_SPTCSC.Text)
                    mySPCommittee = RemoveQuotes(mySPCommittee)
                    If mySPCommittee.Length > 250 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_SPTCSC.Focus()
                        Exit Sub
                    End If
                    mySPCommittee = " " & mySPCommittee & " "
                    If InStr(1, mySPCommittee, "CREATE", 1) > 0 Or InStr(1, mySPCommittee, "DELETE", 1) > 0 Or InStr(1, mySPCommittee, "DROP", 1) > 0 Or InStr(1, mySPCommittee, "INSERT", 1) > 1 Or InStr(1, mySPCommittee, "TRACK", 1) > 1 Or InStr(1, mySPCommittee, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_SPTCSC.Focus()
                        Exit Sub
                    End If
                    mySPCommittee = TrimAll(mySPCommittee)
                    'check unwanted characters
                    c = 0
                    counter57 = 0
                    For iloop = 1 To Len(mySPCommittee.ToString)
                        strcurrentchar = Mid(mySPCommittee, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter57 = 1
                            End If
                        End If
                    Next
                    If counter57 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_SPTCSC.Focus()
                        Exit Sub
                    End If
                Else
                    mySPCommittee = ""
                End If

                'Server validation for  : txt_Cat_SPUpdates
                Dim mySPUpdates As Object = Nothing
                If txt_Cat_SPUpdates.Text <> "" Then
                    mySPUpdates = TrimAll(txt_Cat_SPUpdates.Text)
                    mySPUpdates = RemoveQuotes(mySPUpdates)
                    If mySPUpdates.Length > 250 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_SPUpdates.Focus()
                        Exit Sub
                    End If
                    mySPUpdates = " " & mySPUpdates & " "
                    If InStr(1, mySPUpdates, "CREATE", 1) > 0 Or InStr(1, mySPUpdates, "DELETE", 1) > 0 Or InStr(1, mySPUpdates, "DROP", 1) > 0 Or InStr(1, mySPUpdates, "INSERT", 1) > 1 Or InStr(1, mySPUpdates, "TRACK", 1) > 1 Or InStr(1, mySPUpdates, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_SPUpdates.Focus()
                        Exit Sub
                    End If
                    mySPUpdates = TrimAll(mySPUpdates)
                    'check unwanted characters
                    c = 0
                    counter58 = 0
                    For iloop = 1 To Len(mySPUpdates.ToString)
                        strcurrentchar = Mid(mySPUpdates, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter58 = 1
                            End If
                        End If
                    Next
                    If counter58 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_SPUpdates.Focus()
                        Exit Sub
                    End If
                Else
                    mySPUpdates = ""
                End If

                'Server validation for  : txt_Cat_SPAmmendments
                Dim mySPAmmendments As Object = Nothing
                If txt_Cat_SPAmmendments.Text <> "" Then
                    mySPAmmendments = TrimAll(txt_Cat_SPAmmendments.Text)
                    mySPAmmendments = RemoveQuotes(mySPAmmendments)
                    If mySPAmmendments.Length > 250 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_SPAmmendments.Focus()
                        Exit Sub
                    End If
                    mySPAmmendments = " " & mySPAmmendments & " "
                    If InStr(1, mySPAmmendments, "CREATE", 1) > 0 Or InStr(1, mySPAmmendments, "DELETE", 1) > 0 Or InStr(1, mySPAmmendments, "DROP", 1) > 0 Or InStr(1, mySPAmmendments, "INSERT", 1) > 1 Or InStr(1, mySPAmmendments, "TRACK", 1) > 1 Or InStr(1, mySPAmmendments, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_SPAmmendments.Focus()
                        Exit Sub
                    End If
                    mySPAmmendments = TrimAll(mySPAmmendments)
                    'check unwanted characters
                    c = 0
                    counter59 = 0
                    For iloop = 1 To Len(mySPAmmendments.ToString)
                        strcurrentchar = Mid(mySPAmmendments, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter59 = 1
                            End If
                        End If
                    Next
                    If counter59 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_SPAmmendments.Focus()
                        Exit Sub
                    End If
                Else
                    mySPAmmendments = ""
                End If

                'Server validation for  : txt_Cat_SPAmmendments
                Dim mySPIssueBody As Object = Nothing
                If txt_Cat_SPIssueBody.Text <> "" Then
                    mySPIssueBody = TrimAll(txt_Cat_SPIssueBody.Text)
                    mySPIssueBody = RemoveQuotes(mySPIssueBody)
                    If mySPAmmendments.Length > 350 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_SPIssueBody.Focus()
                        Exit Sub
                    End If
                    mySPIssueBody = " " & mySPIssueBody & " "
                    If InStr(1, mySPIssueBody, "CREATE", 1) > 0 Or InStr(1, mySPIssueBody, "DELETE", 1) > 0 Or InStr(1, mySPIssueBody, "DROP", 1) > 0 Or InStr(1, mySPIssueBody, "INSERT", 1) > 1 Or InStr(1, mySPIssueBody, "TRACK", 1) > 1 Or InStr(1, mySPIssueBody, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_SPIssueBody.Focus()
                        Exit Sub
                    End If
                    mySPIssueBody = TrimAll(mySPIssueBody)
                    'check unwanted characters
                    c = 0
                    counter60 = 0
                    For iloop = 1 To Len(mySPIssueBody.ToString)
                        strcurrentchar = Mid(mySPIssueBody, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter60 = 1
                            End If
                        End If
                    Next
                    If counter60 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_SPIssueBody.Focus()
                        Exit Sub
                    End If
                Else
                    mySPIssueBody = ""
                End If

                'Server validation for  : txt_Cat_Producer            
                Dim myProducer As Object = Nothing
                If txt_Cat_Producer.Text <> "" Then
                    myProducer = TrimAll(txt_Cat_Producer.Text)
                    myProducer = RemoveQuotes(myProducer)
                    If myProducer.Length > 250 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Producer.Focus()
                        Exit Sub
                    End If
                Else
                    myProducer = ""
                End If

                'Server validation for  : txt_Cat_Designer            
                Dim myDesigner As Object = Nothing
                If txt_Cat_Designer.Text <> "" Then
                    myDesigner = TrimAll(txt_Cat_Designer.Text)
                    myDesigner = RemoveQuotes(myDesigner)
                    If myDesigner.Length > 150 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Designer.Focus()
                        Exit Sub
                    End If
                Else
                    myDesigner = ""
                End If

                'Server validation for  : txt_Cat_Manufacturer						            
                Dim myManufacturer As Object = Nothing
                If txt_Cat_Manufacturer.Text <> "" Then
                    myManufacturer = TrimAll(txt_Cat_Manufacturer.Text)
                    myManufacturer = RemoveQuotes(myManufacturer)
                    If myManufacturer.Length > 250 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Manufacturer.Focus()
                        Exit Sub
                    End If
                Else
                    myManufacturer = ""
                End If

                'Server validation for  : txt_Cat_Creater									            
                Dim myCreator As Object = Nothing
                If txt_Cat_Creater.Text <> "" Then
                    myCreator = TrimAll(txt_Cat_Creater.Text)
                    myCreator = RemoveQuotes(myCreator)
                    If myCreator.Length > 150 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Creater.Focus()
                        Exit Sub
                    End If
                Else
                    myCreator = ""
                End If

                'Server validation for  : txt_Cat_Materials											            
                Dim myMaterials As Object = Nothing
                If txt_Cat_Materials.Text <> "" Then
                    myMaterials = TrimAll(txt_Cat_Materials.Text)
                    myMaterials = RemoveQuotes(myMaterials)
                    If myMaterials.Length > 50 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Materials.Focus()
                        Exit Sub
                    End If
                Else
                    myMaterials = ""
                End If

                'Server validation for  : txt_Cat_WrokCategory													            
                Dim myWorkCategory As Object = Nothing
                If txt_Cat_WrokCategory.Text <> "" Then
                    myWorkCategory = TrimAll(txt_Cat_WrokCategory.Text)
                    myWorkCategory = RemoveQuotes(myWorkCategory)
                    If myWorkCategory.Length > 50 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_WrokCategory.Focus()
                        Exit Sub
                    End If
                Else
                    myWorkCategory = ""
                End If

                'Server validation for  : txt_Cat_RelatedWork																			            
                Dim myRelatedWork As Object = Nothing
                If txt_Cat_RelatedWork.Text <> "" Then
                    myRelatedWork = TrimAll(txt_Cat_RelatedWork.Text)
                    myRelatedWork = RemoveQuotes(myRelatedWork)
                    If myRelatedWork.Length > 250 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_RelatedWork.Focus()
                        Exit Sub
                    End If
                Else
                    myRelatedWork = ""
                End If

                'ser rver validation for  : txt_Cat_Source																										            
                Dim mySource As Object = Nothing
                If txt_Cat_Source.Text <> "" Then
                    mySource = TrimAll(txt_Cat_Source.Text)
                    mySource = RemoveQuotes(mySource)
                    If mySource.Length > 250 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Source.Focus()
                        Exit Sub
                    End If
                Else
                    mySource = ""
                End If

                'ser rver validation for  : txt_Cat_Photographer																																            
                Dim myPhotographer As Object = Nothing
                If txt_Cat_Photographer.Text <> "" Then
                    myPhotographer = TrimAll(txt_Cat_Photographer.Text)
                    myPhotographer = RemoveQuotes(myPhotographer)
                    If myPhotographer.Length > 250 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Photographer.Focus()
                        Exit Sub
                    End If
                Else
                    myPhotographer = ""
                End If

                'ser rver validation for  : txt_Cat_Nationality																																	            
                Dim myNationality As Object = Nothing
                If txt_Cat_Nationality.Text <> "" Then
                    myNationality = TrimAll(txt_Cat_Nationality.Text)
                    myNationality = RemoveQuotes(myNationality)
                    If myNationality.Length > 50 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Nationality.Focus()
                        Exit Sub
                    End If
                Else
                    myNationality = ""
                End If

                'ser rver validation for  : txt_Cat_Techniq																																	            
                Dim myTechniq As Object = Nothing
                If txt_Cat_Techniq.Text <> "" Then
                    myTechniq = TrimAll(txt_Cat_Techniq.Text)
                    myTechniq = RemoveQuotes(myTechniq)
                    If myTechniq.Length > 150 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_Techniq.Focus()
                        Exit Sub
                    End If
                Else
                    myTechniq = ""
                End If

                'ser rver validation for  : txt_Cat_WorkType																																			            
                Dim myWorkType As Object = Nothing
                If txt_Cat_WorkType.Text <> "" Then
                    myWorkType = TrimAll(txt_Cat_WorkType.Text)
                    myWorkType = RemoveQuotes(myWorkType)
                    If myWorkType.Length > 50 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_WorkType.Focus()
                        Exit Sub
                    End If
                Else
                    myWorkType = ""
                End If

                'ser rver validation for  : txt_Cat_RoleofCreator																																					            
                Dim myRoleofCreator As Object = Nothing
                If txt_Cat_RoleofCreator.Text <> "" Then
                    myRoleofCreator = TrimAll(txt_Cat_RoleofCreator.Text)
                    myRoleofCreator = RemoveQuotes(myRoleofCreator)
                    If myRoleofCreator.Length > 50 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_RoleofCreator.Focus()
                        Exit Sub
                    End If
                Else
                    myRoleofCreator = ""
                End If

                'Server validation for  : SP Re-txt_Cat_ProductionYear		
                Dim myProductionYear As Integer = Nothing
                If txt_Cat_ProductionYear.Text <> "" Then
                    myProductionYear = TrimX(txt_Cat_ProductionYear.Text)
                    myProductionYear = RemoveQuotes(myProductionYear)
                    If Not Len(myProductionYear.ToString) = 4 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ProductionYear.Focus()
                        Exit Sub
                    End If

                    myProductionYear = " " & myProductionYear & " "
                    If InStr(1, myProductionYear, "CREATE", 1) > 0 Or InStr(1, myProductionYear, "DELETE", 1) > 0 Or InStr(1, myProductionYear, "DROP", 1) > 0 Or InStr(1, myProductionYear, "INSERT", 1) > 1 Or InStr(1, myProductionYear, "TRACK", 1) > 1 Or InStr(1, myProductionYear, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ProductionYear.Focus()
                        Exit Sub
                    End If
                    myProductionYear = TrimX(myProductionYear)
                    'check unwanted characters
                    c = 0
                    counter56 = 0
                    For iloop = 1 To Len(myProductionYear.ToString)
                        strcurrentchar = Mid(myProductionYear, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter56 = 1
                            End If
                        End If
                    Next
                    If counter56 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ProductionYear.Focus()
                        Exit Sub
                    End If
                Else
                    myProductionYear = 0
                End If

                'validation for CHAIRMAN
                Dim CHAIRMAN As Object = Nothing
                If txt_Cat_Chairman.Text <> "" Then
                    CHAIRMAN = TrimAll(txt_Cat_Chairman.Text)
                    CHAIRMAN = RemoveQuotes(CHAIRMAN)
                    If CHAIRMAN.Length > 250 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Cat_Chairman.Focus()
                        Exit Sub
                    End If
                    CHAIRMAN = " " & CHAIRMAN & " "
                    If InStr(1, CHAIRMAN, "CREATE", 1) > 0 Or InStr(1, CHAIRMAN, "DELETE", 1) > 0 Or InStr(1, CHAIRMAN, "DROP", 1) > 0 Or InStr(1, CHAIRMAN, "INSERT", 1) > 1 Or InStr(1, CHAIRMAN, "TRACK", 1) > 1 Or InStr(1, CHAIRMAN, "TRACE", 1) > 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Cat_Chairman.Focus()
                        Exit Sub
                    End If
                    CHAIRMAN = TrimAll(CHAIRMAN)
                    'check unwanted characters
                    c = 0
                    counter71 = 0
                    For iloop = 1 To Len(CHAIRMAN)
                        strcurrentchar = Mid(CHAIRMAN, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter71 = 1
                            End If
                        End If
                    Next
                    If counter71 = 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Cat_Chairman.Focus()
                        Exit Sub
                    End If
                Else
                    CHAIRMAN = ""
                End If

                'validation for GOVERNMENT
                Dim GOVERNMENT As Object = Nothing
                If TR_GOVERNMENT.Visible = True Then
                    If DDL_Government.Text <> "" Then
                        GOVERNMENT = DDL_Government.SelectedValue
                        GOVERNMENT = RemoveQuotes(GOVERNMENT)
                        If GOVERNMENT.Length > 50 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Government.Focus()
                            Exit Sub
                        End If
                        GOVERNMENT = " " & GOVERNMENT & " "
                        If InStr(1, GOVERNMENT, "CREATE", 1) > 0 Or InStr(1, GOVERNMENT, "DELETE", 1) > 0 Or InStr(1, GOVERNMENT, "DROP", 1) > 0 Or InStr(1, GOVERNMENT, "INSERT", 1) > 1 Or InStr(1, GOVERNMENT, "TRACK", 1) > 1 Or InStr(1, GOVERNMENT, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Government.Focus()
                            Exit Sub
                        End If
                        GOVERNMENT = TrimAll(GOVERNMENT)
                        'check unwanted characters
                        c = 0
                        counter72 = 0
                        For iloop = 1 To Len(GOVERNMENT)
                            strcurrentchar = Mid(GOVERNMENT, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter72 = 1
                                End If
                            End If
                        Next
                        If counter72 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Government.Focus()
                            Exit Sub
                        End If
                    Else
                        GOVERNMENT = ""
                    End If
                Else
                    GOVERNMENT = ""
                End If

                'validation for ACT_NO
                Dim ACT_NO As Object = Nothing
                If txt_Cat_ActNo.Text <> "" Then
                    ACT_NO = TrimAll(txt_Cat_ActNo.Text)
                    ACT_NO = RemoveQuotes(ACT_NO)
                    If ACT_NO.Length > 150 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Cat_ActNo.Focus()
                        Exit Sub
                    End If
                    ACT_NO = " " & ACT_NO & " "
                    If InStr(1, ACT_NO, "CREATE", 1) > 0 Or InStr(1, ACT_NO, "DELETE", 1) > 0 Or InStr(1, ACT_NO, "DROP", 1) > 0 Or InStr(1, ACT_NO, "INSERT", 1) > 1 Or InStr(1, ACT_NO, "TRACK", 1) > 1 Or InStr(1, ACT_NO, "TRACE", 1) > 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Cat_ActNo.Focus()
                        Exit Sub
                    End If
                    ACT_NO = TrimAll(ACT_NO)
                    'check unwanted characters
                    c = 0
                    counter73 = 0
                    For iloop = 1 To Len(ACT_NO)
                        strcurrentchar = Mid(ACT_NO, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter73 = 1
                            End If
                        End If
                    Next
                    If counter73 = 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Cat_ActNo.Focus()
                        Exit Sub
                    End If
                Else
                    ACT_NO = ""
                End If

                'Server validation for  : ACT_YEAR		
                Dim ACT_YEAR As Integer = Nothing
                If txt_Cat_ActYear.Text <> "" Then
                    ACT_YEAR = TrimX(txt_Cat_ActYear.Text)
                    ACT_YEAR = RemoveQuotes(ACT_YEAR)
                    If Not Len(ACT_YEAR.ToString) = 4 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Cat_ActYear.Focus()
                        Exit Sub
                    End If

                    ACT_YEAR = " " & ACT_YEAR & " "
                    If InStr(1, ACT_YEAR, "CREATE", 1) > 0 Or InStr(1, ACT_YEAR, "DELETE", 1) > 0 Or InStr(1, ACT_YEAR, "DROP", 1) > 0 Or InStr(1, ACT_YEAR, "INSERT", 1) > 1 Or InStr(1, ACT_YEAR, "TRACK", 1) > 1 Or InStr(1, ACT_YEAR, "TRACE", 1) > 1 Then
                        Label6.Text = " Do Not use Reserve Words... "
                        Label15.Text = ""
                        Me.txt_Cat_ActYear.Focus()
                        Exit Sub
                    End If
                    ACT_YEAR = TrimX(ACT_YEAR)
                    'check unwanted characters
                    c = 0
                    counter56 = 0
                    For iloop = 1 To Len(ACT_YEAR.ToString)
                        strcurrentchar = Mid(ACT_YEAR, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter56 = 1
                            End If
                        End If
                    Next
                    If counter56 = 1 Then
                        Label6.Text = " Do Not use un-wanted Characters... "
                        Label15.Text = ""
                        Me.txt_Cat_ActYear.Focus()
                        Exit Sub
                    End If
                Else
                    ACT_YEAR = 0
                End If

                'upload library photo
                Dim arrContent2 As Byte()
                Dim intLength2Photo As Integer = 0
                If FileUpload1.FileName = "" Then
                    '    ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Please Select Proper file... ');", True)
                    '    Me.FileUpload12.Focus()
                    '    Exit Sub
                Else
                    Dim fileName As String = FileUpload1.PostedFile.FileName
                    Dim ext As String = fileName.Substring(fileName.LastIndexOf("."))
                    ext = ext.ToLower
                    Dim imgType = FileUpload1.PostedFile.ContentType

                    If ext = ".jpg" Then

                    ElseIf ext = ".bmp" Then

                    ElseIf ext = ".gif" Then

                    ElseIf ext = "jpg" Then

                    ElseIf ext = "bmp" Then

                    ElseIf ext = "gif" Then

                    Else
                        ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Please Select Only gif, bmp, or jpg format files supported... ');", True)
                        Me.FileUpload1.Focus()
                        Exit Sub
                    End If
                    intLength2Photo = Convert.ToInt32(FileUpload1.PostedFile.InputStream.Length)
                    ReDim arrContent2(intLength2Photo)
                    FileUpload1.PostedFile.InputStream.Read(arrContent2, 0, intLength2Photo)

                    If intLength2Photo > 6000 Then
                        Label6.Text = "Error: Photo Size is Bigger than 6 KB"
                        Label15.Text = ""
                        Exit Sub
                    End If
                    Image1.ImageUrl = FileUpload1.PostedFile.FileName '"~/Images/1.png"
                End If

                'upload content file
                Dim arrContent3 As Byte()
                Dim FileType As String = Nothing
                Dim FileExtension As String = Nothing
                Dim intLength3 As Integer = 0
                If FileUpload2.FileName = "" Then
                    '    ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Please Select Proper file... ');", True)
                    '    Me.FileUpload12.Focus()
                    '    Exit Sub
                Else
                    Dim ContfileName As String = FileUpload2.PostedFile.FileName
                    FileExtension = ContfileName.Substring(ContfileName.LastIndexOf("."))
                    FileExtension = FileExtension.ToLower
                    FileType = FileUpload2.PostedFile.ContentType

                    intLength3 = Convert.ToInt32(FileUpload2.PostedFile.InputStream.Length)
                    ReDim arrContent3(intLength3)
                    FileUpload2.PostedFile.InputStream.Read(arrContent3, 0, intLength3)

                    If intLength3 > 90000 Then
                        Label6.Text = "Error: Photo Size is Bigger than 90 KB"
                        Label15.Text = ""
                        Exit Sub
                    End If
                End If

                Dim myUserCode As Object = Nothing
                myUserCode = Session.Item("LoggedUser")

                Dim myDateAdded As Object = Nothing
                myDateAdded = Now.Date
                myDateAdded = Convert.ToDateTime(myDateAdded, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                Dim myCatLevel As Object = Nothing
                myCatLevel = "Full"

                Dim myIP As Object = Nothing
                myIP = Request.UserHostAddress.Trim

                'check title for duplicacy
                Dim str3 As Object = Nothing
                Dim flag3 As Object = Nothing

                If myAuthor1 = "" And myAuthor2 = "" And myAuthor3 = "" Then
                    str3 = "select CAT_NO from CATS_AUTHORS_VIEW where (TITLE= N'" & myTitle & "') "
                ElseIf myAuthor1 <> "" And myAuthor2 = "" And myAuthor3 = "" Then
                    str3 = "select CAT_NO from CATS_AUTHORS_VIEW where (TITLE = N'" & myTitle & "' and AUTHOR1='" & myAuthor1 & "')"
                ElseIf myAuthor1 <> "" And myAuthor2 <> "" And myAuthor3 = "" Then
                    str3 = "select CAT_NO from CATS_AUTHORS_VIEW where (TITLE = N'" & myTitle & "' and AUTHOR1='" & myAuthor1 & "' and AUTHOR2='" & myAuthor2 & "')"
                ElseIf myAuthor1 <> "" And myAuthor2 <> "" And myAuthor3 <> "" Then
                    str3 = "select CAT_NO from CATS_AUTHORS_VIEW where (TITLE = N'" & myTitle & "' and AUTHOR1='" & myAuthor1 & "' and AUTHOR2='" & myAuthor2 & "' and AUTHOR3='" & myAuthor3 & "')"
                End If
                If myEdition <> String.Empty Then
                    str3 = str3 & " AND (EDITION= N'" & myEdition & "') "
                End If

                Dim PUBNAMEX As Object = Nothing
                If Pub_ComboBox.Text <> "" Then
                    PUBNAMEX = Pub_ComboBox.SelectedItem.ToString
                Else
                    PUBNAMEX = ""
                End If
                If PUBNAMEX <> String.Empty Then
                    str3 = str3 & " AND (PUB_NAME= N'" & PUBNAMEX & "') "
                End If
                If myPubYear <> 0 Then
                    str3 = str3 & " AND (YEAR_OF_PUB= '" & myPubYear & "') "
                End If


                Dim cmd3 As New SqlCommand(str3, SqlConn)
                SqlConn.Open()
                flag3 = cmd3.ExecuteScalar
                SqlConn.Close()
                If flag3 <> Nothing Then
                    Label6.Text = "This TITLE Already Exists ! "
                    Label15.Text = ""
                    Me.txt_Cat_ISBN.Focus()
                    Exit Sub
                End If



                '*************************************************************************************************************************
                'GET HOLDINGS VARIABLE
                'txt_Hold_AccSereis
                Dim counter85, counter86, counter87, counter88, counter89, counter90, counter91, counter92, counter93, counter94, counter95, counter96, counter97, counter98, counter99 As Integer
                Dim counter100, counter101, counter102, counter103, counter104, counter105, counter106, counter107, counter108, counter109, counter110, counter111, counter112, counter113 As Integer


                Dim ACCESSION_SERIES As Object = Nothing
                If txt_Hold_AccSereis.Text <> "" Then
                    ACCESSION_SERIES = TrimX(UCase(txt_Hold_AccSereis.Text))
                    ACCESSION_SERIES = RemoveQuotes(ACCESSION_SERIES)
                    If ACCESSION_SERIES.Length > 10 Then 'maximum length
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Hold_AccSereis.Focus()
                        Exit Sub
                    End If

                    ACCESSION_SERIES = " " & ACCESSION_SERIES & " "
                    If InStr(1, ACCESSION_SERIES, "CREATE", 1) > 0 Or InStr(1, ACCESSION_SERIES, "DELETE", 1) > 0 Or InStr(1, ACCESSION_SERIES, "DROP", 1) > 0 Or InStr(1, ACCESSION_SERIES, "INSERT", 1) > 1 Or InStr(1, ACCESSION_SERIES, "TRACK", 1) > 1 Or InStr(1, ACCESSION_SERIES, "TRACE", 1) > 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        Me.txt_Hold_AccSereis.Focus()
                        Exit Sub
                    End If
                    ACCESSION_SERIES = TrimX(ACCESSION_SERIES)
                    'check unwanted characters
                    c = 0
                    counter85 = 0
                    For iloop = 1 To Len(ACCESSION_SERIES.ToString)
                        strcurrentchar = Mid(ACCESSION_SERIES, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#$^*+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter85 = 1
                            End If
                        End If
                    Next
                    If counter85 = 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        Me.txt_Hold_AccSereis.Focus()
                        Exit Sub
                    End If
                Else
                    ACCESSION_SERIES = ""
                End If


                'Server Validation for accession no
                Dim ACCESSION_NO As Object = Nothing
                If txt_Hold_AccNo.Text <> "" Then
                    ACCESSION_NO = TrimX(UCase(txt_Hold_AccNo.Text))
                    ACCESSION_NO = RemoveQuotes(ACCESSION_NO)
                    If ACCESSION_NO.Length > 30 Then 'maximum length
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Hold_AccNo.Focus()
                        Exit Sub
                    End If

                    ACCESSION_NO = " " & ACCESSION_NO & " "
                    If InStr(1, ACCESSION_NO, "CREATE", 1) > 0 Or InStr(1, ACCESSION_NO, "DELETE", 1) > 0 Or InStr(1, ACCESSION_NO, "DROP", 1) > 0 Or InStr(1, ACCESSION_NO, "INSERT", 1) > 1 Or InStr(1, ACCESSION_NO, "TRACK", 1) > 1 Or InStr(1, ACCESSION_NO, "TRACE", 1) > 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        Me.txt_Hold_AccNo.Focus()
                        Exit Sub
                    End If
                    ACCESSION_NO = TrimX(ACCESSION_NO)
                    'check unwanted characters
                    c = 0
                    counter86 = 0
                    For iloop = 1 To Len(ACCESSION_NO.ToString)
                        strcurrentchar = Mid(ACCESSION_NO, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'~!@#$^*+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter86 = 1
                            End If
                        End If
                    Next
                    If counter86 = 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        Me.txt_Hold_AccNo.Focus()
                        Exit Sub
                    End If

                    'if range of accn no  then chk if it is numeric
                    If CB_RecvAll.Checked = True Then
                        If IsNumeric(ACCESSION_NO) = False Then
                            Label6.Text = "In Case you wish to Accession in bulk Then Plz Enter Accession Series(if any) in Sereis Text Box and Enter ACCESSION NO in Digits Only !"
                            Label15.Text = ""
                            Me.txt_Hold_AccNo.Focus()
                            Exit Sub
                        End If

                        If txt_Hold_Copies.Text = "" Then
                            Label6.Text = "Plz Enter No of Copies u wish to accession"
                            Label15.Text = ""
                            Me.txt_Hold_Copies.Focus()
                            Exit Sub
                        End If
                    End If

                    'add sereis with acc no
                    If ACCESSION_SERIES <> "" Then
                        ACCESSION_NO = ACCESSION_SERIES + ACCESSION_NO
                    End If

                    'check duplicate acc no
                    Dim str As Object = Nothing
                    Dim flag As Object = Nothing
                    str = "SELECT HOLD_ID FROM HOLDINGS WHERE (ACCESSION_NO = '" & Trim(ACCESSION_NO) & "')  AND (LIB_CODE = '" & Trim(DDL_Library.SelectedValue) & "')"
                    Dim cmd1 As New SqlCommand(str, SqlConn)
                    SqlConn.Open()
                    flag = cmd1.ExecuteScalar
                    If flag <> Nothing Then
                        Label6.Text = "This Accession No Already Exists ! "
                        Label15.Text = ""
                        Me.txt_Hold_AccNo.Focus()
                        Exit Sub
                    End If
                    SqlConn.Close()
                Else
                    Label6.Text = "Error: Accession No is Required !"
                    Label15.Text = ""
                    Me.txt_Hold_AccNo.Focus()
                    Exit Sub
                End If

                'search accession date
                Dim ACCESSION_DATE As Object = Nothing
                If txt_Hold_AccDate.Text <> "" Then
                    ACCESSION_DATE = TrimX(txt_Hold_AccDate.Text)
                    ACCESSION_DATE = RemoveQuotes(ACCESSION_DATE)
                    ACCESSION_DATE = Convert.ToDateTime(ACCESSION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                    If Len(ACCESSION_DATE) > 12 Then
                        Label6.Text = " Input is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_AccDate.Focus()
                        Exit Sub
                    End If
                    ACCESSION_DATE = " " & ACCESSION_DATE & " "
                    If InStr(1, ACCESSION_DATE, "CREATE", 1) > 0 Or InStr(1, ACCESSION_DATE, "DELETE", 1) > 0 Or InStr(1, ACCESSION_DATE, "DROP", 1) > 0 Or InStr(1, ACCESSION_DATE, "INSERT", 1) > 1 Or InStr(1, ACCESSION_DATE, "TRACK", 1) > 1 Or InStr(1, ACCESSION_DATE, "TRACE", 1) > 1 Then
                        Label6.Text = "  Input is not Valid... "
                        Label15.Text = ""
                        Me.txt_Hold_AccDate.Focus()
                        Exit Sub
                    End If
                    ACCESSION_DATE = TrimX(ACCESSION_DATE)
                    'check unwanted characters
                    c = 0
                    counter87 = 0
                    For iloop = 1 To Len(ACCESSION_DATE)
                        strcurrentchar = Mid(ACCESSION_DATE, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter87 = 1
                            End If
                        End If
                    Next
                    If counter87 = 1 Then
                        Label6.Text = "data is not Valid... "
                        Label15.Text = ""
                        Me.txt_Hold_AccDate.Focus()
                        Exit Sub
                    End If
                Else
                    ACCESSION_DATE = Now.Date
                    ACCESSION_DATE = Convert.ToDateTime(ACCESSION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us
                End If

                'validation for Format
                Dim FORMAT_CODE As Object = Nothing
                If TR_FORMAT_CODE.Visible = True Then
                    FORMAT_CODE = DDL_Format.SelectedValue
                    If Not String.IsNullOrEmpty(FORMAT_CODE) Then
                        FORMAT_CODE = RemoveQuotes(FORMAT_CODE)
                        If FORMAT_CODE.Length > 3 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            DDL_Format.Focus()
                            Exit Sub
                        End If

                        FORMAT_CODE = " " & FORMAT_CODE & " "
                        If InStr(1, FORMAT_CODE, "CREATE", 1) > 0 Or InStr(1, FORMAT_CODE, "DELETE", 1) > 0 Or InStr(1, FORMAT_CODE, "DROP", 1) > 0 Or InStr(1, FORMAT_CODE, "INSERT", 1) > 1 Or InStr(1, FORMAT_CODE, "TRACK", 1) > 1 Or InStr(1, FORMAT_CODE, "TRACE", 1) > 1 Then
                            ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                            DDL_Format.Focus()
                            Exit Sub
                        End If
                        FORMAT_CODE = TrimX(FORMAT_CODE)
                        'check unwanted characters
                        c = 0
                        counter88 = 0
                        For iloop = 1 To Len(FORMAT_CODE)
                            strcurrentchar = Mid(FORMAT_CODE, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter88 = 1
                                End If
                            End If
                        Next
                        If counter88 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            DDL_Format.Focus()
                            Exit Sub
                        End If
                    Else
                        FORMAT_CODE = "PT"
                    End If
                Else
                    FORMAT_CODE = "PT"
                End If

                'validation for SHOW
                Dim SHOW As Object = Nothing
                SHOW = DDL_Show.SelectedValue
                If Not String.IsNullOrEmpty(SHOW) Then
                    SHOW = RemoveQuotes(SHOW)
                    If SHOW.Length > 2 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        DDL_Show.Focus()
                        Exit Sub
                    End If

                    SHOW = " " & SHOW & " "
                    If InStr(1, SHOW, "CREATE", 1) > 0 Or InStr(1, SHOW, "DELETE", 1) > 0 Or InStr(1, SHOW, "DROP", 1) > 0 Or InStr(1, SHOW, "INSERT", 1) > 1 Or InStr(1, SHOW, "TRACK", 1) > 1 Or InStr(1, SHOW, "TRACE", 1) > 1 Then
                        DDL_Show.Focus()
                        Exit Sub
                    End If
                    SHOW = TrimX(SHOW)
                    'check unwanted characters
                    c = 0
                    counter89 = 0
                    For iloop = 1 To Len(SHOW)
                        strcurrentchar = Mid(SHOW, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter89 = 1
                            End If
                        End If
                    Next
                    If counter89 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        DDL_Show.Focus()
                        Exit Sub
                    End If
                Else
                    SHOW = "Y"
                End If

                'validation for ISSUABLE
                Dim ISSUABLE As Object = Nothing
                ISSUABLE = DDL_Issuable.SelectedValue
                If Not String.IsNullOrEmpty(ISSUABLE) Then
                    ISSUABLE = RemoveQuotes(ISSUABLE)
                    If ISSUABLE.Length > 2 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        DDL_Issuable.Focus()
                        Exit Sub
                    End If

                    ISSUABLE = " " & ISSUABLE & " "
                    If InStr(1, ISSUABLE, "CREATE", 1) > 0 Or InStr(1, ISSUABLE, "DELETE", 1) > 0 Or InStr(1, ISSUABLE, "DROP", 1) > 0 Or InStr(1, ISSUABLE, "INSERT", 1) > 1 Or InStr(1, ISSUABLE, "TRACK", 1) > 1 Or InStr(1, ISSUABLE, "TRACE", 1) > 1 Then
                        DDL_Issuable.Focus()
                        Exit Sub
                    End If
                    ISSUABLE = TrimX(ISSUABLE)
                    'check unwanted characters
                    c = 0
                    counter90 = 0
                    For iloop = 1 To Len(ISSUABLE)
                        strcurrentchar = Mid(ISSUABLE, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter90 = 1
                            End If
                        End If
                    Next
                    If counter90 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        DDL_Issuable.Focus()
                        Exit Sub
                    End If
                Else
                    ISSUABLE = "Y"
                End If

                'validation for VOL_NO
                Dim VOL_NO As Object = Nothing
                If TR_VOL_NO.Visible = True Then
                    VOL_NO = Trim(txt_Hold_VolNo.Text)
                    If Not String.IsNullOrEmpty(VOL_NO) Then
                        VOL_NO = RemoveQuotes(VOL_NO)
                        If VOL_NO.Length > 30 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_VolNo.Focus()
                            Exit Sub
                        End If

                        VOL_NO = " " & VOL_NO & " "
                        If InStr(1, VOL_NO, "CREATE", 1) > 0 Or InStr(1, VOL_NO, "DELETE", 1) > 0 Or InStr(1, VOL_NO, "DROP", 1) > 0 Or InStr(1, VOL_NO, "INSERT", 1) > 1 Or InStr(1, VOL_NO, "TRACK", 1) > 1 Or InStr(1, VOL_NO, "TRACE", 1) > 1 Then
                            txt_Hold_VolNo.Focus()
                            Exit Sub
                        End If
                        VOL_NO = TrimAll(VOL_NO)
                        'check unwanted characters
                        c = 0
                        counter91 = 0
                        For iloop = 1 To Len(VOL_NO)
                            strcurrentchar = Mid(VOL_NO, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter91 = 1
                                End If
                            End If
                        Next
                        If counter91 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            txt_Hold_VolNo.Focus()
                            Exit Sub
                        End If
                    Else
                        VOL_NO = ""
                    End If
                Else
                    VOL_NO = ""
                End If

                'validation for cat_no
                Dim VOL_YEAR As Integer = Nothing
                If TR_VOL_NO.Visible = True Then
                    If Me.txt_Hold_VolYear.Text <> "" Then
                        VOL_YEAR = Convert.ToInt16(TrimX(txt_Hold_VolYear.Text))
                        VOL_YEAR = RemoveQuotes(VOL_YEAR)
                        If Not IsNumeric(VOL_YEAR) = True Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Hold_VolYear.Focus()
                            Exit Sub
                        End If
                        If Len(VOL_YEAR) > 5 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Hold_VolYear.Focus()
                            Exit Sub
                        End If
                        VOL_YEAR = " " & VOL_YEAR & " "
                        If InStr(1, VOL_YEAR, "CREATE", 1) > 0 Or InStr(1, VOL_YEAR, "DELETE", 1) > 0 Or InStr(1, VOL_YEAR, "DROP", 1) > 0 Or InStr(1, VOL_YEAR, "INSERT", 1) > 1 Or InStr(1, VOL_YEAR, "TRACK", 1) > 1 Or InStr(1, VOL_YEAR, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Hold_VolYear.Focus()
                            Exit Sub
                        End If
                        VOL_YEAR = TrimX(VOL_YEAR)
                        'check unwanted characters
                        c = 0
                        counter92 = 0
                        For iloop = 1 To Len(VOL_YEAR.ToString)
                            strcurrentchar = Mid(VOL_YEAR, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter92 = 1
                                End If
                            End If
                        Next
                        If counter93 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Hold_VolYear.Focus()
                            Exit Sub
                        End If
                    Else
                        VOL_YEAR = 0
                    End If
                Else
                    VOL_YEAR = 0
                End If

                'validation for VOL_EDITORS
                Dim VOL_EDITORS As Object = Nothing
                If TR_VOL_EDITORS.Visible = True Then
                    VOL_EDITORS = TrimAll(txt_Hold_VolEditors.Text)
                    If Not String.IsNullOrEmpty(VOL_EDITORS) Then
                        VOL_EDITORS = RemoveQuotes(VOL_EDITORS)
                        If VOL_EDITORS.Length > 501 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_VolEditors.Focus()
                            Exit Sub
                        End If

                        VOL_EDITORS = " " & VOL_EDITORS & " "
                        If InStr(1, VOL_EDITORS, "CREATE", 1) > 0 Or InStr(1, VOL_EDITORS, "DELETE", 1) > 0 Or InStr(1, VOL_EDITORS, "DROP", 1) > 0 Or InStr(1, VOL_EDITORS, "INSERT", 1) > 1 Or InStr(1, VOL_EDITORS, "TRACK", 1) > 1 Or InStr(1, VOL_EDITORS, "TRACE", 1) > 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            txt_Hold_VolEditors.Focus()
                            Exit Sub
                        End If
                        VOL_EDITORS = TrimAll(VOL_EDITORS)
                        'check unwanted characters
                        c = 0
                        counter94 = 0
                        For iloop = 1 To Len(VOL_EDITORS)
                            strcurrentchar = Mid(VOL_EDITORS, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter94 = 1
                                End If
                            End If
                        Next
                        If counter94 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            txt_Hold_VolEditors.Focus()
                            Exit Sub
                        End If
                    Else
                        VOL_EDITORS = ""
                    End If
                Else
                    VOL_EDITORS = ""
                End If

                'validation for VOL_TITLE
                Dim VOL_TITLE As Object = Nothing
                If TR_VOL_TITLE.Visible = True Then
                    VOL_TITLE = TrimAll(txt_Hold_VolTitle.Text)
                    If Not String.IsNullOrEmpty(VOL_TITLE) Then
                        VOL_TITLE = RemoveQuotes(VOL_TITLE)
                        If VOL_TITLE.Length > 501 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_VolTitle.Focus()
                            Exit Sub
                        End If

                        VOL_TITLE = " " & VOL_TITLE & " "
                        If InStr(1, VOL_TITLE, "CREATE", 1) > 0 Or InStr(1, VOL_TITLE, "DELETE", 1) > 0 Or InStr(1, VOL_TITLE, "DROP", 1) > 0 Or InStr(1, VOL_TITLE, "INSERT", 1) > 1 Or InStr(1, VOL_TITLE, "TRACK", 1) > 1 Or InStr(1, VOL_TITLE, "TRACE", 1) > 1 Then
                            txt_Hold_VolTitle.Focus()
                            Exit Sub
                        End If
                        VOL_TITLE = TrimAll(VOL_TITLE)
                        'check unwanted characters
                        c = 0
                        counter95 = 0
                        For iloop = 1 To Len(VOL_TITLE)
                            strcurrentchar = Mid(VOL_TITLE, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter95 = 1
                                End If
                            End If
                        Next
                        If counter95 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            txt_Hold_VolTitle.Focus()
                            Exit Sub
                        End If
                    Else
                        VOL_TITLE = ""
                    End If
                Else
                    VOL_TITLE = ""
                End If

                'validation for VOL_ISBN
                Dim COPY_ISBN As Object = Nothing
                If TR_VOL_NO.Visible = True Then
                    COPY_ISBN = TrimX(txt_Hold_CopyISBN.Text)
                    If Not String.IsNullOrEmpty(COPY_ISBN) Then
                        COPY_ISBN = RemoveQuotes(COPY_ISBN)
                        If COPY_ISBN.Length > 30 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_CopyISBN.Focus()
                            Exit Sub
                        End If

                        COPY_ISBN = " " & COPY_ISBN & " "
                        If InStr(1, COPY_ISBN, "CREATE", 1) > 0 Or InStr(1, COPY_ISBN, "DELETE", 1) > 0 Or InStr(1, COPY_ISBN, "DROP", 1) > 0 Or InStr(1, COPY_ISBN, "INSERT", 1) > 1 Or InStr(1, COPY_ISBN, "TRACK", 1) > 1 Or InStr(1, COPY_ISBN, "TRACE", 1) > 1 Then
                            ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                            Label6.Text = "Do not use reserved Words!"
                            Label15.Text = ""
                            txt_Hold_CopyISBN.Focus()
                            Exit Sub
                        End If
                        COPY_ISBN = TrimX(COPY_ISBN)
                        'check unwanted characters
                        c = 0
                        counter96 = 0
                        For iloop = 1 To Len(COPY_ISBN)
                            strcurrentchar = Mid(COPY_ISBN, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter96 = 1
                                End If
                            End If
                        Next
                        If counter96 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            txt_Hold_CopyISBN.Focus()
                            Exit Sub
                        End If
                    Else
                        COPY_ISBN = ""
                    End If
                Else
                    COPY_ISBN = ""
                End If

                'validation for CLASS NO
                Dim CLASS_NO As Object = Nothing
                If TR_CLASS_NO.Visible = True Then
                    CLASS_NO = TrimX(txt_Hold_ClassNo.Text)
                    If Not String.IsNullOrEmpty(CLASS_NO) Then
                        CLASS_NO = RemoveQuotes(CLASS_NO)
                        If CLASS_NO.Length > 150 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_ClassNo.Focus()
                            Exit Sub
                        End If

                        CLASS_NO = " " & CLASS_NO & " "
                        If InStr(1, CLASS_NO, "CREATE", 1) > 0 Or InStr(1, CLASS_NO, "DELETE", 1) > 0 Or InStr(1, CLASS_NO, "DROP", 1) > 0 Or InStr(1, CLASS_NO, "INSERT", 1) > 1 Or InStr(1, CLASS_NO, "TRACK", 1) > 1 Or InStr(1, CLASS_NO, "TRACE", 1) > 1 Then
                            Label6.Text = "Do not use reserved Words!"
                            Label15.Text = ""
                            txt_Hold_ClassNo.Focus()
                            Exit Sub
                        End If
                        CLASS_NO = TrimX(CLASS_NO)
                        'check unwanted characters
                        c = 0
                        counter97 = 0
                        For iloop = 1 To Len(CLASS_NO)
                            strcurrentchar = Mid(CLASS_NO, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter97 = 1
                                End If
                            End If
                        Next
                        If counter97 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            txt_Hold_ClassNo.Focus()
                            Exit Sub
                        End If
                    Else
                        CLASS_NO = ""
                    End If
                Else
                    CLASS_NO = ""
                End If

                'validation for CLASS NO
                Dim BOOK_NO As Object = Nothing
                If TR_CLASS_NO.Visible = True Then
                    BOOK_NO = TrimAll(UCase(txt_Hold_BookNo.Text))
                    If Not String.IsNullOrEmpty(BOOK_NO) Then
                        BOOK_NO = RemoveQuotes(BOOK_NO)
                        If BOOK_NO.Length > 50 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_BookNo.Focus()
                            Exit Sub
                        End If

                        BOOK_NO = " " & BOOK_NO & " "
                        If InStr(1, BOOK_NO, "CREATE", 1) > 0 Or InStr(1, BOOK_NO, "DELETE", 1) > 0 Or InStr(1, BOOK_NO, "DROP", 1) > 0 Or InStr(1, BOOK_NO, "INSERT", 1) > 1 Or InStr(1, BOOK_NO, "TRACK", 1) > 1 Or InStr(1, BOOK_NO, "TRACE", 1) > 1 Then
                            Label6.Text = "Do not use reserved Words!"
                            Label15.Text = ""
                            txt_Hold_BookNo.Focus()
                            Exit Sub
                        End If
                        BOOK_NO = TrimAll(BOOK_NO)
                        'check unwanted characters
                        c = 0
                        counter98 = 0
                        For iloop = 1 To Len(BOOK_NO)
                            strcurrentchar = Mid(BOOK_NO, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter98 = 1
                                End If
                            End If
                        Next
                        If counter98 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            txt_Hold_BookNo.Focus()
                            Exit Sub
                        End If
                    Else
                        BOOK_NO = ""
                    End If
                Else
                    BOOK_NO = ""
                End If

                'validation for PAGES
                Dim PAGINATION As Object = Nothing
                If TR_PAGINATION.Visible = True Then
                    PAGINATION = TrimAll(txt_Hold_Pages.Text)
                    If Not String.IsNullOrEmpty(PAGINATION) Then
                        PAGINATION = RemoveQuotes(PAGINATION)
                        If CLASS_NO.Length > 50 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_Pages.Focus()
                            Exit Sub
                        End If

                        PAGINATION = " " & PAGINATION & " "
                        If InStr(1, PAGINATION, "CREATE", 1) > 0 Or InStr(1, PAGINATION, "DELETE", 1) > 0 Or InStr(1, PAGINATION, "DROP", 1) > 0 Or InStr(1, PAGINATION, "INSERT", 1) > 1 Or InStr(1, PAGINATION, "TRACK", 1) > 1 Or InStr(1, PAGINATION, "TRACE", 1) > 1 Then
                            Label6.Text = "Do not use reserved Words!"
                            Label15.Text = ""
                            txt_Hold_Pages.Focus()
                            Exit Sub
                        End If
                        PAGINATION = TrimAll(PAGINATION)
                        'check unwanted characters
                        c = 0
                        counter99 = 0
                        For iloop = 1 To Len(PAGINATION)
                            strcurrentchar = Mid(PAGINATION, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter99 = 1
                                End If
                            End If
                        Next
                        If counter99 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            txt_Hold_Pages.Focus()
                            Exit Sub
                        End If
                        If InStr(PAGINATION, "p.") = 0 Then
                            PAGINATION = PAGINATION + "p."
                        End If
                        If InStr(PAGINATION, "..") <> 0 Then
                            PAGINATION = PAGINATION + "."
                        End If
                        If InStr(PAGINATION, "pp.") <> 0 Then
                            PAGINATION = PAGINATION + "p."
                        End If
                        If InStr(PAGINATION, "p.p.") <> 0 Then
                            PAGINATION = PAGINATION + "p."
                        End If
                    Else
                        PAGINATION = ""
                    End If
                Else
                    PAGINATION = ""
                End If

                'validation for SIZE
                Dim SIZE As Object = Nothing
                If TR_SIZE.Visible = True Then
                    SIZE = TrimAll(txt_Hold_Size.Text)
                    If Not String.IsNullOrEmpty(SIZE) Then
                        SIZE = RemoveQuotes(SIZE)
                        If SIZE.Length > 50 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_Size.Focus()
                            Exit Sub
                        End If

                        SIZE = " " & SIZE & " "
                        If InStr(1, SIZE, "CREATE", 1) > 0 Or InStr(1, SIZE, "DELETE", 1) > 0 Or InStr(1, SIZE, "DROP", 1) > 0 Or InStr(1, SIZE, "INSERT", 1) > 1 Or InStr(1, SIZE, "TRACK", 1) > 1 Or InStr(1, SIZE, "TRACE", 1) > 1 Then
                            Label6.Text = "Do not use reserved Words!"
                            Label15.Text = ""
                            txt_Hold_Size.Focus()
                            Exit Sub
                        End If
                        SIZE = TrimAll(SIZE)
                        'check unwanted characters
                        c = 0
                        counter100 = 0
                        For iloop = 1 To Len(SIZE)
                            strcurrentchar = Mid(SIZE, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter100 = 1
                                End If
                            End If
                        Next
                        If counter100 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            txt_Hold_Size.Focus()
                            Exit Sub
                        End If
                    Else
                        SIZE = ""
                    End If
                Else
                    SIZE = ""
                End If

                Dim ILLUSTRATION As Object = Nothing
                If TR_ILLUSTRATION.Visible = True Then
                    If CB_Illus.Checked = True Then
                        ILLUSTRATION = "Y"
                    Else
                        ILLUSTRATION = "N"
                    End If
                Else
                    ILLUSTRATION = "N"
                End If

                'validation for COLLECTION TYPE
                Dim COLLECTION_TYPE As Object = Nothing
                If TR_COLLECTION_TYPE.Visible = True Then
                    COLLECTION_TYPE = DDL_CollectionType.SelectedValue
                    If Not String.IsNullOrEmpty(COLLECTION_TYPE) Then
                        COLLECTION_TYPE = RemoveQuotes(COLLECTION_TYPE)
                        If COLLECTION_TYPE.Length > 2 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            DDL_CollectionType.Focus()
                            Exit Sub
                        End If

                        COLLECTION_TYPE = " " & COLLECTION_TYPE & " "
                        If InStr(1, COLLECTION_TYPE, "CREATE", 1) > 0 Or InStr(1, COLLECTION_TYPE, "DELETE", 1) > 0 Or InStr(1, COLLECTION_TYPE, "DROP", 1) > 0 Or InStr(1, COLLECTION_TYPE, "INSERT", 1) > 1 Or InStr(1, COLLECTION_TYPE, "TRACK", 1) > 1 Or InStr(1, COLLECTION_TYPE, "TRACE", 1) > 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label1.Text = ""
                            DDL_CollectionType.Focus()
                            Exit Sub
                        End If
                        COLLECTION_TYPE = TrimX(COLLECTION_TYPE)
                        'check unwanted characters
                        c = 0
                        counter101 = 0
                        For iloop = 1 To Len(COLLECTION_TYPE)
                            strcurrentchar = Mid(COLLECTION_TYPE, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter101 = 1
                                End If
                            End If
                        Next
                        If counter101 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            DDL_CollectionType.Focus()
                            Exit Sub
                        End If
                    Else
                        COLLECTION_TYPE = "C"
                    End If
                Else
                    COLLECTION_TYPE = "C"
                End If

                'validation for STATUS
                Dim STA_CODE As Object = Nothing
                If TR_STA_CODE.Visible = True Then
                    If DDL_Status.Text <> "" Then
                        STA_CODE = DDL_Status.SelectedValue
                        If STA_CODE = "2" Then
                            STA_CODE = "1"
                        End If
                    Else
                        STA_CODE = "1"
                    End If
                Else
                    STA_CODE = "1"
                End If


                'validation for BINDING TYPE
                Dim BIND_CODE As Object = Nothing
                If TR_BIND_CODE.Visible = True Then
                    BIND_CODE = DDL_Binding.SelectedValue
                    If Not String.IsNullOrEmpty(BIND_CODE) Then
                        BIND_CODE = RemoveQuotes(BIND_CODE)
                        If BIND_CODE.Length > 11 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            DDL_Binding.Focus()
                            Exit Sub
                        End If

                        BIND_CODE = " " & BIND_CODE & " "
                        If InStr(1, BIND_CODE, "CREATE", 1) > 0 Or InStr(1, BIND_CODE, "DELETE", 1) > 0 Or InStr(1, BIND_CODE, "DROP", 1) > 0 Or InStr(1, BIND_CODE, "INSERT", 1) > 1 Or InStr(1, BIND_CODE, "TRACK", 1) > 1 Or InStr(1, BIND_CODE, "TRACE", 1) > 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            DDL_Binding.Focus()
                            Exit Sub
                        End If
                        BIND_CODE = TrimX(BIND_CODE)
                        'check unwanted characters
                        c = 0
                        counter102 = 0
                        For iloop = 1 To Len(BIND_CODE)
                            strcurrentchar = Mid(BIND_CODE, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter102 = 1
                                End If
                            End If
                        Next
                        If counter102 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            DDL_Binding.Focus()
                            Exit Sub
                        End If
                    Else
                        BIND_CODE = "U"
                    End If
                Else
                    BIND_CODE = "U"
                End If

                'validation for SECTION
                Dim SEC_CODE As Object = Nothing
                If TR_SEC_CODE.Visible = True Then
                    SEC_CODE = DDL_Section.SelectedValue
                    If Not String.IsNullOrEmpty(SEC_CODE) Then
                        SEC_CODE = RemoveQuotes(SEC_CODE)
                        If SEC_CODE.Length > 11 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            DDL_Section.Focus()
                            Exit Sub
                        End If

                        SEC_CODE = " " & SEC_CODE & " "
                        If InStr(1, SEC_CODE, "CREATE", 1) > 0 Or InStr(1, SEC_CODE, "DELETE", 1) > 0 Or InStr(1, SEC_CODE, "DROP", 1) > 0 Or InStr(1, SEC_CODE, "INSERT", 1) > 1 Or InStr(1, SEC_CODE, "TRACK", 1) > 1 Or InStr(1, SEC_CODE, "TRACE", 1) > 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            DDL_Section.Focus()
                            Exit Sub
                        End If
                        SEC_CODE = TrimX(SEC_CODE)
                        'check unwanted characters
                        c = 0
                        counter103 = 0
                        For iloop = 1 To Len(SEC_CODE)
                            strcurrentchar = Mid(SEC_CODE, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter103 = 1
                                End If
                            End If
                        Next
                        If counter103 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            DDL_Section.Focus()
                            Exit Sub
                        End If
                    Else
                        SEC_CODE = ""
                    End If
                Else
                    SEC_CODE = ""
                End If

                'validation for holding Library
                Dim HOLD_LIB_CODE As Object = Nothing
                HOLD_LIB_CODE = DDL_Library.SelectedValue
                If Not String.IsNullOrEmpty(HOLD_LIB_CODE) Then
                    HOLD_LIB_CODE = RemoveQuotes(HOLD_LIB_CODE)
                    If HOLD_LIB_CODE.Length > 11 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        DDL_Library.Focus()
                        Exit Sub
                    End If

                    HOLD_LIB_CODE = " " & HOLD_LIB_CODE & " "
                    If InStr(1, HOLD_LIB_CODE, "CREATE", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "DELETE", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "DROP", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "INSERT", 1) > 1 Or InStr(1, HOLD_LIB_CODE, "TRACK", 1) > 1 Or InStr(1, HOLD_LIB_CODE, "TRACE", 1) > 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        DDL_Library.Focus()
                        Exit Sub
                    End If
                    HOLD_LIB_CODE = TrimX(HOLD_LIB_CODE)
                    'check unwanted characters
                    c = 0
                    counter104 = 0
                    For iloop = 1 To Len(HOLD_LIB_CODE)
                        strcurrentchar = Mid(HOLD_LIB_CODE, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter104 = 1
                            End If
                        End If
                    Next
                    If counter104 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        DDL_Library.Focus()
                        Exit Sub
                    End If
                Else
                    HOLD_LIB_CODE = LibCode
                End If

                'validation for accompanying materials
                Dim ACC_MAT_CODE As Object = Nothing
                If TR_ACC_MAT_CODE.Visible = True Then
                    ACC_MAT_CODE = DDL_AccMaterials.SelectedValue
                    If Not String.IsNullOrEmpty(ACC_MAT_CODE) Then
                        ACC_MAT_CODE = RemoveQuotes(ACC_MAT_CODE)
                        If ACC_MAT_CODE.Length > 11 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label1.Text = ""
                            DDL_AccMaterials.Focus()
                            Exit Sub
                        End If

                        ACC_MAT_CODE = " " & ACC_MAT_CODE & " "
                        If InStr(1, ACC_MAT_CODE, "CREATE", 1) > 0 Or InStr(1, ACC_MAT_CODE, "DELETE", 1) > 0 Or InStr(1, ACC_MAT_CODE, "DROP", 1) > 0 Or InStr(1, ACC_MAT_CODE, "INSERT", 1) > 1 Or InStr(1, ACC_MAT_CODE, "TRACK", 1) > 1 Or InStr(1, ACC_MAT_CODE, "TRACE", 1) > 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label1.Text = ""
                            DDL_AccMaterials.Focus()
                            Exit Sub
                        End If
                        ACC_MAT_CODE = TrimX(ACC_MAT_CODE)
                        'check unwanted characters
                        c = 0
                        counter105 = 0
                        For iloop = 1 To Len(ACC_MAT_CODE)
                            strcurrentchar = Mid(ACC_MAT_CODE, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter105 = 1
                                End If
                            End If
                        Next
                        If counter105 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            DDL_AccMaterials.Focus()
                            Exit Sub
                        End If
                    Else
                        ACC_MAT_CODE = ""
                    End If
                Else
                    ACC_MAT_CODE = ""
                End If

                'validation for REMARKS
                Dim REMARKS As Object = Nothing
                If TR_Remarks.Visible = True Then
                    REMARKS = TrimAll(txt_Hold_Remarks.Text)
                    If Not String.IsNullOrEmpty(REMARKS) Then
                        REMARKS = RemoveQuotes(REMARKS)
                        If REMARKS.Length > 251 Then 'maximum length
                            Label6.Text = "Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_Remarks.Focus()
                            Exit Sub
                        End If
                    Else
                        REMARKS = ""
                    End If
                Else
                    REMARKS = ""
                End If

                'validation for Physical Location
                Dim PHYSICAL_LOCATION As Object = Nothing
                If TR_Remarks.Visible = True Then
                    PHYSICAL_LOCATION = TrimAll(txt_Hold_Location.Text)
                    If Not String.IsNullOrEmpty(PHYSICAL_LOCATION) Then
                        PHYSICAL_LOCATION = RemoveQuotes(PHYSICAL_LOCATION)
                        If PHYSICAL_LOCATION.Length > 50 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_Location.Focus()
                            Exit Sub
                        End If

                        PHYSICAL_LOCATION = " " & PHYSICAL_LOCATION & " "
                        If InStr(1, PHYSICAL_LOCATION, "CREATE", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "DELETE", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "DROP", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "INSERT", 1) > 1 Or InStr(1, PHYSICAL_LOCATION, "TRACK", 1) > 1 Or InStr(1, PHYSICAL_LOCATION, "TRACE", 1) > 1 Then
                            Label6.Text = "Do not use reserved Words!"
                            Label15.Text = ""
                            txt_Hold_Location.Focus()
                            Exit Sub
                        End If
                        PHYSICAL_LOCATION = TrimAll(PHYSICAL_LOCATION)
                        'check unwanted characters
                        c = 0
                        counter106 = 0
                        For iloop = 1 To Len(PHYSICAL_LOCATION)
                            strcurrentchar = Mid(PHYSICAL_LOCATION, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter106 = 1
                                End If
                            End If
                        Next
                        If counter106 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            txt_Hold_Location.Focus()
                            Exit Sub
                        End If
                    Else
                        PHYSICAL_LOCATION = ""
                    End If
                Else
                    PHYSICAL_LOCATION = ""
                End If

                'validation for REFERENCE NO
                Dim REFERENCE_NO As Object = Nothing
                If TR_REFERENCE_NO.Visible = True Then
                    REFERENCE_NO = TrimAll(txt_Hold_ReferenceNo.Text)
                    If Not String.IsNullOrEmpty(REFERENCE_NO) Then
                        REFERENCE_NO = RemoveQuotes(REFERENCE_NO)
                        If REFERENCE_NO.Length > 50 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_ReferenceNo.Focus()
                            Exit Sub
                        End If

                        REFERENCE_NO = " " & REFERENCE_NO & " "
                        If InStr(1, REFERENCE_NO, "CREATE", 1) > 0 Or InStr(1, REFERENCE_NO, "DELETE", 1) > 0 Or InStr(1, REFERENCE_NO, "DROP", 1) > 0 Or InStr(1, REFERENCE_NO, "INSERT", 1) > 1 Or InStr(1, REFERENCE_NO, "TRACK", 1) > 1 Or InStr(1, REFERENCE_NO, "TRACE", 1) > 1 Then
                            Label6.Text = "Do not use reserved Words!"
                            Label15.Text = ""
                            txt_Hold_ReferenceNo.Focus()
                            Exit Sub
                        End If
                        REFERENCE_NO = TrimAll(REFERENCE_NO)
                        'check unwanted characters
                        c = 0
                        counter107 = 0
                        For iloop = 1 To Len(REFERENCE_NO)
                            strcurrentchar = Mid(REFERENCE_NO, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter107 = 1
                                End If
                            End If
                        Next
                        If counter107 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            txt_Hold_ReferenceNo.Focus()
                            Exit Sub
                        End If
                    Else
                        REFERENCE_NO = ""
                    End If
                Else
                    REFERENCE_NO = ""
                End If

                'validation for RECODING_MEDIUM
                Dim RECORDING_MEDIUM As Object = Nothing
                If TR_MEDIUM.Visible = True Then
                    RECORDING_MEDIUM = TrimAll(txt_Hold_RecordingMedium.Text)
                    If Not String.IsNullOrEmpty(RECORDING_MEDIUM) Then
                        RECORDING_MEDIUM = RemoveQuotes(RECORDING_MEDIUM)
                        If RECORDING_MEDIUM.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_RecordingMedium.Focus()
                            Exit Sub
                        End If
                    Else
                        RECORDING_MEDIUM = ""
                    End If
                Else
                    RECORDING_MEDIUM = ""
                End If

                'validation for RECODING_MEDIUM
                Dim RECORDING_CATEGORY As Object = Nothing
                If TR_RECORDING_CATEGORY.Visible = True Then
                    RECORDING_CATEGORY = TrimAll(txt_Hold_RecordingCategory.Text)
                    If Not String.IsNullOrEmpty(RECORDING_CATEGORY) Then
                        RECORDING_CATEGORY = RemoveQuotes(RECORDING_CATEGORY)
                        If RECORDING_CATEGORY.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_RecordingCategory.Focus()
                            Exit Sub
                        End If
                    Else
                        RECORDING_CATEGORY = ""
                    End If
                Else
                    RECORDING_CATEGORY = ""
                End If

                'validation for RECORDING_FORM
                Dim RECORDING_FORM As Object = Nothing
                If TR_RECORDING_FORM.Visible = True Then
                    RECORDING_FORM = TrimAll(txt_Hold_RecordingForm.Text)
                    If Not String.IsNullOrEmpty(RECORDING_FORM) Then
                        RECORDING_FORM = RemoveQuotes(RECORDING_FORM)
                        If RECORDING_FORM.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_RecordingForm.Focus()
                            Exit Sub
                        End If
                    Else
                        RECORDING_FORM = ""
                    End If
                Else
                    RECORDING_FORM = ""
                End If

                'validation for RECORDING_FORMAT
                Dim RECORDING_FORMAT As Object = Nothing
                If TR_RECORDING_FORMAT.Visible = True Then
                    RECORDING_FORMAT = TrimAll(txt_Hold_RecordingFormat.Text)
                    If Not String.IsNullOrEmpty(RECORDING_FORMAT) Then
                        RECORDING_FORMAT = RemoveQuotes(RECORDING_FORMAT)
                        If RECORDING_FORMAT.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_RecordingFormat.Focus()
                            Exit Sub
                        End If
                    Else
                        RECORDING_FORMAT = ""
                    End If
                Else
                    RECORDING_FORMAT = ""
                End If

                'validation for RECORDING_SPEED
                Dim RECORDING_SPEED As Object = Nothing
                If TR_RECORDING_SPEED.Visible = True Then
                    RECORDING_SPEED = TrimAll(txt_Hold_RecordingSpeed.Text)
                    If Not String.IsNullOrEmpty(RECORDING_SPEED) Then
                        RECORDING_SPEED = RemoveQuotes(RECORDING_SPEED)
                        If RECORDING_SPEED.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_RecordingSpeed.Focus()
                            Exit Sub
                        End If
                    Else
                        RECORDING_SPEED = ""
                    End If
                Else
                    RECORDING_SPEED = ""
                End If

                'validation for RECORDING_STORAGE_TECH
                Dim RECORDING_STORAGE_TECH As Object = Nothing
                If TR_RECORDING_STORAGE_TECH.Visible = True Then
                    RECORDING_STORAGE_TECH = TrimAll(txt_Hold_RecordingStorageTech.Text)
                    If Not String.IsNullOrEmpty(RECORDING_STORAGE_TECH) Then
                        RECORDING_STORAGE_TECH = RemoveQuotes(RECORDING_STORAGE_TECH)
                        If RECORDING_STORAGE_TECH.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_RecordingStorageTech.Focus()
                            Exit Sub
                        End If
                    Else
                        RECORDING_STORAGE_TECH = ""
                    End If
                Else
                    RECORDING_STORAGE_TECH = ""
                End If

                'validation for RECORDING_PLAY_DURATION
                Dim RECORDING_PLAY_DURATION As Object = Nothing
                If TR_RECORDING_PLAY_DURATION.Visible = True Then
                    RECORDING_PLAY_DURATION = TrimAll(txt_Hold_RecordingDuration.Text)
                    If Not String.IsNullOrEmpty(RECORDING_PLAY_DURATION) Then
                        RECORDING_PLAY_DURATION = RemoveQuotes(RECORDING_PLAY_DURATION)
                        If RECORDING_PLAY_DURATION.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_RecordingDuration.Focus()
                            Exit Sub
                        End If
                    Else
                        RECORDING_PLAY_DURATION = ""
                    End If
                Else
                    RECORDING_PLAY_DURATION = ""
                End If

                'validation for TYPE OF VISUALS
                Dim VIDEO_TYPEOFVISUALS As Object = Nothing
                If TR_VIDEO_TYPEOFVISUAL.Visible = True Then
                    VIDEO_TYPEOFVISUALS = TrimAll(txt_Hold_TypeOfVisuals.Text)
                    If Not String.IsNullOrEmpty(VIDEO_TYPEOFVISUALS) Then
                        VIDEO_TYPEOFVISUALS = RemoveQuotes(VIDEO_TYPEOFVISUALS)
                        If VIDEO_TYPEOFVISUALS.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_TypeOfVisuals.Focus()
                            Exit Sub
                        End If
                    Else
                        VIDEO_TYPEOFVISUALS = ""
                    End If
                Else
                    VIDEO_TYPEOFVISUALS = ""
                End If

                'validation for CARTOGRAPHIC_SCALE
                Dim CARTOGRAPHIC_SCALE As Object = Nothing
                If TR_CARTOGRAPHIC_SCALE.Visible = True Then
                    CARTOGRAPHIC_SCALE = TrimAll(txt_Hold_Scale.Text)
                    If Not String.IsNullOrEmpty(CARTOGRAPHIC_SCALE) Then
                        CARTOGRAPHIC_SCALE = RemoveQuotes(CARTOGRAPHIC_SCALE)
                        If CARTOGRAPHIC_SCALE.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_Scale.Focus()
                            Exit Sub
                        End If
                    Else
                        CARTOGRAPHIC_SCALE = ""
                    End If
                Else
                    CARTOGRAPHIC_SCALE = ""
                End If

                'validation for CARTOGRAPHIC_PROJECTION
                Dim CARTOGRAPHIC_PROJECTION As Object = Nothing
                If TR_CARTOGRAPHIC_PROJECTION.Visible = True Then
                    CARTOGRAPHIC_PROJECTION = TrimAll(txt_Hold_Projection.Text)
                    If Not String.IsNullOrEmpty(CARTOGRAPHIC_PROJECTION) Then
                        CARTOGRAPHIC_PROJECTION = RemoveQuotes(CARTOGRAPHIC_PROJECTION)
                        If CARTOGRAPHIC_PROJECTION.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_Projection.Focus()
                            Exit Sub
                        End If
                    Else
                        CARTOGRAPHIC_PROJECTION = ""
                    End If
                Else
                    CARTOGRAPHIC_PROJECTION = ""
                End If

                'validation for CARTOGRAPHIC_COORDINATES
                Dim CARTOGRAPHIC_COORDINATES As Object = Nothing
                If TR_CARTOGRAPHIC_COORDINATES.Visible = True Then
                    CARTOGRAPHIC_COORDINATES = TrimAll(txt_Hold_Coordinates.Text)
                    If Not String.IsNullOrEmpty(CARTOGRAPHIC_COORDINATES) Then
                        CARTOGRAPHIC_COORDINATES = RemoveQuotes(CARTOGRAPHIC_COORDINATES)
                        If CARTOGRAPHIC_COORDINATES.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_Coordinates.Focus()
                            Exit Sub
                        End If
                    Else
                        CARTOGRAPHIC_COORDINATES = ""
                    End If
                Else
                    CARTOGRAPHIC_COORDINATES = ""
                End If

                'validation for CARTOGRAPHIC_GEOGRAPHIC_LOCATION
                Dim CARTOGRAPHIC_GEOGRAPHIC_LOCATION As Object = Nothing
                If TR_CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Visible = True Then
                    CARTOGRAPHIC_COORDINATES = TrimAll(txt_Hold_GeographicLocation.Text)
                    If Not String.IsNullOrEmpty(CARTOGRAPHIC_GEOGRAPHIC_LOCATION) Then
                        CARTOGRAPHIC_GEOGRAPHIC_LOCATION = RemoveQuotes(CARTOGRAPHIC_GEOGRAPHIC_LOCATION)
                        If CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Length > 51 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Hold_GeographicLocation.Focus()
                            Exit Sub
                        End If
                    Else
                        CARTOGRAPHIC_GEOGRAPHIC_LOCATION = ""
                    End If
                Else
                    CARTOGRAPHIC_GEOGRAPHIC_LOCATION = ""
                End If

                'validation for CARTOGRAPHIC_MEDIUM
                Dim CARTOGRAPHIC_MEDIUM As Object = Nothing
                If TR_CARTOGRAPHIC_MEDIUM.Visible = True Then
                    CARTOGRAPHIC_MEDIUM = Trim(DDL_GeographicMedium.SelectedValue)
                    If Not String.IsNullOrEmpty(CARTOGRAPHIC_GEOGRAPHIC_LOCATION) Then
                        CARTOGRAPHIC_MEDIUM = RemoveQuotes(CARTOGRAPHIC_MEDIUM)
                        If CARTOGRAPHIC_MEDIUM.Length > 2 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            DDL_GeographicMedium.Focus()
                            Exit Sub
                        End If
                    Else
                        CARTOGRAPHIC_MEDIUM = ""
                    End If
                Else
                    CARTOGRAPHIC_MEDIUM = ""
                End If

                'search CARTOGRAPHIC_DATAGATHERING_DATE
                Dim CARTOGRAPHIC_DATAGATHERING_DATE As Object = Nothing
                If TR_CARTOGRAPHIC_DATAGATHERING_DATE.Visible = True Then
                    If txt_Hold_DataGatheringDate.Text <> "" Then
                        CARTOGRAPHIC_DATAGATHERING_DATE = TrimX(txt_Hold_DataGatheringDate.Text)
                        CARTOGRAPHIC_DATAGATHERING_DATE = RemoveQuotes(CARTOGRAPHIC_DATAGATHERING_DATE)
                        CARTOGRAPHIC_DATAGATHERING_DATE = Convert.ToDateTime(CARTOGRAPHIC_DATAGATHERING_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                        If Len(CARTOGRAPHIC_DATAGATHERING_DATE) > 12 Then
                            Label6.Text = " Input is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_DataGatheringDate.Focus()
                            Exit Sub
                        End If
                    Else
                        CARTOGRAPHIC_DATAGATHERING_DATE = ""
                    End If
                Else
                    CARTOGRAPHIC_DATAGATHERING_DATE = ""
                End If

                'search CARTOGRAPHIC_CREATION_DATE
                Dim CARTOGRAPHIC_CREATION_DATE As Object = Nothing
                If TR_CREATION_DATE.Visible = True Then
                    If txt_Hold_CreationDate.Text <> "" Then
                        CARTOGRAPHIC_CREATION_DATE = TrimX(txt_Hold_CreationDate.Text)
                        CARTOGRAPHIC_CREATION_DATE = RemoveQuotes(CARTOGRAPHIC_CREATION_DATE)
                        CARTOGRAPHIC_CREATION_DATE = Convert.ToDateTime(CARTOGRAPHIC_CREATION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                        If Len(CARTOGRAPHIC_CREATION_DATE) > 12 Then
                            Label6.Text = " Input is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_CreationDate.Focus()
                            Exit Sub
                        End If
                    Else
                        CARTOGRAPHIC_CREATION_DATE = ""
                    End If
                Else
                    CARTOGRAPHIC_CREATION_DATE = ""
                End If

                'search CARTOGRAPHIC_COMPILATION_DATE
                Dim CARTOGRAPHIC_COMPILATION_DATE As Object = Nothing
                If TR_CARTOGRAPHIC_COMPILATION_DATE.Visible = True Then
                    If txt_Hold_CompilationDate.Text <> "" Then
                        CARTOGRAPHIC_COMPILATION_DATE = TrimX(txt_Hold_CompilationDate.Text)
                        CARTOGRAPHIC_COMPILATION_DATE = RemoveQuotes(CARTOGRAPHIC_COMPILATION_DATE)
                        CARTOGRAPHIC_COMPILATION_DATE = Convert.ToDateTime(CARTOGRAPHIC_COMPILATION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                        If Len(CARTOGRAPHIC_COMPILATION_DATE) > 12 Then
                            Label6.Text = " Input is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_CompilationDate.Focus()
                            Exit Sub
                        End If
                    Else
                        CARTOGRAPHIC_COMPILATION_DATE = ""
                    End If
                Else
                    CARTOGRAPHIC_COMPILATION_DATE = ""
                End If

                'validation for  CARTOGRAPHIC_INSPECTION_DATE
                Dim CARTOGRAPHIC_INSPECTION_DATE As Object = Nothing
                If TR_CARTOGRAPHIC_INSPECTION_DATE.Visible = True Then
                    If txt_Hold_InspectionDate.Text <> "" Then
                        CARTOGRAPHIC_INSPECTION_DATE = TrimX(txt_Hold_InspectionDate.Text)
                        CARTOGRAPHIC_INSPECTION_DATE = RemoveQuotes(CARTOGRAPHIC_INSPECTION_DATE)
                        CARTOGRAPHIC_INSPECTION_DATE = Convert.ToDateTime(CARTOGRAPHIC_INSPECTION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                        If Len(CARTOGRAPHIC_INSPECTION_DATE) > 12 Then
                            Label6.Text = " Input is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_InspectionDate.Focus()
                            Exit Sub
                        End If
                    Else
                        CARTOGRAPHIC_INSPECTION_DATE = ""
                    End If
                Else
                    CARTOGRAPHIC_INSPECTION_DATE = ""
                End If

                'validation for  VIDEO_COLOR
                Dim VIDEO_COLOR As Object = Nothing
                If TR_VIDEO_COLOR.Visible = True Then
                    If txt_Hold_Color.Text <> "" Then
                        VIDEO_COLOR = TrimAll(txt_Hold_Color.Text)
                        VIDEO_COLOR = RemoveQuotes(VIDEO_COLOR)

                        If Len(VIDEO_COLOR) > 50 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_Color.Focus()
                            Exit Sub
                        End If
                    Else
                        VIDEO_COLOR = ""
                    End If
                Else
                    VIDEO_COLOR = ""
                End If

                'validation for  PLAYBACK_CHANNELS
                Dim PLAYBACK_CHANNELS As Object = Nothing
                If TR_PLAYBACK_CHANNELS.Visible = True Then
                    If txt_Hold_PlayBackChannel.Text <> "" Then
                        PLAYBACK_CHANNELS = TrimAll(txt_Hold_PlayBackChannel.Text)
                        PLAYBACK_CHANNELS = RemoveQuotes(PLAYBACK_CHANNELS)
                        If Len(PLAYBACK_CHANNELS) > 50 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_PlayBackChannel.Focus()
                            Exit Sub
                        End If
                    Else
                        PLAYBACK_CHANNELS = ""
                    End If
                Else
                    PLAYBACK_CHANNELS = ""
                End If

                'validation for  TAPE_WIDTH
                Dim TAPE_WIDTH As Object = Nothing
                If TR_TAPE_WIDTH.Visible = True Then
                    If txt_Hold_PlayBackChannel.Text <> "" Then
                        TAPE_WIDTH = TrimAll(txt_Hold_PlayBackChannel.Text)
                        TAPE_WIDTH = RemoveQuotes(TAPE_WIDTH)
                        If Len(TAPE_WIDTH) > 50 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_PlayBackChannel.Focus()
                            Exit Sub
                        End If
                    Else
                        TAPE_WIDTH = ""
                    End If
                Else
                    TAPE_WIDTH = ""
                End If

                'validation for  TAPE_CONFIGURATION
                Dim TAPE_CONFIGURATION As Object = Nothing
                If TR_TAPE_CONFIGURATION.Visible = True Then
                    If txt_Hold_TapeConfiguration.Text <> "" Then
                        TAPE_CONFIGURATION = TrimAll(txt_Hold_TapeConfiguration.Text)
                        TAPE_CONFIGURATION = RemoveQuotes(TAPE_CONFIGURATION)
                        If Len(TAPE_CONFIGURATION) > 50 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_TapeConfiguration.Focus()
                            Exit Sub
                        End If
                    Else
                        TAPE_CONFIGURATION = ""
                    End If
                Else
                    TAPE_CONFIGURATION = ""
                End If

                'validation for  KIND_OF_DISK
                Dim KIND_OF_DISK As Object = Nothing
                If TR_KIND_OF_DISK.Visible = True Then
                    If txt_Hold_KindofDisk.Text <> "" Then
                        KIND_OF_DISK = TrimAll(txt_Hold_KindofDisk.Text)
                        KIND_OF_DISK = RemoveQuotes(KIND_OF_DISK)
                        If Len(KIND_OF_DISK) > 50 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_KindofDisk.Focus()
                            Exit Sub
                        End If
                    Else
                        KIND_OF_DISK = ""
                    End If
                Else
                    KIND_OF_DISK = ""
                End If

                'validation for  KIND_OF_CUTTING
                Dim KIND_OF_CUTTING As Object = Nothing
                If TR_KIND_OF_CUTTING.Visible = True Then
                    If txt_Hold_KindofCutting.Text <> "" Then
                        KIND_OF_CUTTING = TrimAll(txt_Hold_KindofCutting.Text)
                        KIND_OF_CUTTING = RemoveQuotes(KIND_OF_CUTTING)
                        If Len(KIND_OF_DISK) > 50 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_KindofCutting.Focus()
                            Exit Sub
                        End If
                    Else
                        KIND_OF_CUTTING = ""
                    End If
                Else
                    KIND_OF_CUTTING = ""
                End If


                'validation for  ENCODING_STANDARD
                Dim ENCODING_STANDARD As Object = Nothing
                If TR_ENCODING_STANDARD.Visible = True Then
                    If txt_Hold_EncodingStandard.Text <> "" Then
                        ENCODING_STANDARD = TrimAll(txt_Hold_EncodingStandard.Text)
                        ENCODING_STANDARD = RemoveQuotes(ENCODING_STANDARD)
                        If Len(KIND_OF_DISK) > 50 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_EncodingStandard.Focus()
                            Exit Sub
                        End If
                    Else
                        ENCODING_STANDARD = ""
                    End If
                Else
                    ENCODING_STANDARD = ""
                End If

                'validation for  CAPTURE_TECHNIQUE
                Dim CAPTURE_TECHNIQUE As Object = Nothing
                If TR_CAPTURE_TECHNIQUE.Visible = True Then
                    If txt_Hold_CaptureTechnique.Text <> "" Then
                        CAPTURE_TECHNIQUE = TrimAll(txt_Hold_CaptureTechnique.Text)
                        CAPTURE_TECHNIQUE = RemoveQuotes(CAPTURE_TECHNIQUE)
                        If Len(CAPTURE_TECHNIQUE) > 50 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_CaptureTechnique.Focus()
                            Exit Sub
                        End If
                    Else
                        CAPTURE_TECHNIQUE = ""
                    End If
                Else
                    CAPTURE_TECHNIQUE = ""
                End If

                'validation for  PHOTO_NO
                Dim PHOTO_NO As Object = Nothing
                If TR_PHOTO_NO.Visible = True Then
                    If txt_Hold_PhotoNo.Text <> "" Then
                        PHOTO_NO = TrimAll(txt_Hold_PhotoNo.Text)
                        PHOTO_NO = RemoveQuotes(PHOTO_NO)
                        If Len(PHOTO_NO) > 50 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_PhotoNo.Focus()
                            Exit Sub
                        End If
                    Else
                        PHOTO_NO = ""
                    End If
                Else
                    PHOTO_NO = ""
                End If


                'validation for  PHOTO_ALBUM_NO
                Dim PHOTO_ALBUM_NO As Object = Nothing
                If TR_PHOTO_ALBUM_NO.Visible = True Then
                    If txt_Hold_PhotoAlbumNo.Text <> "" Then
                        PHOTO_ALBUM_NO = TrimAll(txt_Hold_PhotoAlbumNo.Text)
                        PHOTO_ALBUM_NO = RemoveQuotes(PHOTO_ALBUM_NO)
                        If Len(PHOTO_ALBUM_NO) > 150 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_PhotoAlbumNo.Focus()
                            Exit Sub
                        End If
                    Else
                        PHOTO_ALBUM_NO = ""
                    End If
                Else
                    PHOTO_ALBUM_NO = ""
                End If

                'validation for  PHOTO_OCASION
                Dim PHOTO_OCASION As Object = Nothing
                If TR_PHOTO_OCASION.Visible = True Then
                    If txt_Hold_Ocasion.Text <> "" Then
                        PHOTO_OCASION = TrimAll(txt_Hold_Ocasion.Text)
                        PHOTO_OCASION = RemoveQuotes(PHOTO_OCASION)
                        If Len(PHOTO_OCASION) > 150 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_Ocasion.Focus()
                            Exit Sub
                        End If
                    Else
                        PHOTO_OCASION = ""
                    End If
                Else
                    PHOTO_OCASION = ""
                End If

                'validation for  IMAGE_VIEW_TYPE
                Dim IMAGE_VIEW_TYPE As Object = Nothing
                If TR_IMAGE_VIEW_TYPE.Visible = True Then
                    If txt_Hold_ImageViewType.Text <> "" Then
                        IMAGE_VIEW_TYPE = TrimAll(txt_Hold_ImageViewType.Text)
                        IMAGE_VIEW_TYPE = RemoveQuotes(IMAGE_VIEW_TYPE)
                        If Len(IMAGE_VIEW_TYPE) > 50 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_ImageViewType.Focus()
                            Exit Sub
                        End If
                    Else
                        IMAGE_VIEW_TYPE = ""
                    End If
                Else
                    IMAGE_VIEW_TYPE = ""
                End If

                'search VIEW_DATE
                Dim VIEW_DATE As Object = Nothing
                If TR_VIEW_DATE.Visible = True Then
                    If txt_Hold_ViewDate.Text <> "" Then
                        VIEW_DATE = TrimX(txt_Hold_ViewDate.Text)
                        VIEW_DATE = RemoveQuotes(VIEW_DATE)
                        VIEW_DATE = Convert.ToDateTime(VIEW_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                        If Len(VIEW_DATE) > 12 Then
                            Label6.Text = " Input is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_ViewDate.Focus()
                            Exit Sub
                        End If
                    Else
                        VIEW_DATE = ""
                    End If
                Else
                    VIEW_DATE = ""
                End If


                'validation for  THEME
                Dim THEME As Object = Nothing
                If TR_THEME.Visible = True Then
                    If txt_Hold_Theme.Text <> "" Then
                        THEME = TrimAll(txt_Hold_Theme.Text)
                        THEME = RemoveQuotes(THEME)
                        If Len(THEME) > 150 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_Theme.Focus()
                            Exit Sub
                        End If
                    Else
                        THEME = ""
                    End If
                Else
                    THEME = ""
                End If

                'validation for  STYLE
                Dim STYLE As Object = Nothing
                If TR_STYLE.Visible = True Then
                    If txt_Hold_Style.Text <> "" Then
                        STYLE = TrimAll(txt_Hold_Style.Text)
                        STYLE = RemoveQuotes(STYLE)
                        If Len(STYLE) > 150 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_Style.Focus()
                            Exit Sub
                        End If
                    Else
                        STYLE = ""
                    End If
                Else
                    STYLE = ""
                End If

                'validation for  CULTURE
                Dim CULTURE As Object = Nothing
                If TR_CULTURE.Visible = True Then
                    If txt_Hold_Culture.Text <> "" Then
                        CULTURE = TrimAll(txt_Hold_Culture.Text)
                        CULTURE = RemoveQuotes(CULTURE)
                        If Len(CULTURE) > 150 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_Culture.Focus()
                            Exit Sub
                        End If
                    Else
                        CULTURE = ""
                    End If
                Else
                    CULTURE = ""
                End If

                'validation for  CURRENT_SITE
                Dim CURRENT_SITE As Object = Nothing
                If TR_CULTURE.Visible = True Then
                    If txt_Hold_CurrentSite.Text <> "" Then
                        CURRENT_SITE = TrimAll(txt_Hold_CurrentSite.Text)
                        CURRENT_SITE = RemoveQuotes(CURRENT_SITE)
                        If Len(CURRENT_SITE) > 150 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_CurrentSite.Focus()
                            Exit Sub
                        End If
                    Else
                        CURRENT_SITE = ""
                    End If
                Else
                    CURRENT_SITE = ""
                End If

                'validation for  CREATION_SITE
                Dim CREATION_SITE As Object = Nothing
                If TR_CREATION_SITE.Visible = True Then
                    If txt_Hold_CreationSite.Text <> "" Then
                        CREATION_SITE = TrimAll(txt_Hold_CreationSite.Text)
                        CREATION_SITE = RemoveQuotes(CREATION_SITE)
                        If Len(CREATION_SITE) > 150 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_CreationSite.Focus()
                            Exit Sub
                        End If
                    Else
                        CREATION_SITE = ""
                    End If
                Else
                    CREATION_SITE = ""
                End If

                'validation for  YARNCOUNT
                Dim YARNCOUNT As Object = Nothing
                If TR_YARNCOUNT.Visible = True Then
                    If txt_Hold_YarnCount.Text <> "" Then
                        YARNCOUNT = TrimAll(txt_Hold_YarnCount.Text)
                        YARNCOUNT = RemoveQuotes(YARNCOUNT)
                        If Len(YARNCOUNT) > 150 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_YarnCount.Focus()
                            Exit Sub
                        End If
                    Else
                        YARNCOUNT = ""
                    End If
                Else
                    YARNCOUNT = ""
                End If

                'validation for  MATERIAL_TYPE
                Dim MATERIAL_TYPE As Object = Nothing
                If TR_MATERIAL_TYPE.Visible = True Then
                    If txt_Hold_MaterialsType.Text <> "" Then
                        MATERIAL_TYPE = TrimAll(txt_Hold_MaterialsType.Text)
                        MATERIAL_TYPE = RemoveQuotes(MATERIAL_TYPE)
                        If Len(MATERIAL_TYPE) > 150 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_MaterialsType.Focus()
                            Exit Sub
                        End If
                    Else
                        MATERIAL_TYPE = ""
                    End If
                Else
                    MATERIAL_TYPE = ""
                End If

                'validation for  TECHNIQUE
                Dim TECHNIQUE As Object = Nothing
                If TR_TECHNIQUE.Visible = True Then
                    If txt_Hold_Technique.Text <> "" Then
                        TECHNIQUE = TrimAll(txt_Hold_Technique.Text)
                        TECHNIQUE = RemoveQuotes(TECHNIQUE)
                        If Len(TECHNIQUE) > 150 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_Technique.Focus()
                            Exit Sub
                        End If
                    Else
                        TECHNIQUE = ""
                    End If
                Else
                    TECHNIQUE = ""
                End If

                'validation for  TECH_DETAILS
                Dim TECH_DETAILS As Object = Nothing
                If TR_TECH_DETAILS.Visible = True Then
                    If txt_Hold_TechDetails.Text <> "" Then
                        TECH_DETAILS = TrimAll(txt_Hold_TechDetails.Text)
                        TECH_DETAILS = RemoveQuotes(TECH_DETAILS)
                        If Len(TECH_DETAILS) > 250 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_TechDetails.Focus()
                            Exit Sub
                        End If
                    Else
                        TECH_DETAILS = ""
                    End If
                Else
                    TECH_DETAILS = ""
                End If

                'validation for  INSCRIPTIONS
                Dim INSCRIPTIONS As Object = Nothing
                If TR_INSCRIPTIONS.Visible = True Then
                    If txt_Hold_Inscription.Text <> "" Then
                        INSCRIPTIONS = TrimAll(txt_Hold_Inscription.Text)
                        INSCRIPTIONS = RemoveQuotes(INSCRIPTIONS)
                        If Len(INSCRIPTIONS) > 150 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_Inscription.Focus()
                            Exit Sub
                        End If
                    Else
                        INSCRIPTIONS = ""
                    End If
                Else
                    INSCRIPTIONS = ""
                End If

                'validation for  DESCRIPTION
                Dim DESCRIPTION As Object = Nothing
                If TR_DESCRIPTION.Visible = True Then
                    If txt_Hold_Description.Text <> "" Then
                        DESCRIPTION = TrimAll(txt_Hold_Description.Text)
                        DESCRIPTION = RemoveQuotes(DESCRIPTION)
                        If Len(DESCRIPTION) > 250 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_Description.Focus()
                            Exit Sub
                        End If
                    Else
                        DESCRIPTION = ""
                    End If
                Else
                    DESCRIPTION = ""
                End If

                'validation for  GLOBE_TYPE
                Dim GLOBE_TYPE As Object = Nothing
                If TR_GLOBE_TYPE.Visible = True Then
                    If txt_Hold_GlobeType.Text <> "" Then
                        GLOBE_TYPE = TrimAll(txt_Hold_GlobeType.Text)
                        GLOBE_TYPE = RemoveQuotes(GLOBE_TYPE)
                        If Len(GLOBE_TYPE) > 50 Then
                            Label6.Text = " Input Length is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_GlobeType.Focus()
                            Exit Sub
                        End If
                    Else
                        GLOBE_TYPE = ""
                    End If
                Else
                    GLOBE_TYPE = ""
                End If

                'search ALTER_DATE
                Dim ALTER_DATE As Object = Nothing
                If TR_ALTER_DATE.Visible = True Then
                    If txt_Hold_AlterDate.Text <> "" Then
                        ALTER_DATE = TrimX(txt_Hold_AlterDate.Text)
                        ALTER_DATE = RemoveQuotes(ALTER_DATE)
                        ALTER_DATE = Convert.ToDateTime(ALTER_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                        If Len(ALTER_DATE) > 12 Then
                            Label6.Text = " Input is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_AlterDate.Focus()
                            Exit Sub
                        End If
                    Else
                        ALTER_DATE = ""
                    End If
                Else
                    ALTER_DATE = ""
                End If

                '*************************************************************************************************************************
                If SqlConn.State = 0 Then
                    SqlConn.Open()
                End If
                thisTransaction = SqlConn.BeginTransaction()
                Dim objCommand As New SqlCommand
                objCommand.Connection = SqlConn
                objCommand.Transaction = thisTransaction
                objCommand.CommandType = CommandType.Text
                objCommand.CommandText = "INSERT INTO CATS (LANG_CODE, BIB_CODE, MAT_CODE, DOC_TYPE_CODE, STANDARD_NO, TITLE, SUB_TITLE, VAR_TITLE, AUTHOR1, AUTHOR2, AUTHOR3, CORPORATE_AUTHOR, EDITOR, TRANSLATOR, ILLUSTRATOR, COMPILER, EDITION, PLACE_OF_PUB, PUB_ID, YEAR_OF_PUB, SERIES_TITLE, SERIES_EDITOR, NOTE, REMARKS, SUB_ID, KEYWORDS, DATE_ADDED, USER_CODE, ABSTRACT, CAT_LEVEL, MULTI_VOL, TOTAL_VOL, SP_NO, SP_VERSION, REPORT_NO, MANUAL_NO, MANUAL_VER, REFERENCE_NO, URL, PATENT_INVENTOR, PATENTEE, PATENT_NO, REPRINTS, CON_CODE, CONF_NAME, CONF_FROM, CONF_TO, CONF_PLACE, TR_FROM, REVISED_BY, COMMENTATORS, SCHOLAR_NAME, SCHOLAR_DEPT, GUIDE_NAME, GUIDE_DEPT, DEGREE_NAME, COMMENTS, LIB_CODE, IP, PHOTO, SP_REAFFIRM_YEAR, SP_TCSC, SP_UPDATES, SP_WITHDRAW_YEAR, SP_AMMENDMENTS, SP_ISSUE_BODY, PRODUCER, DESIGNER, MANUFACTURER, CREATOR, MATERIALS, WORK_CATEGORY, RELATED_WORK, SOURCE, PHOTOGRAPHER, NATIONALITY, TECHNIQ, WORK_TYPE, ROLE_OF_CREATOR, PRODUCTION_YEAR, CHAIRMAN, GOVERNMENT, ACT_NO, ACT_YEAR,CONT_FILE,CONT_FILE_TYPE) " & _
                                         " VALUES (@myLangCode,@myBibCode,@myMatCode,@myDocCode,@myISBN,@myTitle,@mySubTitle,@myVarTitle,@myAuthor1,@myAuthor2,@myAuthor3,@myCorpAuthor,@myEditor,@myTranslator,@myIllustrator,@myCompiler,@myEdition,@myPubPlace,@myPubID,@myPubYear,@mySeriesTitle,@mySeriesEditor,@myNote,@myRemarks,@mySubID,@myKeywords,@myDateAdded,@myUserCode,@myAbstract,@myCatLevel,@myMultiVol,@myTotalVol,@mySpNo,@mySpVersion,@myReportNo,@myManualNo,@myManualVer,@myReferenceNo,@myURL,@myPatentInventor,@myPatentee,@myPatentNo,@myReprints,@myConCode,@myConfName,@myConfFrom,@myConfTo,@myConfPlace,@myTrFrom,@myRevisedBy,@myCommentators,@myScholarName,@myScholarDept,@myGuideName,@myGuideDept,@myDegreeName,@myComments,@myLibCode,@myIP,@myPhoto,@myReaffirmYear,@mySPCommittee,@mySPUpdates,@myWithdrawYear,@mySPAmmendments,@mySPIssueBody,@myProducer,@myDesigner,@myManufacturer,@myCreator,@myMaterials,@myWorkCategory,@myRelatedWork,@mySource,@myPhotographer,@myNationality,@myTechniq,@myWorkType,@myRoleofCreator,@myProductionYear, @CHAIRMAN, @GOVERNMENT, @ACT_NO, @ACT_YEAR,@CONT_FILE,@CONT_FILE_TYPE); " & _
                                         " SELECT SCOPE_IDENTITY()"

                If myLangCode = "" Then myLangCode = "ENG"
                objCommand.Parameters.Add("@myLangCode", SqlDbType.VarChar)
                objCommand.Parameters("@myLangCode").Value = myLangCode

                If myBibLevel = "" Then myBibLevel = "M"
                objCommand.Parameters.Add("@myBibCode", SqlDbType.VarChar)
                objCommand.Parameters("@myBibCode").Value = myBibLevel

                If myMatType = "" Then myMatType = "B"
                objCommand.Parameters.Add("@myMatCode", SqlDbType.VarChar)
                objCommand.Parameters("@myMatCode").Value = myMatType

                If myDocType = "" Then myDocType = "BK"
                objCommand.Parameters.Add("@myDocCode", SqlDbType.VarChar)
                objCommand.Parameters("@myDocCode").Value = myDocType

                If myISBN = "" Then myISBN = System.DBNull.Value
                objCommand.Parameters.Add("@myISBN", SqlDbType.VarChar)
                objCommand.Parameters("@myISBN").Value = myISBN

                objCommand.Parameters.Add("@myTitle", SqlDbType.NVarChar)
                If myTitle = "" Then
                    objCommand.Parameters("@myTitle").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myTitle").Value = myTitle
                End If

                objCommand.Parameters.Add("@mySubTitle", SqlDbType.NVarChar)
                If mySubTitle = "" Then
                    objCommand.Parameters("@mySubTitle").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@mySubTitle").Value = mySubTitle
                End If

                objCommand.Parameters.Add("@myVarTitle", SqlDbType.NVarChar)
                If myVarTitle = "" Then
                    objCommand.Parameters("@myVarTitle").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myVarTitle").Value = myVarTitle
                End If

                objCommand.Parameters.Add("@myAuthor1", SqlDbType.NVarChar)
                If myAuthor1 = "" Then
                    objCommand.Parameters("@myAuthor1").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myAuthor1").Value = myAuthor1
                End If

                objCommand.Parameters.Add("@myAuthor2", SqlDbType.NVarChar)
                If myAuthor2 = "" Then
                    objCommand.Parameters("@myAuthor2").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myAuthor2").Value = myAuthor2
                End If

                objCommand.Parameters.Add("@myAuthor3", SqlDbType.NVarChar)
                If myAuthor3 = "" Then
                    objCommand.Parameters("@myAuthor3").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myAuthor3").Value = myAuthor3
                End If

                objCommand.Parameters.Add("@myCorpAuthor", SqlDbType.NVarChar)
                If myCorpAuthor = "" Then
                    objCommand.Parameters("@myCorpAuthor").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myCorpAuthor").Value = myCorpAuthor
                End If

                objCommand.Parameters.Add("@myEditor", SqlDbType.NVarChar)
                If myEditor = "" Then
                    objCommand.Parameters("@myEditor").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myEditor").Value = myEditor
                End If

                objCommand.Parameters.Add("@myTranslator", SqlDbType.NVarChar)
                If myTr = "" Then
                    objCommand.Parameters("@myTranslator").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myTranslator").Value = myTr
                End If

                objCommand.Parameters.Add("@myIllustrator", SqlDbType.NVarChar)
                If myIllus = "" Then
                    objCommand.Parameters("@myIllustrator").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myIllustrator").Value = myIllus
                End If

                objCommand.Parameters.Add("@myCompiler", SqlDbType.NVarChar)
                If myCompiler = "" Then
                    objCommand.Parameters("@myCompiler").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myCompiler").Value = myCompiler
                End If

                objCommand.Parameters.Add("@myEdition", SqlDbType.NVarChar)
                If myEdition = "" Then
                    objCommand.Parameters("@myEdition").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myEdition").Value = myEdition
                End If

                objCommand.Parameters.Add("@myPubPlace", SqlDbType.NVarChar)
                If myPubPlace = "" Then
                    objCommand.Parameters("@myPubPlace").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myPubPlace").Value = myPubPlace
                End If

                objCommand.Parameters.Add("@myPubID", SqlDbType.Int)
                If myPubID = 0 Then
                    objCommand.Parameters("@myPubID").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myPubID").Value = myPubID
                End If

                objCommand.Parameters.Add("@myPubYear", SqlDbType.Int)
                If myPubYear = 0 Then
                    objCommand.Parameters("@myPubYear").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myPubYear").Value = myPubYear
                End If

                objCommand.Parameters.Add("@mySeriesTitle", SqlDbType.NVarChar)
                If mySeries = "" Then
                    objCommand.Parameters("@mySeriesTitle").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@mySeriesTitle").Value = mySeries
                End If

                objCommand.Parameters.Add("@myseriesEditor", SqlDbType.NVarChar)
                If mySeriesEditor = "" Then
                    objCommand.Parameters("@mySeriesEditor").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@mySeriesEditor").Value = mySeriesEditor
                End If

                objCommand.Parameters.Add("@myNote", SqlDbType.NVarChar)
                If myNote = "" Then
                    objCommand.Parameters("@myNote").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myNote").Value = myNote
                End If

                objCommand.Parameters.Add("@myRemarks", SqlDbType.NVarChar)
                If myRemarks = "" Then
                    objCommand.Parameters("@myRemarks").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myRemarks").Value = myRemarks
                End If

                objCommand.Parameters.Add("@mySubID", SqlDbType.Int)
                If mySubId = 0 Then
                    objCommand.Parameters("@mySubID").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@mySubID").Value = mySubId
                End If

                objCommand.Parameters.Add("@myKeywords", SqlDbType.NVarChar)
                If myKeywords = "" Then
                    objCommand.Parameters("@myKeywords").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myKeywords").Value = UCase(myKeywords)
                End If

                objCommand.Parameters.Add("@myDateAdded", SqlDbType.DateTime)
                If myDateAdded = "" Then
                    objCommand.Parameters("@myDateAdded").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myDateAdded").Value = myDateAdded
                End If

                objCommand.Parameters.Add("@myUserCode", SqlDbType.NVarChar)
                If myUserCode = "" Then
                    objCommand.Parameters("@myUserCode").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myUserCode").Value = myUserCode
                End If

                objCommand.Parameters.Add("@myAbstract", SqlDbType.NVarChar)
                If myAbstract = "" Then
                    objCommand.Parameters("@myAbstract").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myAbstract").Value = myAbstract
                End If

                objCommand.Parameters.Add("@myCatLevel", SqlDbType.VarChar)
                If myCatLevel = "" Then
                    objCommand.Parameters("@myCatLevel").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myCatLevel").Value = myCatLevel
                End If

                objCommand.Parameters.Add("@myMultiVol", SqlDbType.VarChar)
                If myYesNo = "" Then
                    objCommand.Parameters("@myMultiVol").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myMultiVol").Value = myYesNo
                End If


                objCommand.Parameters.Add("@myTotalVol", SqlDbType.Int)
                If TotalVol = 0 Then
                    objCommand.Parameters("@myTotalVol").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myTotalVol").Value = TotalVol
                End If

                objCommand.Parameters.Add("@mySpNo", SqlDbType.NVarChar)
                If mySPNo = "" Then
                    objCommand.Parameters("@mySpNo").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@mySpNo").Value = mySPNo
                End If

                objCommand.Parameters.Add("@mySpVersion", SqlDbType.NVarChar)
                If mySPRev = "" Then
                    objCommand.Parameters("@mySpVersion").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@mySpVersion").Value = mySPRev
                End If

                objCommand.Parameters.Add("@myReportNo", SqlDbType.NVarChar)
                If myReportNo = "" Then
                    objCommand.Parameters("@myReportNo").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myReportNo").Value = myReportNo
                End If

                objCommand.Parameters.Add("@myManualNo", SqlDbType.NVarChar)
                If myManualNo = "" Then
                    objCommand.Parameters("@myManualNo").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myManualNo").Value = myManualNo
                End If

                objCommand.Parameters.Add("@myManualVer", SqlDbType.NVarChar)
                If myManualVer = "" Then
                    objCommand.Parameters("@myManualVer").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myManualVer").Value = myManualVer
                End If

                objCommand.Parameters.Add("@myReferenceNo", SqlDbType.NVarChar)
                If myRefNo = "" Then
                    objCommand.Parameters("@myReferenceNo").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myReferenceNo").Value = myRefNo
                End If

                objCommand.Parameters.Add("@myURL", SqlDbType.VarChar)
                If myURL = "" Then
                    objCommand.Parameters("@myURL").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myURL").Value = myURL
                End If

                objCommand.Parameters.Add("@myPatentInventor", SqlDbType.NVarChar)
                If myPatentInventor = "" Then
                    objCommand.Parameters("@myPatentInventor").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myPatentInventor").Value = myPatentInventor
                End If

                objCommand.Parameters.Add("@myPatentee", SqlDbType.NVarChar)
                If myPatentee = "" Then
                    objCommand.Parameters("@myPatentee").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myPatentee").Value = myPatentee
                End If

                objCommand.Parameters.Add("@myPatentNo", SqlDbType.NVarChar)
                If myPatentNo = "" Then
                    objCommand.Parameters("@myPatentNo").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myPatentNo").Value = myPatentNo
                End If

                objCommand.Parameters.Add("@myReprints", SqlDbType.NVarChar)
                If myReprint = "" Then
                    objCommand.Parameters("@myReprints").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myReprints").Value = myReprint
                End If

                objCommand.Parameters.Add("@myConCode", SqlDbType.VarChar)
                If myConCode = "" Then
                    objCommand.Parameters("@myConCode").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myConCode").Value = myConCode
                End If

                objCommand.Parameters.Add("@myConfName", SqlDbType.NVarChar)
                If myConfName = "" Then
                    objCommand.Parameters("@myConfName").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myConfName").Value = myConfName
                End If

                objCommand.Parameters.Add("@myConfFrom", SqlDbType.DateTime)
                If myConfSDate = "" Then
                    objCommand.Parameters("@myConfFrom").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myConfFrom").Value = myConfSDate
                End If

                objCommand.Parameters.Add("@myConfTo", SqlDbType.DateTime)
                If myConfEDate = "" Then
                    objCommand.Parameters("@myConfTo").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myConfTo").Value = myConfEDate
                End If

                objCommand.Parameters.Add("@myConfPlace", SqlDbType.NVarChar)
                If myConfPlace = "" Then
                    objCommand.Parameters("@myConfPlace").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myConfPlace").Value = myConfPlace
                End If

                objCommand.Parameters.Add("@myTrFrom", SqlDbType.NVarChar)
                If myTrFrom = "" Then
                    objCommand.Parameters("@myTrFrom").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myTrFrom").Value = myTrFrom
                End If

                objCommand.Parameters.Add("@myRevisedBy", SqlDbType.NVarChar)
                If myRevisedBy = "" Then
                    objCommand.Parameters("@myRevisedBy").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myRevisedBy").Value = myRevisedBy
                End If

                objCommand.Parameters.Add("@myCommentators", SqlDbType.NVarChar)
                If myCommentator = "" Then
                    objCommand.Parameters("@myCommentators").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myCommentators").Value = myCommentator
                End If

                objCommand.Parameters.Add("@myScholarName", SqlDbType.NVarChar)
                If myScholarName = "" Then
                    objCommand.Parameters("@myScholarName").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myScholarName").Value = myScholarName
                End If

                objCommand.Parameters.Add("@myScholarDept", SqlDbType.NVarChar)
                If myScholarDept = "" Then
                    objCommand.Parameters("@myScholarDept").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myScholarDept").Value = myScholarDept
                End If

                objCommand.Parameters.Add("@myGuideName", SqlDbType.NVarChar)
                If myGuideName = "" Then
                    objCommand.Parameters("@myGuideName").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myGuideName").Value = myGuideName
                End If

                objCommand.Parameters.Add("@myGuideDept", SqlDbType.NVarChar)
                If myGuideDept = "" Then
                    objCommand.Parameters("@myGuideDept").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myGuideDept").Value = myGuideDept
                End If

                objCommand.Parameters.Add("@myDegreeName", SqlDbType.NVarChar)
                If myDegreeName = "" Then
                    objCommand.Parameters("@myDegreeName").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myDegreeName").Value = myDegreeName
                End If

                objCommand.Parameters.Add("@myComments", SqlDbType.NVarChar)
                If myComments = "" Then
                    objCommand.Parameters("@myComments").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myComments").Value = myComments
                End If

                objCommand.Parameters.Add("@myLibCode", SqlDbType.NVarChar)
                If LibCode = "" Then
                    objCommand.Parameters("@myLibCode").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myLibCode").Value = LibCode
                End If


                objCommand.Parameters.Add("@myReaffirmYear", SqlDbType.Int)
                If myReaffirmYear = 0 Then
                    objCommand.Parameters("@myReaffirmYear").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myReaffirmYear").Value = myReaffirmYear
                End If

                objCommand.Parameters.Add("@myWithdrawYear", SqlDbType.Int)
                If myWithdrawYear = 0 Then
                    objCommand.Parameters("@myWithdrawYear").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myWithdrawYear").Value = myWithdrawYear
                End If

                objCommand.Parameters.Add("@mySPCommittee", SqlDbType.NVarChar)
                If mySPCommittee = "" Then
                    objCommand.Parameters("@mySPCommittee").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@mySPCommittee").Value = mySPCommittee
                End If

                objCommand.Parameters.Add("@mySPUpdates", SqlDbType.NVarChar)
                If mySPUpdates = "" Then
                    objCommand.Parameters("@mySPUpdates").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@mySPUpdates").Value = mySPUpdates
                End If

                objCommand.Parameters.Add("@mySPAmmendments", SqlDbType.NVarChar)
                If mySPAmmendments = "" Then
                    objCommand.Parameters("@mySPAmmendments").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@mySPAmmendments").Value = mySPAmmendments
                End If

                objCommand.Parameters.Add("@mySPIssueBody", SqlDbType.NVarChar)
                If mySPIssueBody = "" Then
                    objCommand.Parameters("@mySPIssueBody").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@mySPIssueBody").Value = mySPIssueBody
                End If

                objCommand.Parameters.Add("@myProducer", SqlDbType.NVarChar)
                If myProducer = "" Then
                    objCommand.Parameters("@myProducer").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myProducer").Value = myProducer
                End If

                objCommand.Parameters.Add("@myDesigner", SqlDbType.NVarChar)
                If myDesigner = "" Then
                    objCommand.Parameters("@myDesigner").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myDesigner").Value = myDesigner
                End If

                objCommand.Parameters.Add("@myManufacturer", SqlDbType.NVarChar)
                If myManufacturer = "" Then
                    objCommand.Parameters("@myManufacturer").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myManufacturer").Value = myManufacturer
                End If

                objCommand.Parameters.Add("@myCreator", SqlDbType.NVarChar)
                If myCreator = "" Then
                    objCommand.Parameters("@myCreator").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myCreator").Value = myCreator
                End If

                objCommand.Parameters.Add("@myMaterials", SqlDbType.NVarChar)
                If myMaterials = "" Then
                    objCommand.Parameters("@myMaterials").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myMaterials").Value = myMaterials
                End If

                objCommand.Parameters.Add("@myWorkCategory", SqlDbType.NVarChar)
                If myWorkCategory = "" Then
                    objCommand.Parameters("@myWorkCategory").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myWorkCategory").Value = myWorkCategory
                End If

                objCommand.Parameters.Add("@myRelatedWork", SqlDbType.NVarChar)
                If myRelatedWork = "" Then
                    objCommand.Parameters("@myRelatedWork").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myRelatedWork").Value = myRelatedWork
                End If

                objCommand.Parameters.Add("@mySource", SqlDbType.NVarChar)
                If mySource = "" Then
                    objCommand.Parameters("@mySource").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@mySource").Value = mySource
                End If

                objCommand.Parameters.Add("@myPhotographer", SqlDbType.NVarChar)
                If myPhotographer = "" Then
                    objCommand.Parameters("@myPhotographer").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myPhotographer").Value = myPhotographer
                End If

                objCommand.Parameters.Add("@myNationality", SqlDbType.NVarChar)
                If myNationality = "" Then
                    objCommand.Parameters("@myNationality").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myNationality").Value = myNationality
                End If

                objCommand.Parameters.Add("@myTechniq", SqlDbType.NVarChar)
                If myTechniq = "" Then
                    objCommand.Parameters("@myTechniq").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myTechniq").Value = myTechniq
                End If

                objCommand.Parameters.Add("@myWorkType", SqlDbType.NVarChar)
                If myWorkType = "" Then
                    objCommand.Parameters("@myWorkType").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myWorkType").Value = myWorkType
                End If

                objCommand.Parameters.Add("@myRoleofCreator", SqlDbType.NVarChar)
                If myRoleofCreator = "" Then
                    objCommand.Parameters("@myRoleofCreator").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myRoleofCreator").Value = myRoleofCreator
                End If

                objCommand.Parameters.Add("@myProductionYear", SqlDbType.Int)
                If myProductionYear = 0 Then
                    objCommand.Parameters("@myProductionYear").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myProductionYear").Value = myProductionYear
                End If

                objCommand.Parameters.Add("@CHAIRMAN", SqlDbType.NVarChar)
                If CHAIRMAN = "" Then
                    objCommand.Parameters("@CHAIRMAN").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@CHAIRMAN").Value = CHAIRMAN
                End If

                objCommand.Parameters.Add("@GOVERNMENT", SqlDbType.NVarChar)
                If GOVERNMENT = "" Then
                    objCommand.Parameters("@GOVERNMENT").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@GOVERNMENT").Value = GOVERNMENT
                End If

                objCommand.Parameters.Add("@ACT_NO", SqlDbType.NVarChar)
                If ACT_NO = "" Then
                    objCommand.Parameters("@ACT_NO").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@ACT_NO").Value = ACT_NO
                End If

                objCommand.Parameters.Add("@ACT_YEAR", SqlDbType.Int)
                If ACT_YEAR = 0 Then
                    objCommand.Parameters("@ACT_YEAR").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@ACT_YEAR").Value = ACT_YEAR
                End If

                objCommand.Parameters.Add("@myIP", SqlDbType.NVarChar)
                If myIP = "" Then
                    objCommand.Parameters("@myIP").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myIP").Value = myIP
                End If

                objCommand.Parameters.Add("@myPhoto", SqlDbType.Image)
                If FileUpload1.FileName = "" Then
                    objCommand.Parameters("@myPhoto").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@myPhoto").Value = arrContent2
                End If

                'contents file uploading
                objCommand.Parameters.Add("@CONT_FILE", SqlDbType.Image)
                If FileUpload2.FileName = "" Then
                    objCommand.Parameters("@CONT_FILE").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@CONT_FILE").Value = arrContent3
                End If

                'contents file uploading extension
                objCommand.Parameters.Add("@CONT_FILE_TYPE", SqlDbType.VarChar)
                If FileUpload2.FileName = "" Then
                    objCommand.Parameters("@CONT_FILE_TYPE").Value = System.DBNull.Value
                Else
                    objCommand.Parameters("@CONT_FILE_TYPE").Value = FileExtension
                End If

                Dim dr As SqlDataReader
                dr = objCommand.ExecuteReader()
                If dr.Read Then
                    intCat = dr.GetValue(0)
                End If
                dr.Close()


                '***********************************************************************************************************
                'SAVE ACQ DATA in ACQUISITIONS TABLE
                If intCat <> 0 Then
                    If txt_Acq_ItemPrice.Text <> "" Then
                        'validation for Currency code
                        Dim ACQMODE_CODE As Object = Nothing
                        ACQMODE_CODE = DDL_AcqModes.SelectedValue
                        If Not String.IsNullOrEmpty(ACQMODE_CODE) Then
                            ACQMODE_CODE = RemoveQuotes(ACQMODE_CODE)
                            If ACQMODE_CODE.Length > 2 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_AcqModes.Focus()
                                Exit Sub
                            End If
                            ACQMODE_CODE = " " & ACQMODE_CODE & " "
                            If InStr(1, ACQMODE_CODE, "CREATE", 1) > 0 Or InStr(1, ACQMODE_CODE, "DELETE", 1) > 0 Or InStr(1, ACQMODE_CODE, "DROP", 1) > 0 Or InStr(1, ACQMODE_CODE, "INSERT", 1) > 1 Or InStr(1, ACQMODE_CODE, "TRACK", 1) > 1 Or InStr(1, ACQMODE_CODE, "TRACE", 1) > 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_AcqModes.Focus()
                                Exit Sub
                            End If
                            ACQMODE_CODE = TrimX(ACQMODE_CODE)
                            'check unwanted characters
                            c = 0
                            counter76 = 0
                            For iloop = 1 To Len(ACQMODE_CODE)
                                strcurrentchar = Mid(ACQMODE_CODE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter76 = 1
                                    End If
                                End If
                            Next
                            If counter76 = 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_AcqModes.Focus()
                                Exit Sub
                            End If
                        Else
                            ACQMODE_CODE = "P"
                        End If

                        'validation for Currency code
                        Dim CUR_CODE As Object = Nothing
                        CUR_CODE = DDL_Currencies.SelectedValue
                        If Not String.IsNullOrEmpty(CUR_CODE) Then
                            CUR_CODE = RemoveQuotes(CUR_CODE)
                            If CUR_CODE.Length > 4 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_Currencies.Focus()
                                Exit Sub
                            End If
                            CUR_CODE = " " & CUR_CODE & " "
                            If InStr(1, CUR_CODE, "CREATE", 1) > 0 Or InStr(1, CUR_CODE, "DELETE", 1) > 0 Or InStr(1, CUR_CODE, "DROP", 1) > 0 Or InStr(1, CUR_CODE, "INSERT", 1) > 1 Or InStr(1, CUR_CODE, "TRACK", 1) > 1 Or InStr(1, CUR_CODE, "TRACE", 1) > 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_Currencies.Focus()
                                Exit Sub
                            End If
                            CUR_CODE = TrimX(CUR_CODE)
                            'check unwanted characters
                            c = 0
                            counter77 = 0
                            For iloop = 1 To Len(CUR_CODE)
                                strcurrentchar = Mid(CUR_CODE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter77 = 1
                                    End If
                                End If
                            Next
                            If counter77 = 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_Currencies.Focus()
                                Exit Sub
                            End If
                        Else
                            CUR_CODE = "INR"
                        End If

                        'validation for Currency code
                        Dim ITEM_PRICE As Object = Nothing
                        ITEM_PRICE = TrimX(txt_Acq_ItemPrice.Text)
                        If Not String.IsNullOrEmpty(ITEM_PRICE) Then
                            ITEM_PRICE = RemoveQuotes(ITEM_PRICE)
                            If ITEM_PRICE.Length > 10 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                txt_Acq_ItemPrice.Focus()
                                Exit Sub
                            End If
                            ITEM_PRICE = " " & ITEM_PRICE & " "
                            If InStr(1, ITEM_PRICE, "CREATE", 1) > 0 Or InStr(1, ITEM_PRICE, "DELETE", 1) > 0 Or InStr(1, ITEM_PRICE, "DROP", 1) > 0 Or InStr(1, ITEM_PRICE, "INSERT", 1) > 1 Or InStr(1, ITEM_PRICE, "TRACK", 1) > 1 Or InStr(1, ITEM_PRICE, "TRACE", 1) > 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                txt_Acq_ItemPrice.Focus()
                                Exit Sub
                            End If
                            ITEM_PRICE = TrimX(ITEM_PRICE)
                            'check unwanted characters
                            c = 0
                            counter78 = 0
                            For iloop = 1 To Len(ITEM_PRICE)
                                strcurrentchar = Mid(ITEM_PRICE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter78 = 1
                                    End If
                                End If
                            Next
                            If counter78 = 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                txt_Acq_ItemPrice.Focus()
                                Exit Sub
                            End If
                        Else
                            Label6.Text = "Plz Enter Item Price !"
                            Label15.Text = ""
                            txt_Acq_ItemPrice.Focus()
                            Exit Sub
                        End If

                        'Server Validation for CONVERSION_RATE
                        Dim CONVERSION_RATE As Object = Nothing
                        If txt_Acq_ConversionRate.Text <> "" Then
                            CONVERSION_RATE = TrimX(txt_Acq_ConversionRate.Text)
                            CONVERSION_RATE = RemoveQuotes(CONVERSION_RATE)
                            If CONVERSION_RATE.ToString.Length > 15 Then
                                Label6.Text = "Plz Enter Data with Proper Length!"
                                Label15.Text = ""
                                txt_Acq_ConversionRate.Focus()
                                Exit Sub
                            End If
                            CONVERSION_RATE = " " & CONVERSION_RATE & " "
                            If InStr(1, CONVERSION_RATE, "CREATE", 1) > 0 Or InStr(1, CONVERSION_RATE, "DELETE", 1) > 0 Or InStr(1, CONVERSION_RATE, "DROP", 1) > 0 Or InStr(1, CONVERSION_RATE, "INSERT", 1) > 1 Or InStr(1, CONVERSION_RATE, "TRACK", 1) > 1 Or InStr(1, CONVERSION_RATE, "TRACE", 1) > 1 Then
                                Label6.Text = "Do Not Use Reserve Words!"
                                Label15.Text = ""
                                txt_Acq_ConversionRate.Focus()
                                Exit Sub
                            End If
                            CONVERSION_RATE = TrimX(CONVERSION_RATE)
                            c = 0
                            counter79 = 0
                            For iloop = 1 To Len(CONVERSION_RATE.ToString)
                                strcurrentchar = Mid(CONVERSION_RATE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter79 = 1
                                    End If
                                End If
                            Next
                            If counter79 = 1 Then
                                Label6.Text = "Do Not Use Un-Wanted Characters!"
                                Label15.Text = ""
                                txt_Acq_ConversionRate.Focus()
                                Exit Sub
                            End If
                        Else
                            CONVERSION_RATE = 0
                        End If

                        'Server Validation for ITEM_RUPEES
                        Dim ITEM_RUPEES As Object = Nothing
                        If txt_Acq_ItemRupees.Text <> "" Then
                            ITEM_RUPEES = TrimX(txt_Acq_ItemRupees.Text)
                            ITEM_RUPEES = RemoveQuotes(ITEM_RUPEES)
                            If ITEM_RUPEES.ToString.Length > 15 Then
                                Label6.Text = "Plz Enter Data with Proper Length!"
                                Label15.Text = ""
                                txt_Acq_ItemRupees.Focus()
                                Exit Sub
                            End If
                            ITEM_RUPEES = " " & ITEM_RUPEES & " "
                            If InStr(1, ITEM_RUPEES, "CREATE", 1) > 0 Or InStr(1, ITEM_RUPEES, "DELETE", 1) > 0 Or InStr(1, ITEM_RUPEES, "DROP", 1) > 0 Or InStr(1, ITEM_RUPEES, "INSERT", 1) > 1 Or InStr(1, ITEM_RUPEES, "TRACK", 1) > 1 Or InStr(1, ITEM_RUPEES, "TRACE", 1) > 1 Then
                                Label6.Text = "Do Not Use Reserve Words!"
                                Label15.Text = ""
                                txt_Acq_ItemRupees.Focus()
                                Exit Sub
                            End If
                            ITEM_RUPEES = TrimX(ITEM_RUPEES)
                            c = 0
                            counter80 = 0
                            For iloop = 1 To Len(ITEM_RUPEES)
                                strcurrentchar = Mid(ITEM_RUPEES, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter80 = 1
                                    End If
                                End If
                            Next
                            If counter80 = 1 Then
                                Label6.Text = "Do Not Use Un-Wanted Characters!"
                                Label15.Text = ""
                                txt_Acq_ItemRupees.Focus()
                                Exit Sub
                            End If
                        Else
                            ITEM_RUPEES = 0
                        End If

                        If CUR_CODE = "INR" Then
                            ITEM_RUPEES = ITEM_PRICE
                        End If

                        'Server Validation for OTHER_CHARGES
                        Dim OTHER_CHARGES As Object = Nothing
                        If txt_Acq_OtherCharges.Text <> "" Then
                            OTHER_CHARGES = TrimX(txt_Acq_OtherCharges.Text)
                            OTHER_CHARGES = RemoveQuotes(OTHER_CHARGES)
                            If OTHER_CHARGES.ToString.Length > 15 Then
                                Label6.Text = "Plz Enter Data with Proper Length!"
                                Label15.Text = ""
                                txt_Acq_OtherCharges.Focus()
                                Exit Sub
                            End If
                            OTHER_CHARGES = " " & OTHER_CHARGES & " "
                            If InStr(1, OTHER_CHARGES, "CREATE", 1) > 0 Or InStr(1, OTHER_CHARGES, "DELETE", 1) > 0 Or InStr(1, OTHER_CHARGES, "DROP", 1) > 0 Or InStr(1, OTHER_CHARGES, "INSERT", 1) > 1 Or InStr(1, OTHER_CHARGES, "TRACK", 1) > 1 Or InStr(1, OTHER_CHARGES, "TRACE", 1) > 1 Then
                                Label6.Text = "Do Not Use Reserve Words!"
                                Label15.Text = ""
                                txt_Acq_OtherCharges.Focus()
                                Exit Sub
                            End If
                            OTHER_CHARGES = TrimX(OTHER_CHARGES)
                            c = 0
                            counter81 = 0
                            For iloop = 1 To Len(OTHER_CHARGES.ToString)
                                strcurrentchar = Mid(OTHER_CHARGES, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter81 = 1
                                    End If
                                End If
                            Next
                            If counter81 = 1 Then
                                Label6.Text = "Do Not Use Un-Wanted Characters!"
                                Label15.Text = ""
                                txt_Acq_OtherCharges.Focus()
                                Exit Sub
                            End If
                        Else
                            OTHER_CHARGES = 0
                        End If

                        'Server Validation for VENDOR
                        Dim VEND_ID As Integer = Nothing
                        If DDL_Vendors.Text <> "" Then
                            VEND_ID = DDL_Vendors.SelectedValue
                            VEND_ID = RemoveQuotes(VEND_ID)

                            If IsNumeric(VEND_ID) = False Then
                                Label6.Text = "Plz Select Vendor from Drop-Down!"
                                Label15.Text = ""
                                DDL_Vendors.Focus()
                                Exit Sub
                            End If
                            If VEND_ID.ToString.Length > 5 Then
                                Label6.Text = "Plz Enter Data with Proper Length!"
                                Label15.Text = ""
                                DDL_Vendors.Focus()
                                Exit Sub
                            End If
                            VEND_ID = " " & VEND_ID & " "
                            If InStr(1, VEND_ID, "CREATE", 1) > 0 Or InStr(1, VEND_ID, "DELETE", 1) > 0 Or InStr(1, VEND_ID, "DROP", 1) > 0 Or InStr(1, VEND_ID, "INSERT", 1) > 1 Or InStr(1, VEND_ID, "TRACK", 1) > 1 Or InStr(1, VEND_ID, "TRACE", 1) > 1 Then
                                Label6.Text = "Do Not Use Reserve Words!"
                                Label15.Text = ""
                                DDL_Vendors.Focus()
                                Exit Sub
                            End If
                            VEND_ID = TrimX(VEND_ID)

                            c = 0
                            counter82 = 0
                            For iloop = 1 To Len(VEND_ID.ToString)
                                strcurrentchar = Mid(VEND_ID, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'~!@#$^&*=+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter82 = 1
                                    End If
                                End If
                            Next
                            If counter82 = 1 Then
                                Label6.Text = "Do Not Use Un-Wanted Characters!"
                                Label15.Text = ""
                                DDL_Vendors.Focus()
                                Exit Sub
                            End If
                        Else
                            VEND_ID = 0
                        End If



                        Dim objCommand1 As New SqlCommand
                        objCommand1.Connection = SqlConn
                        objCommand1.Transaction = thisTransaction
                        objCommand1.CommandType = CommandType.Text
                        objCommand1.CommandText = "INSERT INTO ACQUISITIONS (CAT_NO, LIB_CODE, USER_CODE, DATE_ADDED, ACQMODE_CODE, CUR_CODE, ITEM_PRICE, CONVERSION_RATE, ITEM_RUPEES, OTHER_CHARGES, VEND_ID, IP, PROCESS_STATUS, VOL_NO, COPY_PROPOSED, COPY_APPROVED, COPY_ORDERED, COPY_RECEIVED, COPY_ACCESSIONED) " & _
                                                 " VALUES (@CAT_NO, @LIB_CODE, @USER_CODE, @DATE_ADDED, @ACQMODE_CODE, @CUR_CODE, @ITEM_PRICE, @CONVERSION_RATE, @ITEM_RUPEES, @OTHER_CHARGES, @VEND_ID, @IP, @PROCESS_STATUS, @VOL_NO, @COPY_PROPOSED, @COPY_APPROVED, @COPY_ORDERED, @COPY_RECEIVED, @COPY_ACCESSIONED); " & _
                                                 " SELECT SCOPE_IDENTITY()"

                        objCommand1.Parameters.Add("@CAT_NO", SqlDbType.Int)
                        objCommand1.Parameters("@CAT_NO").Value = intCat

                        objCommand1.Parameters.Add("@LIB_CODE", SqlDbType.NVarChar)
                        If LibCode = "" Then
                            objCommand1.Parameters("@LIB_CODE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@LIB_CODE").Value = LibCode
                        End If

                        objCommand1.Parameters.Add("@USER_CODE", SqlDbType.NVarChar)
                        If myUserCode = "" Then
                            objCommand1.Parameters("@USER_CODE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@USER_CODE").Value = myUserCode
                        End If

                        objCommand1.Parameters.Add("@DATE_ADDED", SqlDbType.DateTime)
                        If myDateAdded = "" Then
                            objCommand1.Parameters("@DATE_ADDED").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@DATE_ADDED").Value = myDateAdded
                        End If

                        objCommand1.Parameters.Add("@ACQMODE_CODE", SqlDbType.NVarChar)
                        If ACQMODE_CODE = "" Then
                            objCommand1.Parameters("@ACQMODE_CODE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@ACQMODE_CODE").Value = ACQMODE_CODE
                        End If

                        objCommand1.Parameters.Add("@CUR_CODE", SqlDbType.NVarChar)
                        If CUR_CODE = "" Then
                            objCommand1.Parameters("@CUR_CODE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@CUR_CODE").Value = CUR_CODE
                        End If

                        objCommand1.Parameters.Add("@ITEM_PRICE", SqlDbType.Decimal)
                        If ITEM_PRICE = 0 Then
                            objCommand1.Parameters("@ITEM_PRICE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@ITEM_PRICE").Value = ITEM_PRICE
                        End If

                        objCommand1.Parameters.Add("@CONVERSION_RATE", SqlDbType.Decimal)
                        If CONVERSION_RATE = 0 Then
                            objCommand1.Parameters("@CONVERSION_RATE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@CONVERSION_RATE").Value = CONVERSION_RATE
                        End If

                        objCommand1.Parameters.Add("@ITEM_RUPEES", SqlDbType.Decimal)
                        If ITEM_RUPEES = 0 Then
                            objCommand1.Parameters("@ITEM_RUPEES").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@ITEM_RUPEES").Value = ITEM_RUPEES
                        End If

                        objCommand1.Parameters.Add("@OTHER_CHARGES", SqlDbType.Decimal)
                        If OTHER_CHARGES = 0 Then
                            objCommand1.Parameters("@OTHER_CHARGES").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@OTHER_CHARGES").Value = OTHER_CHARGES
                        End If

                        objCommand1.Parameters.Add("@VOL_NO", SqlDbType.VarChar)
                        If VOL_NO = "" Then
                            objCommand1.Parameters("@VOL_NO").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@VOL_NO").Value = VOL_NO
                        End If

                        objCommand1.Parameters.Add("@VEND_ID", SqlDbType.Int)
                        If VEND_ID = 0 Then
                            objCommand1.Parameters("@VEND_ID").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@VEND_ID").Value = VEND_ID
                        End If

                        objCommand1.Parameters.Add("@COPY_PROPOSED", SqlDbType.Int)
                        objCommand1.Parameters("@COPY_PROPOSED").Value = 1

                        objCommand1.Parameters.Add("@COPY_APPROVED", SqlDbType.Int)
                        objCommand1.Parameters("@COPY_APPROVED").Value = 1

                        objCommand1.Parameters.Add("@COPY_ORDERED", SqlDbType.Int)
                        objCommand1.Parameters("@COPY_ORDERED").Value = 1

                        objCommand1.Parameters.Add("@COPY_RECEIVED", SqlDbType.Int)
                        objCommand1.Parameters("@COPY_RECEIVED").Value = 1

                        objCommand1.Parameters.Add("@COPY_ACCESSIONED", SqlDbType.Int)
                        objCommand1.Parameters("@COPY_ACCESSIONED").Value = 1

                        objCommand1.Parameters.Add("@PROCESS_STATUS", SqlDbType.VarChar)
                        objCommand1.Parameters("@PROCESS_STATUS").Value = "Direct Accessioned"

                        objCommand1.Parameters.Add("@IP", SqlDbType.VarChar)
                        If myIP = "" Then
                            objCommand1.Parameters("@IP").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@IP").Value = myIP
                        End If

                        Dim drAcq As SqlDataReader
                        drAcq = objCommand1.ExecuteReader()
                        If drAcq.Read Then
                            intAcqID = drAcq.GetValue(0)
                        End If
                        drAcq.Close()
                    End If

                    'Save Holding data   
                    Dim objCommand2 As New SqlCommand
                    objCommand2.Connection = SqlConn
                    objCommand2.Transaction = thisTransaction
                    objCommand2.CommandType = CommandType.Text
                    objCommand2.CommandText = "INSERT INTO HOLDINGS (CAT_NO, ACQ_ID, ACCESSION_NO, ACCESSION_DATE, FORMAT_CODE, SHOW, ISSUEABLE, VOL_NO, VOL_YEAR, VOL_EDITORS, VOL_TITLE, COPY_ISBN, CLASS_NO, BOOK_NO, PAGINATION, SIZE, ILLUSTRATION, COLLECTION_TYPE, STA_CODE, BIND_CODE, SEC_CODE, LIB_CODE, ACC_MAT_CODE, REMARKS, PHYSICAL_LOCATION, REFERENCE_NO, MEDIUM, RECORDING_CATEGORY, RECORDING_FORM, RECORDING_FORMAT, RECORDING_SPEED, RECORDING_STORAGE_TECH, RECORDING_PLAY_DURATION, VIDEO_TYPEOFVISUAL, CARTOGRAPHIC_SCALE, CARTOGRAPHIC_PROJECTION, CARTOGRAPHIC_COORDINATES, CARTOGRAPHIC_GEOGRAPHIC_LOCATION, CARTOGRAPHIC_MEDIUM, CARTOGRAPHIC_DATAGATHERING_DATE, CREATION_DATE, CARTOGRAPHIC_COMPILATION_DATE, CARTOGRAPHIC_INSPECTION_DATE, DATE_ADDED, USER_CODE, IP,VIDEO_COLOR,PLAYBACK_CHANNELS,TAPE_WIDTH,TAPE_CONFIGURATION,KIND_OF_DISK,KIND_OF_CUTTING,ENCODING_STANDARD,CAPTURE_TECHNIQUE,PHOTO_NO,PHOTO_ALBUM_NO,PHOTO_OCASION,IMAGE_VIEW_TYPE,VIEW_DATE,THEME,STYLE,CULTURE,CURRENT_SITE,CREATION_SITE,YARNCOUNT,MATERIAL_TYPE,TECHNIQUE,TECH_DETAILS,INSCRIPTIONS,DESCRIPTION,GLOBE_TYPE,ALTER_DATE ) " & _
                                                 " VALUES (@CAT_NO, @ACQ_ID, @ACCESSION_NO, @ACCESSION_DATE, @FORMAT_CODE, @SHOW, @ISSUABLE, @VOL_NO, @VOL_YEAR, @VOL_EDITORS, @VOL_TITLE, @COPY_ISBN, @CLASS_NO, @BOOK_NO, @PAGINATION, @SIZE, @ILLUSTRATION, @COLLECTION_TYPE, @STA_CODE, @BIND_CODE, @SEC_CODE, @LIB_CODE, @ACC_MAT_CODE, @REMARKS, @PHYSICAL_LOCATION, @REFERENCE_NO, @RECORDING_MEDIUM, @RECORDING_CATEGORY, @RECORDING_FORM, @RECORDING_FORMAT, @RECORDING_SPEED, @RECORDING_STORAGE_TECH, @RECORDING_PLAY_DURATION, @VIDEO_TYPEOFVISUALS, @CARTOGRAPHIC_SCALE, @CARTOGRAPHIC_PROJECTION, @CARTOGRAPHIC_COORDINATES, @CARTOGRAPHIC_GEOGRAPHIC_LOCATION, @CARTOGRAPHIC_MEDIUM, @CARTOGRAPHIC_DATAGATHERING_DATE, @CARTOGRAPHIC_CREATION_DATE, @CARTOGRAPHIC_COMPILATION_DATE, @CARTOGRAPHIC_INSPECTION_DATE, @DATE_ADDED, @USER_CODE, @IP,@VIDEO_COLOR,@PLAYBACK_CHANNELS,@TAPE_WIDTH,@TAPE_CONFIGURATION,@KIND_OF_DISK,@KIND_OF_CUTTING,@ENCODING_STANDARD,@CAPTURE_TECHNIQUE,@PHOTO_NO,@PHOTO_ALBUM_NO,@PHOTO_OCASION,@IMAGE_VIEW_TYPE,@VIEW_DATE,@THEME,@STYLE,@CULTURE,@CURRENT_SITE,@CREATION_SITE,@YARNCOUNT,@MATERIAL_TYPE,@TECHNIQUE,@TECH_DETAILS,@INSCRIPTIONS,@DESCRIPTION,@GLOBE_TYPE,@ALTER_DATE);  "

                    objCommand2.Parameters.Add("@CAT_NO", SqlDbType.Int)
                    If intCat = 0 Then
                        objCommand2.Parameters("@CAT_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CAT_NO").Value = intCat
                    End If

                    objCommand2.Parameters.Add("@ACQ_ID", SqlDbType.Int)
                    If intAcqID = 0 Then
                        objCommand2.Parameters("@ACQ_ID").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ACQ_ID").Value = intAcqID
                    End If

                    objCommand2.Parameters.Add("@ACCESSION_NO", SqlDbType.NVarChar)
                    If ACCESSION_NO = "" Then
                        objCommand2.Parameters("@ACCESSION_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ACCESSION_NO").Value = ACCESSION_NO
                    End If

                    objCommand2.Parameters.Add("@ACCESSION_DATE", SqlDbType.DateTime)
                    If ACCESSION_DATE = "" Then
                        objCommand2.Parameters("@ACCESSION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ACCESSION_DATE").Value = ACCESSION_DATE
                    End If


                    If FORMAT_CODE = "" Then FORMAT_CODE = "PT"
                    objCommand2.Parameters.Add("@FORMAT_CODE", SqlDbType.VarChar)
                    objCommand2.Parameters("@FORMAT_CODE").Value = FORMAT_CODE

                    If SHOW = "" Then SHOW = "Y"
                    objCommand2.Parameters.Add("@SHOW", SqlDbType.VarChar)
                    objCommand2.Parameters("@SHOW").Value = SHOW

                    If ISSUABLE = "" Then ISSUABLE = "Y"
                    objCommand2.Parameters.Add("@ISSUABLE", SqlDbType.VarChar)
                    objCommand2.Parameters("@ISSUABLE").Value = ISSUABLE

                    objCommand2.Parameters.Add("@VOL_NO", SqlDbType.NVarChar)
                    If VOL_NO = "" Then
                        objCommand2.Parameters("@VOL_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VOL_NO").Value = VOL_NO
                    End If

                    objCommand2.Parameters.Add("@VOL_YEAR", SqlDbType.Int)
                    If VOL_YEAR = 0 Then
                        objCommand2.Parameters("@VOL_YEAR").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VOL_YEAR").Value = VOL_YEAR
                    End If

                    objCommand2.Parameters.Add("@VOL_EDITORS", SqlDbType.NVarChar)
                    If VOL_EDITORS = "" Then
                        objCommand2.Parameters("@VOL_EDITORS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VOL_EDITORS").Value = VOL_EDITORS
                    End If

                    objCommand2.Parameters.Add("@VOL_TITLE", SqlDbType.NVarChar)
                    If VOL_TITLE = "" Then
                        objCommand2.Parameters("@VOL_TITLE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VOL_TITLE").Value = VOL_TITLE
                    End If

                    objCommand2.Parameters.Add("@COPY_ISBN", SqlDbType.VarChar)
                    If COPY_ISBN = "" Then
                        objCommand2.Parameters("@COPY_ISBN").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@COPY_ISBN").Value = COPY_ISBN
                    End If

                    objCommand2.Parameters.Add("@CLASS_NO", SqlDbType.NVarChar)
                    If CLASS_NO = "" Then
                        objCommand2.Parameters("@CLASS_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CLASS_NO").Value = CLASS_NO
                    End If

                    objCommand2.Parameters.Add("@BOOK_NO", SqlDbType.NVarChar)
                    If BOOK_NO = "" Then
                        objCommand2.Parameters("@BOOK_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@BOOK_NO").Value = BOOK_NO
                    End If

                    objCommand2.Parameters.Add("@PAGINATION", SqlDbType.NVarChar)
                    If PAGINATION = "" Then
                        objCommand2.Parameters("@PAGINATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PAGINATION").Value = PAGINATION
                    End If

                    objCommand2.Parameters.Add("@SIZE", SqlDbType.VarChar)
                    If SIZE = "" Then
                        objCommand2.Parameters("@SIZE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@SIZE").Value = SIZE
                    End If

                    objCommand2.Parameters.Add("@ILLUSTRATION", SqlDbType.VarChar)
                    If ILLUSTRATION = "" Then
                        objCommand2.Parameters("@ILLUSTRATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ILLUSTRATION").Value = ILLUSTRATION
                    End If

                    objCommand2.Parameters.Add("@COLLECTION_TYPE", SqlDbType.VarChar)
                    If COLLECTION_TYPE = "" Then
                        objCommand2.Parameters("@COLLECTION_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@COLLECTION_TYPE").Value = COLLECTION_TYPE
                    End If

                    If STA_CODE = "" Then STA_CODE = "1"
                    objCommand2.Parameters.Add("@STA_CODE", SqlDbType.VarChar)
                    objCommand2.Parameters("@STA_CODE").Value = STA_CODE

                    objCommand2.Parameters.Add("@BIND_CODE", SqlDbType.VarChar)
                    If BIND_CODE = "" Then
                        objCommand2.Parameters("@BIND_CODE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@BIND_CODE").Value = BIND_CODE
                    End If

                    objCommand2.Parameters.Add("@SEC_CODE", SqlDbType.VarChar)
                    If SEC_CODE = "" Then
                        objCommand2.Parameters("@SEC_CODE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@SEC_CODE").Value = SEC_CODE
                    End If

                    objCommand2.Parameters.Add("@LIB_CODE", SqlDbType.NVarChar)
                    If HOLD_LIB_CODE = "" Then
                        objCommand2.Parameters("@LIB_CODE").Value = HOLD_LIB_CODE
                    Else
                        objCommand2.Parameters("@LIB_CODE").Value = LibCode
                    End If

                    objCommand2.Parameters.Add("@ACC_MAT_CODE", SqlDbType.VarChar)
                    If ACC_MAT_CODE = "" Then
                        objCommand2.Parameters("@ACC_MAT_CODE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ACC_MAT_CODE").Value = ACC_MAT_CODE
                    End If

                    objCommand2.Parameters.Add("@REMARKS", SqlDbType.NVarChar)
                    If REMARKS = "" Then
                        objCommand2.Parameters("@REMARKS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@REMARKS").Value = REMARKS
                    End If

                    objCommand2.Parameters.Add("@PHYSICAL_LOCATION", SqlDbType.NVarChar)
                    If PHYSICAL_LOCATION = "" Then
                        objCommand2.Parameters("@PHYSICAL_LOCATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PHYSICAL_LOCATION").Value = PHYSICAL_LOCATION
                    End If

                    objCommand2.Parameters.Add("@REFERENCE_NO", SqlDbType.NVarChar)
                    If REFERENCE_NO = "" Then
                        objCommand2.Parameters("@REFERENCE_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@REFERENCE_NO").Value = REFERENCE_NO
                    End If

                    objCommand2.Parameters.Add("@RECORDING_MEDIUM", SqlDbType.NVarChar)
                    If RECORDING_MEDIUM = "" Then
                        objCommand2.Parameters("@RECORDING_MEDIUM").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_MEDIUM").Value = RECORDING_MEDIUM
                    End If

                    objCommand2.Parameters.Add("@RECORDING_CATEGORY", SqlDbType.NVarChar)
                    If RECORDING_CATEGORY = "" Then
                        objCommand2.Parameters("@RECORDING_CATEGORY").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_CATEGORY").Value = RECORDING_CATEGORY
                    End If

                    objCommand2.Parameters.Add("@RECORDING_FORM", SqlDbType.NVarChar)
                    If RECORDING_FORM = "" Then
                        objCommand2.Parameters("@RECORDING_FORM").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_FORM").Value = RECORDING_FORM
                    End If

                    objCommand2.Parameters.Add("@RECORDING_FORMAT", SqlDbType.NVarChar)
                    If RECORDING_FORMAT = "" Then
                        objCommand2.Parameters("@RECORDING_FORMAT").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_FORMAT").Value = RECORDING_FORMAT
                    End If

                    objCommand2.Parameters.Add("@RECORDING_SPEED", SqlDbType.NVarChar)
                    If RECORDING_SPEED = "" Then
                        objCommand2.Parameters("@RECORDING_SPEED").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_SPEED").Value = RECORDING_SPEED
                    End If

                    objCommand2.Parameters.Add("@RECORDING_STORAGE_TECH", SqlDbType.NVarChar)
                    If RECORDING_STORAGE_TECH = "" Then
                        objCommand2.Parameters("@RECORDING_STORAGE_TECH").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_STORAGE_TECH").Value = RECORDING_STORAGE_TECH
                    End If

                    objCommand2.Parameters.Add("@RECORDING_PLAY_DURATION", SqlDbType.NVarChar)
                    If RECORDING_PLAY_DURATION = "" Then
                        objCommand2.Parameters("@RECORDING_PLAY_DURATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_PLAY_DURATION").Value = RECORDING_PLAY_DURATION
                    End If

                    objCommand2.Parameters.Add("@VIDEO_TYPEOFVISUALS", SqlDbType.NVarChar)
                    If VIDEO_TYPEOFVISUALS = "" Then
                        objCommand2.Parameters("@VIDEO_TYPEOFVISUALS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VIDEO_TYPEOFVISUALS").Value = VIDEO_TYPEOFVISUALS
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_SCALE", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_SCALE = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_SCALE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_SCALE").Value = CARTOGRAPHIC_SCALE
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_PROJECTION", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_PROJECTION = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_PROJECTION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_PROJECTION").Value = CARTOGRAPHIC_PROJECTION
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_COORDINATES", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_COORDINATES = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_COORDINATES").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_COORDINATES").Value = CARTOGRAPHIC_COORDINATES
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_GEOGRAPHIC_LOCATION", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_GEOGRAPHIC_LOCATION = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_GEOGRAPHIC_LOCATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_GEOGRAPHIC_LOCATION").Value = CARTOGRAPHIC_GEOGRAPHIC_LOCATION
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_MEDIUM", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_MEDIUM = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_MEDIUM").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_MEDIUM").Value = CARTOGRAPHIC_MEDIUM
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_DATAGATHERING_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_DATAGATHERING_DATE = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_DATAGATHERING_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_DATAGATHERING_DATE").Value = CARTOGRAPHIC_DATAGATHERING_DATE
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_CREATION_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_CREATION_DATE = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_CREATION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_CREATION_DATE").Value = CARTOGRAPHIC_CREATION_DATE
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_COMPILATION_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_COMPILATION_DATE = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_COMPILATION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_COMPILATION_DATE").Value = CARTOGRAPHIC_COMPILATION_DATE
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_INSPECTION_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_INSPECTION_DATE = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_INSPECTION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_INSPECTION_DATE").Value = CARTOGRAPHIC_INSPECTION_DATE
                    End If

                    objCommand2.Parameters.Add("@VIDEO_COLOR", SqlDbType.NVarChar)
                    If VIDEO_COLOR = "" Then
                        objCommand2.Parameters("@VIDEO_COLOR").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VIDEO_COLOR").Value = VIDEO_COLOR
                    End If

                    objCommand2.Parameters.Add("@PLAYBACK_CHANNELS", SqlDbType.NVarChar)
                    If PLAYBACK_CHANNELS = "" Then
                        objCommand2.Parameters("@PLAYBACK_CHANNELS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PLAYBACK_CHANNELS").Value = PLAYBACK_CHANNELS
                    End If

                    objCommand2.Parameters.Add("@TAPE_WIDTH", SqlDbType.NVarChar)
                    If TAPE_WIDTH = "" Then
                        objCommand2.Parameters("@TAPE_WIDTH").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@TAPE_WIDTH").Value = TAPE_WIDTH
                    End If

                    objCommand2.Parameters.Add("@TAPE_CONFIGURATION", SqlDbType.NVarChar)
                    If TAPE_CONFIGURATION = "" Then
                        objCommand2.Parameters("@TAPE_CONFIGURATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@TAPE_CONFIGURATION").Value = TAPE_CONFIGURATION
                    End If

                    objCommand2.Parameters.Add("@KIND_OF_DISK", SqlDbType.NVarChar)
                    If KIND_OF_DISK = "" Then
                        objCommand2.Parameters("@KIND_OF_DISK").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@KIND_OF_DISK").Value = KIND_OF_DISK
                    End If

                    objCommand2.Parameters.Add("@KIND_OF_CUTTING", SqlDbType.NVarChar)
                    If KIND_OF_CUTTING = "" Then
                        objCommand2.Parameters("@KIND_OF_CUTTING").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@KIND_OF_CUTTING").Value = KIND_OF_CUTTING
                    End If

                    objCommand2.Parameters.Add("@ENCODING_STANDARD", SqlDbType.NVarChar)
                    If ENCODING_STANDARD = "" Then
                        objCommand2.Parameters("@ENCODING_STANDARD").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ENCODING_STANDARD").Value = ENCODING_STANDARD
                    End If

                    objCommand2.Parameters.Add("@CAPTURE_TECHNIQUE", SqlDbType.NVarChar)
                    If CAPTURE_TECHNIQUE = "" Then
                        objCommand2.Parameters("@CAPTURE_TECHNIQUE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CAPTURE_TECHNIQUE").Value = CAPTURE_TECHNIQUE
                    End If

                    objCommand2.Parameters.Add("@PHOTO_NO", SqlDbType.NVarChar)
                    If PHOTO_NO = "" Then
                        objCommand2.Parameters("@PHOTO_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PHOTO_NO").Value = PHOTO_NO
                    End If

                    objCommand2.Parameters.Add("@PHOTO_ALBUM_NO", SqlDbType.NVarChar)
                    If PHOTO_ALBUM_NO = "" Then
                        objCommand2.Parameters("@PHOTO_ALBUM_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PHOTO_ALBUM_NO").Value = PHOTO_ALBUM_NO
                    End If

                    objCommand2.Parameters.Add("@PHOTO_OCASION", SqlDbType.NVarChar)
                    If PHOTO_OCASION = "" Then
                        objCommand2.Parameters("@PHOTO_OCASION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PHOTO_OCASION").Value = PHOTO_OCASION
                    End If

                    objCommand2.Parameters.Add("@IMAGE_VIEW_TYPE", SqlDbType.NVarChar)
                    If IMAGE_VIEW_TYPE = "" Then
                        objCommand2.Parameters("@IMAGE_VIEW_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@IMAGE_VIEW_TYPE").Value = IMAGE_VIEW_TYPE
                    End If

                    objCommand2.Parameters.Add("@THEME", SqlDbType.NVarChar)
                    If THEME = "" Then
                        objCommand2.Parameters("@THEME").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@THEME").Value = THEME
                    End If

                    objCommand2.Parameters.Add("@STYLE", SqlDbType.NVarChar)
                    If STYLE = "" Then
                        objCommand2.Parameters("@STYLE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@STYLE").Value = STYLE
                    End If

                    objCommand2.Parameters.Add("@CULTURE", SqlDbType.NVarChar)
                    If CULTURE = "" Then
                        objCommand2.Parameters("@CULTURE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CULTURE").Value = CULTURE
                    End If

                    objCommand2.Parameters.Add("@CURRENT_SITE", SqlDbType.NVarChar)
                    If CURRENT_SITE = "" Then
                        objCommand2.Parameters("@CURRENT_SITE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CURRENT_SITE").Value = CURRENT_SITE
                    End If

                    objCommand2.Parameters.Add("@CREATION_SITE", SqlDbType.NVarChar)
                    If CREATION_SITE = "" Then
                        objCommand2.Parameters("@CREATION_SITE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CREATION_SITE").Value = CREATION_SITE
                    End If

                    objCommand2.Parameters.Add("@YARNCOUNT", SqlDbType.NVarChar)
                    If YARNCOUNT = "" Then
                        objCommand2.Parameters("@YARNCOUNT").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@YARNCOUNT").Value = YARNCOUNT
                    End If

                    objCommand2.Parameters.Add("@MATERIAL_TYPE", SqlDbType.NVarChar)
                    If MATERIAL_TYPE = "" Then
                        objCommand2.Parameters("@MATERIAL_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@MATERIAL_TYPE").Value = MATERIAL_TYPE
                    End If

                    objCommand2.Parameters.Add("@TECHNIQUE", SqlDbType.NVarChar)
                    If TECHNIQUE = "" Then
                        objCommand2.Parameters("@TECHNIQUE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@TECHNIQUE").Value = TECHNIQUE
                    End If

                    objCommand2.Parameters.Add("@TECH_DETAILS", SqlDbType.NVarChar)
                    If TECH_DETAILS = "" Then
                        objCommand2.Parameters("@TECH_DETAILS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@TECH_DETAILS").Value = TECH_DETAILS
                    End If

                    objCommand2.Parameters.Add("@INSCRIPTIONS", SqlDbType.NVarChar)
                    If INSCRIPTIONS = "" Then
                        objCommand2.Parameters("@INSCRIPTIONS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@INSCRIPTIONS").Value = INSCRIPTIONS
                    End If

                    objCommand2.Parameters.Add("@DESCRIPTION", SqlDbType.NVarChar)
                    If DESCRIPTION = "" Then
                        objCommand2.Parameters("@DESCRIPTION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@DESCRIPTION").Value = DESCRIPTION
                    End If

                    objCommand2.Parameters.Add("@GLOBE_TYPE", SqlDbType.NVarChar)
                    If GLOBE_TYPE = "" Then
                        objCommand2.Parameters("@GLOBE_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@GLOBE_TYPE").Value = GLOBE_TYPE
                    End If

                    objCommand2.Parameters.Add("@ALTER_DATE", SqlDbType.DateTime)
                    If ALTER_DATE = "" Then
                        objCommand2.Parameters("@ALTER_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ALTER_DATE").Value = ALTER_DATE
                    End If

                    objCommand2.Parameters.Add("@VIEW_DATE", SqlDbType.DateTime)
                    If VIEW_DATE = "" Then
                        objCommand2.Parameters("@VIEW_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VIEW_DATE").Value = VIEW_DATE
                    End If

                    objCommand2.Parameters.Add("@DATE_ADDED", SqlDbType.DateTime)
                    If myDateAdded = "" Then
                        objCommand2.Parameters("@DATE_ADDED").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@DATE_ADDED").Value = myDateAdded
                    End If

                    objCommand2.Parameters.Add("@USER_CODE", SqlDbType.NVarChar)
                    If myUserCode = "" Then
                        objCommand2.Parameters("@USER_CODE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@USER_CODE").Value = myUserCode
                    End If

                    objCommand2.Parameters.Add("@IP", SqlDbType.VarChar)
                    If myIP = "" Then
                        objCommand2.Parameters("@IP").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@IP").Value = myIP
                    End If
                    objCommand2.ExecuteNonQuery()
                End If























                thisTransaction.Commit()
                SqlConn.Close()
                Label15.Text = "Record added Successfully!" & " Cat No: " & intCat
                Label6.Text = ""
                Label7.Text = intCat.ToString

                'if range of accn no  then chk if it is numeric
                If CB_RecvAll.Checked = True Then
                    If txt_Hold_Copies.Text <> "" Then
                        If txt_Hold_Copies.Text > 1 Then
                            AddMultiHoldings()
                        End If
                    End If
                End If

                Me.Acq_Save_Bttn.Visible = True
                Acq_Update_Bttn.Visible = False
                Acq_SaveNew_Bttn.Visible = False
                ClearFields()
                UpdatePanel1.Update()

                txt_Display_Value.Text = intCat
                DDL_Display.SelectedValue = "CAT_NO"
                DisplayRecord()


            Catch q As SqlException
                thisTransaction.Rollback()
                Label6.Text = "Database Error -SAVE: " & (q.Message() & ", " & q.Number & ", " & q.GetType.ToString)
                Label7.Text = ""
            Catch ex As Exception
                Label6.Text = "Error-SAVE: " & (ex.Message())
                Label15.Text = ""
                Label7.Text = ""
            Finally
                SqlConn.Close()
            End Try
        End If

    End Sub
    Public Sub AddMultiHoldings()

        If Label7.Text <> "" Then
            'check unwanted characters
            Dim iloop As Integer
            Dim strcurrentchar As Object
            Dim c As Integer
            Dim counter76, counter77, counter78, counter79, counter80, counter81, counter82 As Integer
            Dim counter85, counter86, counter87, counter88, counter89, counter90, counter91, counter92, counter93, counter94, counter95, counter96, counter97, counter98, counter99 As Integer
            Dim counter100, counter101, counter102, counter103, counter104, counter105, counter106, counter107, counter108, counter109, counter110, counter111, counter112, counter113 As Integer

            Dim thisTransaction As SqlClient.SqlTransaction = Nothing
            Dim intAcqID As Long = Nothing

            'ACQ Data
            'validation for Currency code
            Dim ACQMODE_CODE As Object = Nothing
            ACQMODE_CODE = DDL_AcqModes.SelectedValue
            If Not String.IsNullOrEmpty(ACQMODE_CODE) Then
                ACQMODE_CODE = RemoveQuotes(ACQMODE_CODE)
                If ACQMODE_CODE.Length > 2 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    DDL_AcqModes.Focus()
                    Exit Sub
                End If
                ACQMODE_CODE = " " & ACQMODE_CODE & " "
                If InStr(1, ACQMODE_CODE, "CREATE", 1) > 0 Or InStr(1, ACQMODE_CODE, "DELETE", 1) > 0 Or InStr(1, ACQMODE_CODE, "DROP", 1) > 0 Or InStr(1, ACQMODE_CODE, "INSERT", 1) > 1 Or InStr(1, ACQMODE_CODE, "TRACK", 1) > 1 Or InStr(1, ACQMODE_CODE, "TRACE", 1) > 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    DDL_AcqModes.Focus()
                    Exit Sub
                End If
                ACQMODE_CODE = TrimX(ACQMODE_CODE)
                'check unwanted characters
                c = 0
                counter76 = 0
                For iloop = 1 To Len(ACQMODE_CODE)
                    strcurrentchar = Mid(ACQMODE_CODE, iloop, 1)
                    If c = 0 Then
                        If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter76 = 1
                        End If
                    End If
                Next
                If counter76 = 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    DDL_AcqModes.Focus()
                    Exit Sub
                End If
            Else
                ACQMODE_CODE = "P"
            End If

            'validation for Currency code
            Dim CUR_CODE As Object = Nothing
            CUR_CODE = DDL_Currencies.SelectedValue
            If Not String.IsNullOrEmpty(CUR_CODE) Then
                CUR_CODE = RemoveQuotes(CUR_CODE)
                If CUR_CODE.Length > 4 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    DDL_Currencies.Focus()
                    Exit Sub
                End If
                CUR_CODE = " " & CUR_CODE & " "
                If InStr(1, CUR_CODE, "CREATE", 1) > 0 Or InStr(1, CUR_CODE, "DELETE", 1) > 0 Or InStr(1, CUR_CODE, "DROP", 1) > 0 Or InStr(1, CUR_CODE, "INSERT", 1) > 1 Or InStr(1, CUR_CODE, "TRACK", 1) > 1 Or InStr(1, CUR_CODE, "TRACE", 1) > 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    DDL_Currencies.Focus()
                    Exit Sub
                End If
                CUR_CODE = TrimX(CUR_CODE)
                'check unwanted characters
                c = 0
                counter77 = 0
                For iloop = 1 To Len(CUR_CODE)
                    strcurrentchar = Mid(CUR_CODE, iloop, 1)
                    If c = 0 Then
                        If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter77 = 1
                        End If
                    End If
                Next
                If counter77 = 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    DDL_Currencies.Focus()
                    Exit Sub
                End If
            Else
                CUR_CODE = "INR"
            End If

            'validation for Currency code
            Dim ITEM_PRICE As Object = Nothing
            ITEM_PRICE = TrimX(txt_Acq_ItemPrice.Text)
            If Not String.IsNullOrEmpty(ITEM_PRICE) Then
                ITEM_PRICE = RemoveQuotes(ITEM_PRICE)
                If ITEM_PRICE.Length > 10 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    txt_Acq_ItemPrice.Focus()
                    Exit Sub
                End If
                ITEM_PRICE = " " & ITEM_PRICE & " "
                If InStr(1, ITEM_PRICE, "CREATE", 1) > 0 Or InStr(1, ITEM_PRICE, "DELETE", 1) > 0 Or InStr(1, ITEM_PRICE, "DROP", 1) > 0 Or InStr(1, ITEM_PRICE, "INSERT", 1) > 1 Or InStr(1, ITEM_PRICE, "TRACK", 1) > 1 Or InStr(1, ITEM_PRICE, "TRACE", 1) > 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    txt_Acq_ItemPrice.Focus()
                    Exit Sub
                End If
                ITEM_PRICE = TrimX(ITEM_PRICE)
                'check unwanted characters
                c = 0
                counter78 = 0
                For iloop = 1 To Len(ITEM_PRICE)
                    strcurrentchar = Mid(ITEM_PRICE, iloop, 1)
                    If c = 0 Then
                        If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter78 = 1
                        End If
                    End If
                Next
                If counter78 = 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    txt_Acq_ItemPrice.Focus()
                    Exit Sub
                End If
            Else
                ITEM_PRICE = Nothing
            End If

            'Server Validation for CONVERSION_RATE
            Dim CONVERSION_RATE As Object = Nothing
            If txt_Acq_ConversionRate.Text <> "" Then
                CONVERSION_RATE = TrimX(txt_Acq_ConversionRate.Text)
                CONVERSION_RATE = RemoveQuotes(CONVERSION_RATE)
                If CONVERSION_RATE.ToString.Length > 15 Then
                    Label6.Text = "Plz Enter Data with Proper Length!"
                    Label15.Text = ""
                    txt_Acq_ConversionRate.Focus()
                    Exit Sub
                End If
                CONVERSION_RATE = " " & CONVERSION_RATE & " "
                If InStr(1, CONVERSION_RATE, "CREATE", 1) > 0 Or InStr(1, CONVERSION_RATE, "DELETE", 1) > 0 Or InStr(1, CONVERSION_RATE, "DROP", 1) > 0 Or InStr(1, CONVERSION_RATE, "INSERT", 1) > 1 Or InStr(1, CONVERSION_RATE, "TRACK", 1) > 1 Or InStr(1, CONVERSION_RATE, "TRACE", 1) > 1 Then
                    Label6.Text = "Do Not Use Reserve Words!"
                    Label15.Text = ""
                    txt_Acq_ConversionRate.Focus()
                    Exit Sub
                End If
                CONVERSION_RATE = TrimX(CONVERSION_RATE)
                c = 0
                counter79 = 0
                For iloop = 1 To Len(CONVERSION_RATE.ToString)
                    strcurrentchar = Mid(CONVERSION_RATE, iloop, 1)
                    If c = 0 Then
                        If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter79 = 1
                        End If
                    End If
                Next
                If counter79 = 1 Then
                    Label6.Text = "Do Not Use Un-Wanted Characters!"
                    Label15.Text = ""
                    txt_Acq_ConversionRate.Focus()
                    Exit Sub
                End If
            Else
                CONVERSION_RATE = 0
            End If

            'Server Validation for ITEM_RUPEES
            Dim ITEM_RUPEES As Object = Nothing
            If txt_Acq_ItemRupees.Text <> "" Then
                ITEM_RUPEES = TrimX(txt_Acq_ItemRupees.Text)
                ITEM_RUPEES = RemoveQuotes(ITEM_RUPEES)
                If ITEM_RUPEES.ToString.Length > 15 Then
                    Label6.Text = "Plz Enter Data with Proper Length!"
                    Label15.Text = ""
                    txt_Acq_ItemRupees.Focus()
                    Exit Sub
                End If
                ITEM_RUPEES = " " & ITEM_RUPEES & " "
                If InStr(1, ITEM_RUPEES, "CREATE", 1) > 0 Or InStr(1, ITEM_RUPEES, "DELETE", 1) > 0 Or InStr(1, ITEM_RUPEES, "DROP", 1) > 0 Or InStr(1, ITEM_RUPEES, "INSERT", 1) > 1 Or InStr(1, ITEM_RUPEES, "TRACK", 1) > 1 Or InStr(1, ITEM_RUPEES, "TRACE", 1) > 1 Then
                    Label6.Text = "Do Not Use Reserve Words!"
                    Label15.Text = ""
                    txt_Acq_ItemRupees.Focus()
                    Exit Sub
                End If
                ITEM_RUPEES = TrimX(ITEM_RUPEES)
                c = 0
                counter80 = 0
                For iloop = 1 To Len(ITEM_RUPEES)
                    strcurrentchar = Mid(ITEM_RUPEES, iloop, 1)
                    If c = 0 Then
                        If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter80 = 1
                        End If
                    End If
                Next
                If counter80 = 1 Then
                    Label6.Text = "Do Not Use Un-Wanted Characters!"
                    Label15.Text = ""
                    txt_Acq_ItemRupees.Focus()
                    Exit Sub
                End If
            Else
                ITEM_RUPEES = 0
            End If

            If CUR_CODE = "INR" Then
                ITEM_RUPEES = ITEM_PRICE
            End If

            'Server Validation for OTHER_CHARGES
            Dim OTHER_CHARGES As Object = Nothing
            If txt_Acq_OtherCharges.Text <> "" Then
                OTHER_CHARGES = TrimX(txt_Acq_OtherCharges.Text)
                OTHER_CHARGES = RemoveQuotes(OTHER_CHARGES)
                If OTHER_CHARGES.ToString.Length > 15 Then
                    Label6.Text = "Plz Enter Data with Proper Length!"
                    Label15.Text = ""
                    txt_Acq_OtherCharges.Focus()
                    Exit Sub
                End If
                OTHER_CHARGES = " " & OTHER_CHARGES & " "
                If InStr(1, OTHER_CHARGES, "CREATE", 1) > 0 Or InStr(1, OTHER_CHARGES, "DELETE", 1) > 0 Or InStr(1, OTHER_CHARGES, "DROP", 1) > 0 Or InStr(1, OTHER_CHARGES, "INSERT", 1) > 1 Or InStr(1, OTHER_CHARGES, "TRACK", 1) > 1 Or InStr(1, OTHER_CHARGES, "TRACE", 1) > 1 Then
                    Label6.Text = "Do Not Use Reserve Words!"
                    Label15.Text = ""
                    txt_Acq_OtherCharges.Focus()
                    Exit Sub
                End If
                OTHER_CHARGES = TrimX(OTHER_CHARGES)
                c = 0
                counter81 = 0
                For iloop = 1 To Len(OTHER_CHARGES.ToString)
                    strcurrentchar = Mid(OTHER_CHARGES, iloop, 1)
                    If c = 0 Then
                        If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter81 = 1
                        End If
                    End If
                Next
                If counter81 = 1 Then
                    Label6.Text = "Do Not Use Un-Wanted Characters!"
                    Label15.Text = ""
                    txt_Acq_OtherCharges.Focus()
                    Exit Sub
                End If
            Else
                OTHER_CHARGES = 0
            End If

            'Server Validation for VENDOR
            Dim VEND_ID As Integer = Nothing
            If DDL_Vendors.Text <> "" Then
                VEND_ID = DDL_Vendors.SelectedValue
                VEND_ID = RemoveQuotes(VEND_ID)

                If IsNumeric(VEND_ID) = False Then
                    Label6.Text = "Plz Select Vendor from Drop-Down!"
                    Label15.Text = ""
                    DDL_Vendors.Focus()
                    Exit Sub
                End If
                If VEND_ID.ToString.Length > 5 Then
                    Label6.Text = "Plz Enter Data with Proper Length!"
                    Label15.Text = ""
                    DDL_Vendors.Focus()
                    Exit Sub
                End If
                VEND_ID = " " & VEND_ID & " "
                If InStr(1, VEND_ID, "CREATE", 1) > 0 Or InStr(1, VEND_ID, "DELETE", 1) > 0 Or InStr(1, VEND_ID, "DROP", 1) > 0 Or InStr(1, VEND_ID, "INSERT", 1) > 1 Or InStr(1, VEND_ID, "TRACK", 1) > 1 Or InStr(1, VEND_ID, "TRACE", 1) > 1 Then
                    Label6.Text = "Do Not Use Reserve Words!"
                    Label15.Text = ""
                    DDL_Vendors.Focus()
                    Exit Sub
                End If
                VEND_ID = TrimX(VEND_ID)

                c = 0
                counter82 = 0
                For iloop = 1 To Len(VEND_ID.ToString)
                    strcurrentchar = Mid(VEND_ID, iloop, 1)
                    If c = 0 Then
                        If Not InStr("'~!@#$^&*=+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter82 = 1
                        End If
                    End If
                Next
                If counter82 = 1 Then
                    Label6.Text = "Do Not Use Un-Wanted Characters!"
                    Label15.Text = ""
                    DDL_Vendors.Focus()
                    Exit Sub
                End If
            Else
                VEND_ID = 0
            End If

            'validation for VOL_NO
            Dim VOL_NO As Object = Nothing
            If TR_VOL_NO.Visible = True Then
                VOL_NO = Trim(txt_Hold_VolNo.Text)
                If Not String.IsNullOrEmpty(VOL_NO) Then
                    VOL_NO = RemoveQuotes(VOL_NO)
                    If VOL_NO.Length > 30 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_VolNo.Focus()
                        Exit Sub
                    End If

                    VOL_NO = " " & VOL_NO & " "
                    If InStr(1, VOL_NO, "CREATE", 1) > 0 Or InStr(1, VOL_NO, "DELETE", 1) > 0 Or InStr(1, VOL_NO, "DROP", 1) > 0 Or InStr(1, VOL_NO, "INSERT", 1) > 1 Or InStr(1, VOL_NO, "TRACK", 1) > 1 Or InStr(1, VOL_NO, "TRACE", 1) > 1 Then
                        txt_Hold_VolNo.Focus()
                        Exit Sub
                    End If
                    VOL_NO = TrimAll(VOL_NO)
                    'check unwanted characters
                    c = 0
                    counter91 = 0
                    For iloop = 1 To Len(VOL_NO)
                        strcurrentchar = Mid(VOL_NO, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter91 = 1
                            End If
                        End If
                    Next
                    If counter91 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        txt_Hold_VolNo.Focus()
                        Exit Sub
                    End If
                Else
                    VOL_NO = ""
                End If
            Else
                VOL_NO = ""
            End If

            Dim USER_CODE As Object = Nothing
            USER_CODE = Session.Item("LoggedUser")

            Dim DATE_ADDED As Object = Nothing
            DATE_ADDED = Now.Date
            DATE_ADDED = Convert.ToDateTime(DATE_ADDED, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

            Dim IP As Object = Nothing
            IP = Request.UserHostAddress.Trim


            'HOLDING DATA **************************************************
            '*************************************************************************************************************************
            'GET HOLDINGS VARIABLE
            'txt_Hold_AccSereis

            Dim ACCESSION_SERIES As Object = Nothing
            If txt_Hold_AccSereis.Text <> "" Then
                ACCESSION_SERIES = TrimX(UCase(txt_Hold_AccSereis.Text))
                ACCESSION_SERIES = RemoveQuotes(ACCESSION_SERIES)
                If ACCESSION_SERIES.Length > 10 Then 'maximum length
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    txt_Hold_AccSereis.Focus()
                    Exit Sub
                End If

                ACCESSION_SERIES = " " & ACCESSION_SERIES & " "
                If InStr(1, ACCESSION_SERIES, "CREATE", 1) > 0 Or InStr(1, ACCESSION_SERIES, "DELETE", 1) > 0 Or InStr(1, ACCESSION_SERIES, "DROP", 1) > 0 Or InStr(1, ACCESSION_SERIES, "INSERT", 1) > 1 Or InStr(1, ACCESSION_SERIES, "TRACK", 1) > 1 Or InStr(1, ACCESSION_SERIES, "TRACE", 1) > 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    Me.txt_Hold_AccSereis.Focus()
                    Exit Sub
                End If
                ACCESSION_SERIES = TrimX(ACCESSION_SERIES)
                'check unwanted characters
                c = 0
                counter85 = 0
                For iloop = 1 To Len(ACCESSION_SERIES.ToString)
                    strcurrentchar = Mid(ACCESSION_SERIES, iloop, 1)
                    If c = 0 Then
                        If Not InStr("'~!@#$^*+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter85 = 1
                        End If
                    End If
                Next
                If counter85 = 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    Me.txt_Hold_AccSereis.Focus()
                    Exit Sub
                End If
            Else
                ACCESSION_SERIES = ""
            End If

            'Server Validation for accession no
            Dim ACCESSION_NO As Object = Nothing
            If txt_Hold_AccNo.Text <> "" Then
                ACCESSION_NO = TrimX(UCase(txt_Hold_AccNo.Text))
                ACCESSION_NO = RemoveQuotes(ACCESSION_NO)
                If ACCESSION_NO.Length > 30 Then 'maximum length
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    txt_Hold_AccNo.Focus()
                    Exit Sub
                End If

                ACCESSION_NO = " " & ACCESSION_NO & " "
                If InStr(1, ACCESSION_NO, "CREATE", 1) > 0 Or InStr(1, ACCESSION_NO, "DELETE", 1) > 0 Or InStr(1, ACCESSION_NO, "DROP", 1) > 0 Or InStr(1, ACCESSION_NO, "INSERT", 1) > 1 Or InStr(1, ACCESSION_NO, "TRACK", 1) > 1 Or InStr(1, ACCESSION_NO, "TRACE", 1) > 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    Me.txt_Hold_AccNo.Focus()
                    Exit Sub
                End If
                ACCESSION_NO = TrimX(ACCESSION_NO)
                'check unwanted characters
                c = 0
                counter86 = 0
                For iloop = 1 To Len(ACCESSION_NO.ToString)
                    strcurrentchar = Mid(ACCESSION_NO, iloop, 1)
                    If c = 0 Then
                        If Not InStr("'~!@#$^*+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter86 = 1
                        End If
                    End If
                Next
                If counter86 = 1 Then
                    Label6.Text = "Error: Input is not Valid !"
                    Label15.Text = ""
                    Me.txt_Hold_AccNo.Focus()
                    Exit Sub
                End If

                'add sereis with acc no
                If ACCESSION_SERIES <> "" Then
                    ACCESSION_NO = ACCESSION_SERIES + ACCESSION_NO
                End If
            Else
                Label6.Text = "Error: Input is Required !"
                Label15.Text = ""
                Me.txt_Hold_AccNo.Focus()
                Exit Sub
            End If

            'search accession date
            Dim ACCESSION_DATE As Object = Nothing
            If txt_Hold_AccDate.Text <> "" Then
                ACCESSION_DATE = TrimX(txt_Hold_AccDate.Text)
                ACCESSION_DATE = RemoveQuotes(ACCESSION_DATE)
                ACCESSION_DATE = Convert.ToDateTime(ACCESSION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                If Len(ACCESSION_DATE) > 12 Then
                    Label6.Text = " Input is not Valid..."
                    Label15.Text = ""
                    Me.txt_Hold_AccDate.Focus()
                    Exit Sub
                End If
                ACCESSION_DATE = " " & ACCESSION_DATE & " "
                If InStr(1, ACCESSION_DATE, "CREATE", 1) > 0 Or InStr(1, ACCESSION_DATE, "DELETE", 1) > 0 Or InStr(1, ACCESSION_DATE, "DROP", 1) > 0 Or InStr(1, ACCESSION_DATE, "INSERT", 1) > 1 Or InStr(1, ACCESSION_DATE, "TRACK", 1) > 1 Or InStr(1, ACCESSION_DATE, "TRACE", 1) > 1 Then
                    Label6.Text = "  Input is not Valid... "
                    Label15.Text = ""
                    Me.txt_Hold_AccDate.Focus()
                    Exit Sub
                End If
                ACCESSION_DATE = TrimX(ACCESSION_DATE)
                'check unwanted characters
                c = 0
                counter87 = 0
                For iloop = 1 To Len(ACCESSION_DATE)
                    strcurrentchar = Mid(ACCESSION_DATE, iloop, 1)
                    If c = 0 Then
                        If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter87 = 1
                        End If
                    End If
                Next
                If counter87 = 1 Then
                    Label6.Text = "data is not Valid... "
                    Label15.Text = ""
                    Me.txt_Hold_AccDate.Focus()
                    Exit Sub
                End If
            Else
                ACCESSION_DATE = Now.Date
                ACCESSION_DATE = Convert.ToDateTime(ACCESSION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us
            End If

            'validation for Format
            Dim FORMAT_CODE As Object = Nothing
            If TR_FORMAT_CODE.Visible = True Then
                FORMAT_CODE = DDL_Format.SelectedValue
                If Not String.IsNullOrEmpty(FORMAT_CODE) Then
                    FORMAT_CODE = RemoveQuotes(FORMAT_CODE)
                    If FORMAT_CODE.Length > 3 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        DDL_Format.Focus()
                        Exit Sub
                    End If

                    FORMAT_CODE = " " & FORMAT_CODE & " "
                    If InStr(1, FORMAT_CODE, "CREATE", 1) > 0 Or InStr(1, FORMAT_CODE, "DELETE", 1) > 0 Or InStr(1, FORMAT_CODE, "DROP", 1) > 0 Or InStr(1, FORMAT_CODE, "INSERT", 1) > 1 Or InStr(1, FORMAT_CODE, "TRACK", 1) > 1 Or InStr(1, FORMAT_CODE, "TRACE", 1) > 1 Then
                        ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                        DDL_Format.Focus()
                        Exit Sub
                    End If
                    FORMAT_CODE = TrimX(FORMAT_CODE)
                    'check unwanted characters
                    c = 0
                    counter88 = 0
                    For iloop = 1 To Len(FORMAT_CODE)
                        strcurrentchar = Mid(FORMAT_CODE, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter88 = 1
                            End If
                        End If
                    Next
                    If counter88 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        DDL_Format.Focus()
                        Exit Sub
                    End If
                Else
                    FORMAT_CODE = "PT"
                End If
            Else
                FORMAT_CODE = "PT"
            End If

            'validation for SHOW
            Dim SHOW As Object = Nothing
            SHOW = DDL_Show.SelectedValue
            If Not String.IsNullOrEmpty(SHOW) Then
                SHOW = RemoveQuotes(SHOW)
                If SHOW.Length > 2 Then 'maximum length
                    Label6.Text = " Data must be of Proper Length.. "
                    Label15.Text = ""
                    DDL_Show.Focus()
                    Exit Sub
                End If

                SHOW = " " & SHOW & " "
                If InStr(1, SHOW, "CREATE", 1) > 0 Or InStr(1, SHOW, "DELETE", 1) > 0 Or InStr(1, SHOW, "DROP", 1) > 0 Or InStr(1, SHOW, "INSERT", 1) > 1 Or InStr(1, SHOW, "TRACK", 1) > 1 Or InStr(1, SHOW, "TRACE", 1) > 1 Then
                    DDL_Show.Focus()
                    Exit Sub
                End If
                SHOW = TrimX(SHOW)
                'check unwanted characters
                c = 0
                counter89 = 0
                For iloop = 1 To Len(SHOW)
                    strcurrentchar = Mid(SHOW, iloop, 1)
                    If c = 0 Then
                        If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter89 = 1
                        End If
                    End If
                Next
                If counter89 = 1 Then
                    Label6.Text = " Input  is not Valid!"
                    Label15.Text = ""
                    DDL_Show.Focus()
                    Exit Sub
                End If
            Else
                SHOW = "Y"
            End If

            'validation for ISSUABLE
            Dim ISSUABLE As Object = Nothing
            ISSUABLE = DDL_Issuable.SelectedValue
            If Not String.IsNullOrEmpty(ISSUABLE) Then
                ISSUABLE = RemoveQuotes(ISSUABLE)
                If ISSUABLE.Length > 2 Then 'maximum length
                    Label6.Text = " Data must be of Proper Length.. "
                    Label15.Text = ""
                    DDL_Issuable.Focus()
                    Exit Sub
                End If

                ISSUABLE = " " & ISSUABLE & " "
                If InStr(1, ISSUABLE, "CREATE", 1) > 0 Or InStr(1, ISSUABLE, "DELETE", 1) > 0 Or InStr(1, ISSUABLE, "DROP", 1) > 0 Or InStr(1, ISSUABLE, "INSERT", 1) > 1 Or InStr(1, ISSUABLE, "TRACK", 1) > 1 Or InStr(1, ISSUABLE, "TRACE", 1) > 1 Then
                    DDL_Issuable.Focus()
                    Exit Sub
                End If
                ISSUABLE = TrimX(ISSUABLE)
                'check unwanted characters
                c = 0
                counter90 = 0
                For iloop = 1 To Len(ISSUABLE)
                    strcurrentchar = Mid(ISSUABLE, iloop, 1)
                    If c = 0 Then
                        If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter90 = 1
                        End If
                    End If
                Next
                If counter90 = 1 Then
                    Label6.Text = " Input  is not Valid!"
                    Label15.Text = ""
                    DDL_Issuable.Focus()
                    Exit Sub
                End If
            Else
                ISSUABLE = "Y"
            End If

            'validation for cat_no
            Dim VOL_YEAR As Integer = Nothing
            If TR_VOL_NO.Visible = True Then
                If Me.txt_Hold_VolYear.Text <> "" Then
                    VOL_YEAR = Convert.ToInt16(TrimX(txt_Hold_VolYear.Text))
                    VOL_YEAR = RemoveQuotes(VOL_YEAR)
                    If Not IsNumeric(VOL_YEAR) = True Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Hold_VolYear.Focus()
                        Exit Sub
                    End If
                    If Len(VOL_YEAR) > 5 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Hold_VolYear.Focus()
                        Exit Sub
                    End If
                    VOL_YEAR = " " & VOL_YEAR & " "
                    If InStr(1, VOL_YEAR, "CREATE", 1) > 0 Or InStr(1, VOL_YEAR, "DELETE", 1) > 0 Or InStr(1, VOL_YEAR, "DROP", 1) > 0 Or InStr(1, VOL_YEAR, "INSERT", 1) > 1 Or InStr(1, VOL_YEAR, "TRACK", 1) > 1 Or InStr(1, VOL_YEAR, "TRACE", 1) > 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Hold_VolYear.Focus()
                        Exit Sub
                    End If
                    VOL_YEAR = TrimX(VOL_YEAR)
                    'check unwanted characters
                    c = 0
                    counter92 = 0
                    For iloop = 1 To Len(VOL_YEAR.ToString)
                        strcurrentchar = Mid(VOL_YEAR, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter92 = 1
                            End If
                        End If
                    Next
                    If counter93 = 1 Then
                        Label6.Text = "Error: Input is not Valid !"
                        Label15.Text = ""
                        txt_Hold_VolYear.Focus()
                        Exit Sub
                    End If
                Else
                    VOL_YEAR = 0
                End If
            Else
                VOL_YEAR = 0
            End If

            'validation for VOL_EDITORS
            Dim VOL_EDITORS As Object = Nothing
            If TR_VOL_EDITORS.Visible = True Then
                VOL_EDITORS = TrimAll(txt_Hold_VolEditors.Text)
                If Not String.IsNullOrEmpty(VOL_EDITORS) Then
                    VOL_EDITORS = RemoveQuotes(VOL_EDITORS)
                    If VOL_EDITORS.Length > 501 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_VolEditors.Focus()
                        Exit Sub
                    End If

                    VOL_EDITORS = " " & VOL_EDITORS & " "
                    If InStr(1, VOL_EDITORS, "CREATE", 1) > 0 Or InStr(1, VOL_EDITORS, "DELETE", 1) > 0 Or InStr(1, VOL_EDITORS, "DROP", 1) > 0 Or InStr(1, VOL_EDITORS, "INSERT", 1) > 1 Or InStr(1, VOL_EDITORS, "TRACK", 1) > 1 Or InStr(1, VOL_EDITORS, "TRACE", 1) > 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        txt_Hold_VolEditors.Focus()
                        Exit Sub
                    End If
                    VOL_EDITORS = TrimAll(VOL_EDITORS)
                    'check unwanted characters
                    c = 0
                    counter94 = 0
                    For iloop = 1 To Len(VOL_EDITORS)
                        strcurrentchar = Mid(VOL_EDITORS, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter94 = 1
                            End If
                        End If
                    Next
                    If counter94 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        txt_Hold_VolEditors.Focus()
                        Exit Sub
                    End If
                Else
                    VOL_EDITORS = ""
                End If
            Else
                VOL_EDITORS = ""
            End If

            'validation for VOL_TITLE
            Dim VOL_TITLE As Object = Nothing
            If TR_VOL_TITLE.Visible = True Then
                VOL_TITLE = TrimAll(txt_Hold_VolTitle.Text)
                If Not String.IsNullOrEmpty(VOL_TITLE) Then
                    VOL_TITLE = RemoveQuotes(VOL_TITLE)
                    If VOL_TITLE.Length > 501 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_VolTitle.Focus()
                        Exit Sub
                    End If

                    VOL_TITLE = " " & VOL_TITLE & " "
                    If InStr(1, VOL_TITLE, "CREATE", 1) > 0 Or InStr(1, VOL_TITLE, "DELETE", 1) > 0 Or InStr(1, VOL_TITLE, "DROP", 1) > 0 Or InStr(1, VOL_TITLE, "INSERT", 1) > 1 Or InStr(1, VOL_TITLE, "TRACK", 1) > 1 Or InStr(1, VOL_TITLE, "TRACE", 1) > 1 Then
                        txt_Hold_VolTitle.Focus()
                        Exit Sub
                    End If
                    VOL_TITLE = TrimAll(VOL_TITLE)
                    'check unwanted characters
                    c = 0
                    counter95 = 0
                    For iloop = 1 To Len(VOL_TITLE)
                        strcurrentchar = Mid(VOL_TITLE, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter95 = 1
                            End If
                        End If
                    Next
                    If counter95 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        txt_Hold_VolTitle.Focus()
                        Exit Sub
                    End If
                Else
                    VOL_TITLE = ""
                End If
            Else
                VOL_TITLE = ""
            End If

            'validation for VOL_ISBN
            Dim COPY_ISBN As Object = Nothing
            If TR_VOL_NO.Visible = True Then
                COPY_ISBN = TrimX(txt_Hold_CopyISBN.Text)
                If Not String.IsNullOrEmpty(COPY_ISBN) Then
                    COPY_ISBN = RemoveQuotes(COPY_ISBN)
                    If COPY_ISBN.Length > 30 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_CopyISBN.Focus()
                        Exit Sub
                    End If

                    COPY_ISBN = " " & COPY_ISBN & " "
                    If InStr(1, COPY_ISBN, "CREATE", 1) > 0 Or InStr(1, COPY_ISBN, "DELETE", 1) > 0 Or InStr(1, COPY_ISBN, "DROP", 1) > 0 Or InStr(1, COPY_ISBN, "INSERT", 1) > 1 Or InStr(1, COPY_ISBN, "TRACK", 1) > 1 Or InStr(1, COPY_ISBN, "TRACE", 1) > 1 Then
                        ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                        Label6.Text = "Do not use reserved Words!"
                        Label15.Text = ""
                        txt_Hold_CopyISBN.Focus()
                        Exit Sub
                    End If
                    COPY_ISBN = TrimX(COPY_ISBN)
                    'check unwanted characters
                    c = 0
                    counter96 = 0
                    For iloop = 1 To Len(COPY_ISBN)
                        strcurrentchar = Mid(COPY_ISBN, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter96 = 1
                            End If
                        End If
                    Next
                    If counter96 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        txt_Hold_CopyISBN.Focus()
                        Exit Sub
                    End If
                Else
                    COPY_ISBN = ""
                End If
            Else
                COPY_ISBN = ""
            End If

            'validation for CLASS NO
            Dim CLASS_NO As Object = Nothing
            If TR_CLASS_NO.Visible = True Then
                CLASS_NO = TrimX(txt_Hold_ClassNo.Text)
                If Not String.IsNullOrEmpty(CLASS_NO) Then
                    CLASS_NO = RemoveQuotes(CLASS_NO)
                    If CLASS_NO.Length > 150 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_ClassNo.Focus()
                        Exit Sub
                    End If

                    CLASS_NO = " " & CLASS_NO & " "
                    If InStr(1, CLASS_NO, "CREATE", 1) > 0 Or InStr(1, CLASS_NO, "DELETE", 1) > 0 Or InStr(1, CLASS_NO, "DROP", 1) > 0 Or InStr(1, CLASS_NO, "INSERT", 1) > 1 Or InStr(1, CLASS_NO, "TRACK", 1) > 1 Or InStr(1, CLASS_NO, "TRACE", 1) > 1 Then
                        Label6.Text = "Do not use reserved Words!"
                        Label15.Text = ""
                        txt_Hold_ClassNo.Focus()
                        Exit Sub
                    End If
                    CLASS_NO = TrimX(CLASS_NO)
                    'check unwanted characters
                    c = 0
                    counter97 = 0
                    For iloop = 1 To Len(CLASS_NO)
                        strcurrentchar = Mid(CLASS_NO, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter97 = 1
                            End If
                        End If
                    Next
                    If counter97 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        txt_Hold_ClassNo.Focus()
                        Exit Sub
                    End If
                Else
                    CLASS_NO = ""
                End If
            Else
                CLASS_NO = ""
            End If

            'validation for CLASS NO
            Dim BOOK_NO As Object = Nothing
            If TR_CLASS_NO.Visible = True Then
                BOOK_NO = TrimAll(UCase(txt_Hold_BookNo.Text))
                If Not String.IsNullOrEmpty(BOOK_NO) Then
                    BOOK_NO = RemoveQuotes(BOOK_NO)
                    If BOOK_NO.Length > 50 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_BookNo.Focus()
                        Exit Sub
                    End If

                    BOOK_NO = " " & BOOK_NO & " "
                    If InStr(1, BOOK_NO, "CREATE", 1) > 0 Or InStr(1, BOOK_NO, "DELETE", 1) > 0 Or InStr(1, BOOK_NO, "DROP", 1) > 0 Or InStr(1, BOOK_NO, "INSERT", 1) > 1 Or InStr(1, BOOK_NO, "TRACK", 1) > 1 Or InStr(1, BOOK_NO, "TRACE", 1) > 1 Then
                        Label6.Text = "Do not use reserved Words!"
                        Label15.Text = ""
                        txt_Hold_BookNo.Focus()
                        Exit Sub
                    End If
                    BOOK_NO = TrimAll(BOOK_NO)
                    'check unwanted characters
                    c = 0
                    counter98 = 0
                    For iloop = 1 To Len(BOOK_NO)
                        strcurrentchar = Mid(BOOK_NO, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter98 = 1
                            End If
                        End If
                    Next
                    If counter98 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        txt_Hold_BookNo.Focus()
                        Exit Sub
                    End If
                Else
                    BOOK_NO = ""
                End If
            Else
                BOOK_NO = ""
            End If

            'validation for PAGES
            Dim PAGINATION As Object = Nothing
            If TR_PAGINATION.Visible = True Then
                PAGINATION = TrimAll(txt_Hold_Pages.Text)
                If Not String.IsNullOrEmpty(PAGINATION) Then
                    PAGINATION = RemoveQuotes(PAGINATION)
                    If CLASS_NO.Length > 50 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_Pages.Focus()
                        Exit Sub
                    End If

                    PAGINATION = " " & PAGINATION & " "
                    If InStr(1, PAGINATION, "CREATE", 1) > 0 Or InStr(1, PAGINATION, "DELETE", 1) > 0 Or InStr(1, PAGINATION, "DROP", 1) > 0 Or InStr(1, PAGINATION, "INSERT", 1) > 1 Or InStr(1, PAGINATION, "TRACK", 1) > 1 Or InStr(1, PAGINATION, "TRACE", 1) > 1 Then
                        Label6.Text = "Do not use reserved Words!"
                        Label15.Text = ""
                        txt_Hold_Pages.Focus()
                        Exit Sub
                    End If
                    PAGINATION = TrimAll(PAGINATION)
                    'check unwanted characters
                    c = 0
                    counter99 = 0
                    For iloop = 1 To Len(PAGINATION)
                        strcurrentchar = Mid(PAGINATION, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter99 = 1
                            End If
                        End If
                    Next
                    If counter99 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        txt_Hold_Pages.Focus()
                        Exit Sub
                    End If
                    If InStr(PAGINATION, "p.") = 0 Then
                        PAGINATION = PAGINATION + "p."
                    End If
                    If InStr(PAGINATION, "..") <> 0 Then
                        PAGINATION = PAGINATION + "."
                    End If
                    If InStr(PAGINATION, "pp.") <> 0 Then
                        PAGINATION = PAGINATION + "p."
                    End If
                    If InStr(PAGINATION, "p.p.") <> 0 Then
                        PAGINATION = PAGINATION + "p."
                    End If
                Else
                    PAGINATION = ""
                End If
            Else
                PAGINATION = ""
            End If

            'validation for SIZE
            Dim SIZE As Object = Nothing
            If TR_SIZE.Visible = True Then
                SIZE = TrimAll(txt_Hold_Size.Text)
                If Not String.IsNullOrEmpty(SIZE) Then
                    SIZE = RemoveQuotes(SIZE)
                    If SIZE.Length > 50 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_Size.Focus()
                        Exit Sub
                    End If

                    SIZE = " " & SIZE & " "
                    If InStr(1, SIZE, "CREATE", 1) > 0 Or InStr(1, SIZE, "DELETE", 1) > 0 Or InStr(1, SIZE, "DROP", 1) > 0 Or InStr(1, SIZE, "INSERT", 1) > 1 Or InStr(1, SIZE, "TRACK", 1) > 1 Or InStr(1, SIZE, "TRACE", 1) > 1 Then
                        Label6.Text = "Do not use reserved Words!"
                        Label15.Text = ""
                        txt_Hold_Size.Focus()
                        Exit Sub
                    End If
                    SIZE = TrimAll(SIZE)
                    'check unwanted characters
                    c = 0
                    counter100 = 0
                    For iloop = 1 To Len(SIZE)
                        strcurrentchar = Mid(SIZE, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter100 = 1
                            End If
                        End If
                    Next
                    If counter100 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        txt_Hold_Size.Focus()
                        Exit Sub
                    End If
                Else
                    SIZE = ""
                End If
            Else
                SIZE = ""
            End If

            Dim ILLUSTRATION As Object = Nothing
            If TR_ILLUSTRATION.Visible = True Then
                If CB_Illus.Checked = True Then
                    ILLUSTRATION = "Y"
                Else
                    ILLUSTRATION = "N"
                End If
            Else
                ILLUSTRATION = "N"
            End If

            'validation for COLLECTION TYPE
            Dim COLLECTION_TYPE As Object = Nothing
            If TR_COLLECTION_TYPE.Visible = True Then
                COLLECTION_TYPE = DDL_CollectionType.SelectedValue
                If Not String.IsNullOrEmpty(COLLECTION_TYPE) Then
                    COLLECTION_TYPE = RemoveQuotes(COLLECTION_TYPE)
                    If COLLECTION_TYPE.Length > 2 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        DDL_CollectionType.Focus()
                        Exit Sub
                    End If

                    COLLECTION_TYPE = " " & COLLECTION_TYPE & " "
                    If InStr(1, COLLECTION_TYPE, "CREATE", 1) > 0 Or InStr(1, COLLECTION_TYPE, "DELETE", 1) > 0 Or InStr(1, COLLECTION_TYPE, "DROP", 1) > 0 Or InStr(1, COLLECTION_TYPE, "INSERT", 1) > 1 Or InStr(1, COLLECTION_TYPE, "TRACK", 1) > 1 Or InStr(1, COLLECTION_TYPE, "TRACE", 1) > 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label1.Text = ""
                        DDL_CollectionType.Focus()
                        Exit Sub
                    End If
                    COLLECTION_TYPE = TrimX(COLLECTION_TYPE)
                    'check unwanted characters
                    c = 0
                    counter101 = 0
                    For iloop = 1 To Len(COLLECTION_TYPE)
                        strcurrentchar = Mid(COLLECTION_TYPE, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter101 = 1
                            End If
                        End If
                    Next
                    If counter101 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        DDL_CollectionType.Focus()
                        Exit Sub
                    End If
                Else
                    COLLECTION_TYPE = "C"
                End If
            Else
                COLLECTION_TYPE = "C"
            End If

            'validation for STATUS
            Dim STA_CODE As Object = Nothing
            If TR_STA_CODE.Visible = True Then
                If DDL_Status.Text <> "" Then
                    STA_CODE = DDL_Status.SelectedValue
                    If STA_CODE = "2" Then
                        STA_CODE = "1"
                    End If
                Else
                    STA_CODE = "1"
                End If
            Else
                STA_CODE = "1"
            End If

            'validation for BINDING TYPE
            Dim BIND_CODE As Object = Nothing
            If TR_BIND_CODE.Visible = True Then
                BIND_CODE = DDL_Binding.SelectedValue
                If Not String.IsNullOrEmpty(BIND_CODE) Then
                    BIND_CODE = RemoveQuotes(BIND_CODE)
                    If BIND_CODE.Length > 11 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        DDL_Binding.Focus()
                        Exit Sub
                    End If

                    BIND_CODE = " " & BIND_CODE & " "
                    If InStr(1, BIND_CODE, "CREATE", 1) > 0 Or InStr(1, BIND_CODE, "DELETE", 1) > 0 Or InStr(1, BIND_CODE, "DROP", 1) > 0 Or InStr(1, BIND_CODE, "INSERT", 1) > 1 Or InStr(1, BIND_CODE, "TRACK", 1) > 1 Or InStr(1, BIND_CODE, "TRACE", 1) > 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        DDL_Binding.Focus()
                        Exit Sub
                    End If
                    BIND_CODE = TrimX(BIND_CODE)
                    'check unwanted characters
                    c = 0
                    counter102 = 0
                    For iloop = 1 To Len(BIND_CODE)
                        strcurrentchar = Mid(BIND_CODE, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter102 = 1
                            End If
                        End If
                    Next
                    If counter102 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        DDL_Binding.Focus()
                        Exit Sub
                    End If
                Else
                    BIND_CODE = "U"
                End If
            Else
                BIND_CODE = "U"
            End If

            'validation for SECTION
            Dim SEC_CODE As Object = Nothing
            If TR_SEC_CODE.Visible = True Then
                SEC_CODE = DDL_Section.SelectedValue
                If Not String.IsNullOrEmpty(SEC_CODE) Then
                    SEC_CODE = RemoveQuotes(SEC_CODE)
                    If SEC_CODE.Length > 11 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        DDL_Section.Focus()
                        Exit Sub
                    End If

                    SEC_CODE = " " & SEC_CODE & " "
                    If InStr(1, SEC_CODE, "CREATE", 1) > 0 Or InStr(1, SEC_CODE, "DELETE", 1) > 0 Or InStr(1, SEC_CODE, "DROP", 1) > 0 Or InStr(1, SEC_CODE, "INSERT", 1) > 1 Or InStr(1, SEC_CODE, "TRACK", 1) > 1 Or InStr(1, SEC_CODE, "TRACE", 1) > 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        DDL_Section.Focus()
                        Exit Sub
                    End If
                    SEC_CODE = TrimX(SEC_CODE)
                    'check unwanted characters
                    c = 0
                    counter103 = 0
                    For iloop = 1 To Len(SEC_CODE)
                        strcurrentchar = Mid(SEC_CODE, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter103 = 1
                            End If
                        End If
                    Next
                    If counter103 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        DDL_Section.Focus()
                        Exit Sub
                    End If
                Else
                    SEC_CODE = ""
                End If
            Else
                SEC_CODE = ""
            End If

            'validation for holding Library
            Dim HOLD_LIB_CODE As Object = Nothing
            HOLD_LIB_CODE = DDL_Library.SelectedValue
            If Not String.IsNullOrEmpty(HOLD_LIB_CODE) Then
                HOLD_LIB_CODE = RemoveQuotes(HOLD_LIB_CODE)
                If HOLD_LIB_CODE.Length > 11 Then 'maximum length
                    Label6.Text = " Data must be of Proper Length.. "
                    Label15.Text = ""
                    DDL_Library.Focus()
                    Exit Sub
                End If

                HOLD_LIB_CODE = " " & HOLD_LIB_CODE & " "
                If InStr(1, HOLD_LIB_CODE, "CREATE", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "DELETE", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "DROP", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "INSERT", 1) > 1 Or InStr(1, HOLD_LIB_CODE, "TRACK", 1) > 1 Or InStr(1, HOLD_LIB_CODE, "TRACE", 1) > 1 Then
                    Label6.Text = " Input  is not Valid!"
                    Label15.Text = ""
                    DDL_Library.Focus()
                    Exit Sub
                End If
                HOLD_LIB_CODE = TrimX(HOLD_LIB_CODE)
                'check unwanted characters
                c = 0
                counter104 = 0
                For iloop = 1 To Len(HOLD_LIB_CODE)
                    strcurrentchar = Mid(HOLD_LIB_CODE, iloop, 1)
                    If c = 0 Then
                        If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                            c = c + 1
                            counter104 = 1
                        End If
                    End If
                Next
                If counter104 = 1 Then
                    Label6.Text = " Input  is not Valid!"
                    Label15.Text = ""
                    DDL_Library.Focus()
                    Exit Sub
                End If
            Else
                HOLD_LIB_CODE = LibCode
            End If

            'validation for accompanying materials
            Dim ACC_MAT_CODE As Object = Nothing
            If TR_ACC_MAT_CODE.Visible = True Then
                ACC_MAT_CODE = DDL_AccMaterials.SelectedValue
                If Not String.IsNullOrEmpty(ACC_MAT_CODE) Then
                    ACC_MAT_CODE = RemoveQuotes(ACC_MAT_CODE)
                    If ACC_MAT_CODE.Length > 11 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label1.Text = ""
                        DDL_AccMaterials.Focus()
                        Exit Sub
                    End If

                    ACC_MAT_CODE = " " & ACC_MAT_CODE & " "
                    If InStr(1, ACC_MAT_CODE, "CREATE", 1) > 0 Or InStr(1, ACC_MAT_CODE, "DELETE", 1) > 0 Or InStr(1, ACC_MAT_CODE, "DROP", 1) > 0 Or InStr(1, ACC_MAT_CODE, "INSERT", 1) > 1 Or InStr(1, ACC_MAT_CODE, "TRACK", 1) > 1 Or InStr(1, ACC_MAT_CODE, "TRACE", 1) > 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label1.Text = ""
                        DDL_AccMaterials.Focus()
                        Exit Sub
                    End If
                    ACC_MAT_CODE = TrimX(ACC_MAT_CODE)
                    'check unwanted characters
                    c = 0
                    counter105 = 0
                    For iloop = 1 To Len(ACC_MAT_CODE)
                        strcurrentchar = Mid(ACC_MAT_CODE, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter105 = 1
                            End If
                        End If
                    Next
                    If counter105 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        DDL_AccMaterials.Focus()
                        Exit Sub
                    End If
                Else
                    ACC_MAT_CODE = ""
                End If
            Else
                ACC_MAT_CODE = ""
            End If

            'validation for REMARKS
            Dim REMARKS As Object = Nothing
            If TR_Remarks.Visible = True Then
                REMARKS = TrimAll(txt_Hold_Remarks.Text)
                If Not String.IsNullOrEmpty(REMARKS) Then
                    REMARKS = RemoveQuotes(REMARKS)
                    If REMARKS.Length > 251 Then 'maximum length
                        Label6.Text = "Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_Remarks.Focus()
                        Exit Sub
                    End If
                Else
                    REMARKS = ""
                End If
            Else
                REMARKS = ""
            End If

            'validation for Physical Location
            Dim PHYSICAL_LOCATION As Object = Nothing
            If TR_Remarks.Visible = True Then
                PHYSICAL_LOCATION = TrimAll(txt_Hold_Location.Text)
                If Not String.IsNullOrEmpty(PHYSICAL_LOCATION) Then
                    PHYSICAL_LOCATION = RemoveQuotes(PHYSICAL_LOCATION)
                    If PHYSICAL_LOCATION.Length > 50 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_Location.Focus()
                        Exit Sub
                    End If

                    PHYSICAL_LOCATION = " " & PHYSICAL_LOCATION & " "
                    If InStr(1, PHYSICAL_LOCATION, "CREATE", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "DELETE", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "DROP", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "INSERT", 1) > 1 Or InStr(1, PHYSICAL_LOCATION, "TRACK", 1) > 1 Or InStr(1, PHYSICAL_LOCATION, "TRACE", 1) > 1 Then
                        Label6.Text = "Do not use reserved Words!"
                        Label15.Text = ""
                        txt_Hold_Location.Focus()
                        Exit Sub
                    End If
                    PHYSICAL_LOCATION = TrimAll(PHYSICAL_LOCATION)
                    'check unwanted characters
                    c = 0
                    counter106 = 0
                    For iloop = 1 To Len(PHYSICAL_LOCATION)
                        strcurrentchar = Mid(PHYSICAL_LOCATION, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter106 = 1
                            End If
                        End If
                    Next
                    If counter106 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        txt_Hold_Location.Focus()
                        Exit Sub
                    End If
                Else
                    PHYSICAL_LOCATION = ""
                End If
            Else
                PHYSICAL_LOCATION = ""
            End If

            'validation for REFERENCE NO
            Dim REFERENCE_NO As Object = Nothing
            If TR_REFERENCE_NO.Visible = True Then
                REFERENCE_NO = TrimAll(txt_Hold_ReferenceNo.Text)
                If Not String.IsNullOrEmpty(REFERENCE_NO) Then
                    REFERENCE_NO = RemoveQuotes(REFERENCE_NO)
                    If REFERENCE_NO.Length > 50 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_ReferenceNo.Focus()
                        Exit Sub
                    End If

                    REFERENCE_NO = " " & REFERENCE_NO & " "
                    If InStr(1, REFERENCE_NO, "CREATE", 1) > 0 Or InStr(1, REFERENCE_NO, "DELETE", 1) > 0 Or InStr(1, REFERENCE_NO, "DROP", 1) > 0 Or InStr(1, REFERENCE_NO, "INSERT", 1) > 1 Or InStr(1, REFERENCE_NO, "TRACK", 1) > 1 Or InStr(1, REFERENCE_NO, "TRACE", 1) > 1 Then
                        Label6.Text = "Do not use reserved Words!"
                        Label15.Text = ""
                        txt_Hold_ReferenceNo.Focus()
                        Exit Sub
                    End If
                    REFERENCE_NO = TrimAll(REFERENCE_NO)
                    'check unwanted characters
                    c = 0
                    counter107 = 0
                    For iloop = 1 To Len(REFERENCE_NO)
                        strcurrentchar = Mid(REFERENCE_NO, iloop, 1)
                        If c = 0 Then
                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                c = c + 1
                                counter107 = 1
                            End If
                        End If
                    Next
                    If counter107 = 1 Then
                        Label6.Text = " Input  is not Valid!"
                        Label15.Text = ""
                        txt_Hold_ReferenceNo.Focus()
                        Exit Sub
                    End If
                Else
                    REFERENCE_NO = ""
                End If
            Else
                REFERENCE_NO = ""
            End If

            'validation for RECODING_MEDIUM
            Dim RECORDING_MEDIUM As Object = Nothing
            If TR_MEDIUM.Visible = True Then
                RECORDING_MEDIUM = TrimAll(txt_Hold_RecordingMedium.Text)
                If Not String.IsNullOrEmpty(RECORDING_MEDIUM) Then
                    RECORDING_MEDIUM = RemoveQuotes(RECORDING_MEDIUM)
                    If RECORDING_MEDIUM.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_RecordingMedium.Focus()
                        Exit Sub
                    End If
                Else
                    RECORDING_MEDIUM = ""
                End If
            Else
                RECORDING_MEDIUM = ""
            End If

            'validation for RECODING_MEDIUM
            Dim RECORDING_CATEGORY As Object = Nothing
            If TR_RECORDING_CATEGORY.Visible = True Then
                RECORDING_CATEGORY = TrimAll(txt_Hold_RecordingCategory.Text)
                If Not String.IsNullOrEmpty(RECORDING_CATEGORY) Then
                    RECORDING_CATEGORY = RemoveQuotes(RECORDING_CATEGORY)
                    If RECORDING_CATEGORY.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_RecordingCategory.Focus()
                        Exit Sub
                    End If
                Else
                    RECORDING_CATEGORY = ""
                End If
            Else
                RECORDING_CATEGORY = ""
            End If

            'validation for RECORDING_FORM
            Dim RECORDING_FORM As Object = Nothing
            If TR_RECORDING_FORM.Visible = True Then
                RECORDING_FORM = TrimAll(txt_Hold_RecordingForm.Text)
                If Not String.IsNullOrEmpty(RECORDING_FORM) Then
                    RECORDING_FORM = RemoveQuotes(RECORDING_FORM)
                    If RECORDING_FORM.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_RecordingForm.Focus()
                        Exit Sub
                    End If
                Else
                    RECORDING_FORM = ""
                End If
            Else
                RECORDING_FORM = ""
            End If

            'validation for RECORDING_FORMAT
            Dim RECORDING_FORMAT As Object = Nothing
            If TR_RECORDING_FORMAT.Visible = True Then
                RECORDING_FORMAT = TrimAll(txt_Hold_RecordingFormat.Text)
                If Not String.IsNullOrEmpty(RECORDING_FORMAT) Then
                    RECORDING_FORMAT = RemoveQuotes(RECORDING_FORMAT)
                    If RECORDING_FORMAT.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_RecordingFormat.Focus()
                        Exit Sub
                    End If
                Else
                    RECORDING_FORMAT = ""
                End If
            Else
                RECORDING_FORMAT = ""
            End If

            'validation for RECORDING_SPEED
            Dim RECORDING_SPEED As Object = Nothing
            If TR_RECORDING_SPEED.Visible = True Then
                RECORDING_SPEED = TrimAll(txt_Hold_RecordingSpeed.Text)
                If Not String.IsNullOrEmpty(RECORDING_SPEED) Then
                    RECORDING_SPEED = RemoveQuotes(RECORDING_SPEED)
                    If RECORDING_SPEED.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_RecordingSpeed.Focus()
                        Exit Sub
                    End If
                Else
                    RECORDING_SPEED = ""
                End If
            Else
                RECORDING_SPEED = ""
            End If

            'validation for RECORDING_STORAGE_TECH
            Dim RECORDING_STORAGE_TECH As Object = Nothing
            If TR_RECORDING_STORAGE_TECH.Visible = True Then
                RECORDING_STORAGE_TECH = TrimAll(txt_Hold_RecordingStorageTech.Text)
                If Not String.IsNullOrEmpty(RECORDING_STORAGE_TECH) Then
                    RECORDING_STORAGE_TECH = RemoveQuotes(RECORDING_STORAGE_TECH)
                    If RECORDING_STORAGE_TECH.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_RecordingStorageTech.Focus()
                        Exit Sub
                    End If
                Else
                    RECORDING_STORAGE_TECH = ""
                End If
            Else
                RECORDING_STORAGE_TECH = ""
            End If

            'validation for RECORDING_PLAY_DURATION
            Dim RECORDING_PLAY_DURATION As Object = Nothing
            If TR_RECORDING_PLAY_DURATION.Visible = True Then
                RECORDING_PLAY_DURATION = TrimAll(txt_Hold_RecordingDuration.Text)
                If Not String.IsNullOrEmpty(RECORDING_PLAY_DURATION) Then
                    RECORDING_PLAY_DURATION = RemoveQuotes(RECORDING_PLAY_DURATION)
                    If RECORDING_PLAY_DURATION.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_RecordingDuration.Focus()
                        Exit Sub
                    End If
                Else
                    RECORDING_PLAY_DURATION = ""
                End If
            Else
                RECORDING_PLAY_DURATION = ""
            End If

            'validation for TYPE OF VISUALS
            Dim VIDEO_TYPEOFVISUALS As Object = Nothing
            If TR_VIDEO_TYPEOFVISUAL.Visible = True Then
                VIDEO_TYPEOFVISUALS = TrimAll(txt_Hold_TypeOfVisuals.Text)
                If Not String.IsNullOrEmpty(VIDEO_TYPEOFVISUALS) Then
                    VIDEO_TYPEOFVISUALS = RemoveQuotes(VIDEO_TYPEOFVISUALS)
                    If VIDEO_TYPEOFVISUALS.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_TypeOfVisuals.Focus()
                        Exit Sub
                    End If
                Else
                    VIDEO_TYPEOFVISUALS = ""
                End If
            Else
                VIDEO_TYPEOFVISUALS = ""
            End If

            'validation for CARTOGRAPHIC_SCALE
            Dim CARTOGRAPHIC_SCALE As Object = Nothing
            If TR_CARTOGRAPHIC_SCALE.Visible = True Then
                CARTOGRAPHIC_SCALE = TrimAll(txt_Hold_Scale.Text)
                If Not String.IsNullOrEmpty(CARTOGRAPHIC_SCALE) Then
                    CARTOGRAPHIC_SCALE = RemoveQuotes(CARTOGRAPHIC_SCALE)
                    If CARTOGRAPHIC_SCALE.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_Scale.Focus()
                        Exit Sub
                    End If
                Else
                    CARTOGRAPHIC_SCALE = ""
                End If
            Else
                CARTOGRAPHIC_SCALE = ""
            End If

            'validation for CARTOGRAPHIC_PROJECTION
            Dim CARTOGRAPHIC_PROJECTION As Object = Nothing
            If TR_CARTOGRAPHIC_PROJECTION.Visible = True Then
                CARTOGRAPHIC_PROJECTION = TrimAll(txt_Hold_Projection.Text)
                If Not String.IsNullOrEmpty(CARTOGRAPHIC_PROJECTION) Then
                    CARTOGRAPHIC_PROJECTION = RemoveQuotes(CARTOGRAPHIC_PROJECTION)
                    If CARTOGRAPHIC_PROJECTION.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_Projection.Focus()
                        Exit Sub
                    End If
                Else
                    CARTOGRAPHIC_PROJECTION = ""
                End If
            Else
                CARTOGRAPHIC_PROJECTION = ""
            End If

            'validation for CARTOGRAPHIC_COORDINATES
            Dim CARTOGRAPHIC_COORDINATES As Object = Nothing
            If TR_CARTOGRAPHIC_COORDINATES.Visible = True Then
                CARTOGRAPHIC_COORDINATES = TrimAll(txt_Hold_Coordinates.Text)
                If Not String.IsNullOrEmpty(CARTOGRAPHIC_COORDINATES) Then
                    CARTOGRAPHIC_COORDINATES = RemoveQuotes(CARTOGRAPHIC_COORDINATES)
                    If CARTOGRAPHIC_COORDINATES.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_Coordinates.Focus()
                        Exit Sub
                    End If
                Else
                    CARTOGRAPHIC_COORDINATES = ""
                End If
            Else
                CARTOGRAPHIC_COORDINATES = ""
            End If

            'validation for CARTOGRAPHIC_GEOGRAPHIC_LOCATION
            Dim CARTOGRAPHIC_GEOGRAPHIC_LOCATION As Object = Nothing
            If TR_CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Visible = True Then
                CARTOGRAPHIC_COORDINATES = TrimAll(txt_Hold_GeographicLocation.Text)
                If Not String.IsNullOrEmpty(CARTOGRAPHIC_GEOGRAPHIC_LOCATION) Then
                    CARTOGRAPHIC_GEOGRAPHIC_LOCATION = RemoveQuotes(CARTOGRAPHIC_GEOGRAPHIC_LOCATION)
                    If CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Length > 51 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        txt_Hold_GeographicLocation.Focus()
                        Exit Sub
                    End If
                Else
                    CARTOGRAPHIC_GEOGRAPHIC_LOCATION = ""
                End If
            Else
                CARTOGRAPHIC_GEOGRAPHIC_LOCATION = ""
            End If

            'validation for CARTOGRAPHIC_MEDIUM
            Dim CARTOGRAPHIC_MEDIUM As Object = Nothing
            If TR_CARTOGRAPHIC_MEDIUM.Visible = True Then
                CARTOGRAPHIC_MEDIUM = Trim(DDL_GeographicMedium.SelectedValue)
                If Not String.IsNullOrEmpty(CARTOGRAPHIC_GEOGRAPHIC_LOCATION) Then
                    CARTOGRAPHIC_MEDIUM = RemoveQuotes(CARTOGRAPHIC_MEDIUM)
                    If CARTOGRAPHIC_MEDIUM.Length > 2 Then 'maximum length
                        Label6.Text = " Data must be of Proper Length.. "
                        Label15.Text = ""
                        DDL_GeographicMedium.Focus()
                        Exit Sub
                    End If
                Else
                    CARTOGRAPHIC_MEDIUM = ""
                End If
            Else
                CARTOGRAPHIC_MEDIUM = ""
            End If

            'search CARTOGRAPHIC_DATAGATHERING_DATE
            Dim CARTOGRAPHIC_DATAGATHERING_DATE As Object = Nothing
            If TR_CARTOGRAPHIC_DATAGATHERING_DATE.Visible = True Then
                If txt_Hold_DataGatheringDate.Text <> "" Then
                    CARTOGRAPHIC_DATAGATHERING_DATE = TrimX(txt_Hold_DataGatheringDate.Text)
                    CARTOGRAPHIC_DATAGATHERING_DATE = RemoveQuotes(CARTOGRAPHIC_DATAGATHERING_DATE)
                    CARTOGRAPHIC_DATAGATHERING_DATE = Convert.ToDateTime(CARTOGRAPHIC_DATAGATHERING_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                    If Len(CARTOGRAPHIC_DATAGATHERING_DATE) > 12 Then
                        Label6.Text = " Input is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_DataGatheringDate.Focus()
                        Exit Sub
                    End If
                Else
                    CARTOGRAPHIC_DATAGATHERING_DATE = ""
                End If
            Else
                CARTOGRAPHIC_DATAGATHERING_DATE = ""
            End If

            'search CARTOGRAPHIC_CREATION_DATE
            Dim CARTOGRAPHIC_CREATION_DATE As Object = Nothing
            If TR_CREATION_DATE.Visible = True Then
                If txt_Hold_CreationDate.Text <> "" Then
                    CARTOGRAPHIC_CREATION_DATE = TrimX(txt_Hold_CreationDate.Text)
                    CARTOGRAPHIC_CREATION_DATE = RemoveQuotes(CARTOGRAPHIC_CREATION_DATE)
                    CARTOGRAPHIC_CREATION_DATE = Convert.ToDateTime(CARTOGRAPHIC_CREATION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                    If Len(CARTOGRAPHIC_CREATION_DATE) > 12 Then
                        Label6.Text = " Input is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_CreationDate.Focus()
                        Exit Sub
                    End If
                Else
                    CARTOGRAPHIC_CREATION_DATE = ""
                End If
            Else
                CARTOGRAPHIC_CREATION_DATE = ""
            End If

            'search CARTOGRAPHIC_COMPILATION_DATE
            Dim CARTOGRAPHIC_COMPILATION_DATE As Object = Nothing
            If TR_CARTOGRAPHIC_COMPILATION_DATE.Visible = True Then
                If txt_Hold_CompilationDate.Text <> "" Then
                    CARTOGRAPHIC_COMPILATION_DATE = TrimX(txt_Hold_CompilationDate.Text)
                    CARTOGRAPHIC_COMPILATION_DATE = RemoveQuotes(CARTOGRAPHIC_COMPILATION_DATE)
                    CARTOGRAPHIC_COMPILATION_DATE = Convert.ToDateTime(CARTOGRAPHIC_COMPILATION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                    If Len(CARTOGRAPHIC_COMPILATION_DATE) > 12 Then
                        Label6.Text = " Input is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_CompilationDate.Focus()
                        Exit Sub
                    End If
                Else
                    CARTOGRAPHIC_COMPILATION_DATE = ""
                End If
            Else
                CARTOGRAPHIC_COMPILATION_DATE = ""
            End If

            'validation for  CARTOGRAPHIC_INSPECTION_DATE
            Dim CARTOGRAPHIC_INSPECTION_DATE As Object = Nothing
            If TR_CARTOGRAPHIC_INSPECTION_DATE.Visible = True Then
                If txt_Hold_InspectionDate.Text <> "" Then
                    CARTOGRAPHIC_INSPECTION_DATE = TrimX(txt_Hold_InspectionDate.Text)
                    CARTOGRAPHIC_INSPECTION_DATE = RemoveQuotes(CARTOGRAPHIC_INSPECTION_DATE)
                    CARTOGRAPHIC_INSPECTION_DATE = Convert.ToDateTime(CARTOGRAPHIC_INSPECTION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                    If Len(CARTOGRAPHIC_INSPECTION_DATE) > 12 Then
                        Label6.Text = " Input is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_InspectionDate.Focus()
                        Exit Sub
                    End If
                Else
                    CARTOGRAPHIC_INSPECTION_DATE = ""
                End If
            Else
                CARTOGRAPHIC_INSPECTION_DATE = ""
            End If

            'validation for  VIDEO_COLOR
            Dim VIDEO_COLOR As Object = Nothing
            If TR_VIDEO_COLOR.Visible = True Then
                If txt_Hold_Color.Text <> "" Then
                    VIDEO_COLOR = TrimAll(txt_Hold_Color.Text)
                    VIDEO_COLOR = RemoveQuotes(VIDEO_COLOR)

                    If Len(VIDEO_COLOR) > 50 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_Color.Focus()
                        Exit Sub
                    End If
                Else
                    VIDEO_COLOR = ""
                End If
            Else
                VIDEO_COLOR = ""
            End If

            'validation for  PLAYBACK_CHANNELS
            Dim PLAYBACK_CHANNELS As Object = Nothing
            If TR_PLAYBACK_CHANNELS.Visible = True Then
                If txt_Hold_PlayBackChannel.Text <> "" Then
                    PLAYBACK_CHANNELS = TrimAll(txt_Hold_PlayBackChannel.Text)
                    PLAYBACK_CHANNELS = RemoveQuotes(PLAYBACK_CHANNELS)
                    If Len(PLAYBACK_CHANNELS) > 50 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_PlayBackChannel.Focus()
                        Exit Sub
                    End If
                Else
                    PLAYBACK_CHANNELS = ""
                End If
            Else
                PLAYBACK_CHANNELS = ""
            End If

            'validation for  TAPE_WIDTH
            Dim TAPE_WIDTH As Object = Nothing
            If TR_TAPE_WIDTH.Visible = True Then
                If txt_Hold_PlayBackChannel.Text <> "" Then
                    TAPE_WIDTH = TrimAll(txt_Hold_PlayBackChannel.Text)
                    TAPE_WIDTH = RemoveQuotes(TAPE_WIDTH)
                    If Len(TAPE_WIDTH) > 50 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_PlayBackChannel.Focus()
                        Exit Sub
                    End If
                Else
                    TAPE_WIDTH = ""
                End If
            Else
                TAPE_WIDTH = ""
            End If

            'validation for  TAPE_CONFIGURATION
            Dim TAPE_CONFIGURATION As Object = Nothing
            If TR_TAPE_CONFIGURATION.Visible = True Then
                If txt_Hold_TapeConfiguration.Text <> "" Then
                    TAPE_CONFIGURATION = TrimAll(txt_Hold_TapeConfiguration.Text)
                    TAPE_CONFIGURATION = RemoveQuotes(TAPE_CONFIGURATION)
                    If Len(TAPE_CONFIGURATION) > 50 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_TapeConfiguration.Focus()
                        Exit Sub
                    End If
                Else
                    TAPE_CONFIGURATION = ""
                End If
            Else
                TAPE_CONFIGURATION = ""
            End If

            'validation for  KIND_OF_DISK
            Dim KIND_OF_DISK As Object = Nothing
            If TR_KIND_OF_DISK.Visible = True Then
                If txt_Hold_KindofDisk.Text <> "" Then
                    KIND_OF_DISK = TrimAll(txt_Hold_KindofDisk.Text)
                    KIND_OF_DISK = RemoveQuotes(KIND_OF_DISK)
                    If Len(KIND_OF_DISK) > 50 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_KindofDisk.Focus()
                        Exit Sub
                    End If
                Else
                    KIND_OF_DISK = ""
                End If
            Else
                KIND_OF_DISK = ""
            End If

            'validation for  KIND_OF_CUTTING
            Dim KIND_OF_CUTTING As Object = Nothing
            If TR_KIND_OF_CUTTING.Visible = True Then
                If txt_Hold_KindofCutting.Text <> "" Then
                    KIND_OF_CUTTING = TrimAll(txt_Hold_KindofCutting.Text)
                    KIND_OF_CUTTING = RemoveQuotes(KIND_OF_CUTTING)
                    If Len(KIND_OF_DISK) > 50 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_KindofCutting.Focus()
                        Exit Sub
                    End If
                Else
                    KIND_OF_CUTTING = ""
                End If
            Else
                KIND_OF_CUTTING = ""
            End If

            'validation for  ENCODING_STANDARD
            Dim ENCODING_STANDARD As Object = Nothing
            If TR_ENCODING_STANDARD.Visible = True Then
                If txt_Hold_EncodingStandard.Text <> "" Then
                    ENCODING_STANDARD = TrimAll(txt_Hold_EncodingStandard.Text)
                    ENCODING_STANDARD = RemoveQuotes(ENCODING_STANDARD)
                    If Len(KIND_OF_DISK) > 50 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_EncodingStandard.Focus()
                        Exit Sub
                    End If
                Else
                    ENCODING_STANDARD = ""
                End If
            Else
                ENCODING_STANDARD = ""
            End If

            'validation for  CAPTURE_TECHNIQUE
            Dim CAPTURE_TECHNIQUE As Object = Nothing
            If TR_CAPTURE_TECHNIQUE.Visible = True Then
                If txt_Hold_CaptureTechnique.Text <> "" Then
                    CAPTURE_TECHNIQUE = TrimAll(txt_Hold_CaptureTechnique.Text)
                    CAPTURE_TECHNIQUE = RemoveQuotes(CAPTURE_TECHNIQUE)
                    If Len(CAPTURE_TECHNIQUE) > 50 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_CaptureTechnique.Focus()
                        Exit Sub
                    End If
                Else
                    CAPTURE_TECHNIQUE = ""
                End If
            Else
                CAPTURE_TECHNIQUE = ""
            End If

            'validation for  PHOTO_NO
            Dim PHOTO_NO As Object = Nothing
            If TR_PHOTO_NO.Visible = True Then
                If txt_Hold_PhotoNo.Text <> "" Then
                    PHOTO_NO = TrimAll(txt_Hold_PhotoNo.Text)
                    PHOTO_NO = RemoveQuotes(PHOTO_NO)
                    If Len(PHOTO_NO) > 50 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_PhotoNo.Focus()
                        Exit Sub
                    End If
                Else
                    PHOTO_NO = ""
                End If
            Else
                PHOTO_NO = ""
            End If


            'validation for  PHOTO_ALBUM_NO
            Dim PHOTO_ALBUM_NO As Object = Nothing
            If TR_PHOTO_ALBUM_NO.Visible = True Then
                If txt_Hold_PhotoAlbumNo.Text <> "" Then
                    PHOTO_ALBUM_NO = TrimAll(txt_Hold_PhotoAlbumNo.Text)
                    PHOTO_ALBUM_NO = RemoveQuotes(PHOTO_ALBUM_NO)
                    If Len(PHOTO_ALBUM_NO) > 150 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_PhotoAlbumNo.Focus()
                        Exit Sub
                    End If
                Else
                    PHOTO_ALBUM_NO = ""
                End If
            Else
                PHOTO_ALBUM_NO = ""
            End If

            'validation for  PHOTO_OCASION
            Dim PHOTO_OCASION As Object = Nothing
            If TR_PHOTO_OCASION.Visible = True Then
                If txt_Hold_Ocasion.Text <> "" Then
                    PHOTO_OCASION = TrimAll(txt_Hold_Ocasion.Text)
                    PHOTO_OCASION = RemoveQuotes(PHOTO_OCASION)
                    If Len(PHOTO_OCASION) > 150 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_Ocasion.Focus()
                        Exit Sub
                    End If
                Else
                    PHOTO_OCASION = ""
                End If
            Else
                PHOTO_OCASION = ""
            End If

            'validation for  IMAGE_VIEW_TYPE
            Dim IMAGE_VIEW_TYPE As Object = Nothing
            If TR_IMAGE_VIEW_TYPE.Visible = True Then
                If txt_Hold_ImageViewType.Text <> "" Then
                    IMAGE_VIEW_TYPE = TrimAll(txt_Hold_ImageViewType.Text)
                    IMAGE_VIEW_TYPE = RemoveQuotes(IMAGE_VIEW_TYPE)
                    If Len(IMAGE_VIEW_TYPE) > 50 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_ImageViewType.Focus()
                        Exit Sub
                    End If
                Else
                    IMAGE_VIEW_TYPE = ""
                End If
            Else
                IMAGE_VIEW_TYPE = ""
            End If

            'search VIEW_DATE
            Dim VIEW_DATE As Object = Nothing
            If TR_VIEW_DATE.Visible = True Then
                If txt_Hold_ViewDate.Text <> "" Then
                    VIEW_DATE = TrimX(txt_Hold_ViewDate.Text)
                    VIEW_DATE = RemoveQuotes(VIEW_DATE)
                    VIEW_DATE = Convert.ToDateTime(VIEW_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                    If Len(VIEW_DATE) > 12 Then
                        Label6.Text = " Input is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_ViewDate.Focus()
                        Exit Sub
                    End If
                Else
                    VIEW_DATE = ""
                End If
            Else
                VIEW_DATE = ""
            End If


            'validation for  THEME
            Dim THEME As Object = Nothing
            If TR_THEME.Visible = True Then
                If txt_Hold_Theme.Text <> "" Then
                    THEME = TrimAll(txt_Hold_Theme.Text)
                    THEME = RemoveQuotes(THEME)
                    If Len(THEME) > 150 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_Theme.Focus()
                        Exit Sub
                    End If
                Else
                    THEME = ""
                End If
            Else
                THEME = ""
            End If

            'validation for  STYLE
            Dim STYLE As Object = Nothing
            If TR_STYLE.Visible = True Then
                If txt_Hold_Style.Text <> "" Then
                    STYLE = TrimAll(txt_Hold_Style.Text)
                    STYLE = RemoveQuotes(STYLE)
                    If Len(STYLE) > 150 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_Style.Focus()
                        Exit Sub
                    End If
                Else
                    STYLE = ""
                End If
            Else
                STYLE = ""
            End If

            'validation for  CULTURE
            Dim CULTURE As Object = Nothing
            If TR_CULTURE.Visible = True Then
                If txt_Hold_Culture.Text <> "" Then
                    CULTURE = TrimAll(txt_Hold_Culture.Text)
                    CULTURE = RemoveQuotes(CULTURE)
                    If Len(CULTURE) > 150 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_Culture.Focus()
                        Exit Sub
                    End If
                Else
                    CULTURE = ""
                End If
            Else
                CULTURE = ""
            End If

            'validation for  CURRENT_SITE
            Dim CURRENT_SITE As Object = Nothing
            If TR_CULTURE.Visible = True Then
                If txt_Hold_CurrentSite.Text <> "" Then
                    CURRENT_SITE = TrimAll(txt_Hold_CurrentSite.Text)
                    CURRENT_SITE = RemoveQuotes(CURRENT_SITE)
                    If Len(CURRENT_SITE) > 150 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_CurrentSite.Focus()
                        Exit Sub
                    End If
                Else
                    CURRENT_SITE = ""
                End If
            Else
                CURRENT_SITE = ""
            End If

            'validation for  CREATION_SITE
            Dim CREATION_SITE As Object = Nothing
            If TR_CREATION_SITE.Visible = True Then
                If txt_Hold_CreationSite.Text <> "" Then
                    CREATION_SITE = TrimAll(txt_Hold_CreationSite.Text)
                    CREATION_SITE = RemoveQuotes(CREATION_SITE)
                    If Len(CREATION_SITE) > 150 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_CreationSite.Focus()
                        Exit Sub
                    End If
                Else
                    CREATION_SITE = ""
                End If
            Else
                CREATION_SITE = ""
            End If

            'validation for  YARNCOUNT
            Dim YARNCOUNT As Object = Nothing
            If TR_YARNCOUNT.Visible = True Then
                If txt_Hold_YarnCount.Text <> "" Then
                    YARNCOUNT = TrimAll(txt_Hold_YarnCount.Text)
                    YARNCOUNT = RemoveQuotes(YARNCOUNT)
                    If Len(YARNCOUNT) > 150 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_YarnCount.Focus()
                        Exit Sub
                    End If
                Else
                    YARNCOUNT = ""
                End If
            Else
                YARNCOUNT = ""
            End If

            'validation for  MATERIAL_TYPE
            Dim MATERIAL_TYPE As Object = Nothing
            If TR_MATERIAL_TYPE.Visible = True Then
                If txt_Hold_MaterialsType.Text <> "" Then
                    MATERIAL_TYPE = TrimAll(txt_Hold_MaterialsType.Text)
                    MATERIAL_TYPE = RemoveQuotes(MATERIAL_TYPE)
                    If Len(MATERIAL_TYPE) > 150 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_MaterialsType.Focus()
                        Exit Sub
                    End If
                Else
                    MATERIAL_TYPE = ""
                End If
            Else
                MATERIAL_TYPE = ""
            End If

            'validation for  TECHNIQUE
            Dim TECHNIQUE As Object = Nothing
            If TR_TECHNIQUE.Visible = True Then
                If txt_Hold_Technique.Text <> "" Then
                    TECHNIQUE = TrimAll(txt_Hold_Technique.Text)
                    TECHNIQUE = RemoveQuotes(TECHNIQUE)
                    If Len(TECHNIQUE) > 150 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_Technique.Focus()
                        Exit Sub
                    End If
                Else
                    TECHNIQUE = ""
                End If
            Else
                TECHNIQUE = ""
            End If

            'validation for  TECH_DETAILS
            Dim TECH_DETAILS As Object = Nothing
            If TR_TECH_DETAILS.Visible = True Then
                If txt_Hold_TechDetails.Text <> "" Then
                    TECH_DETAILS = TrimAll(txt_Hold_TechDetails.Text)
                    TECH_DETAILS = RemoveQuotes(TECH_DETAILS)
                    If Len(TECH_DETAILS) > 250 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_TechDetails.Focus()
                        Exit Sub
                    End If
                Else
                    TECH_DETAILS = ""
                End If
            Else
                TECH_DETAILS = ""
            End If

            'validation for  INSCRIPTIONS
            Dim INSCRIPTIONS As Object = Nothing
            If TR_INSCRIPTIONS.Visible = True Then
                If txt_Hold_Inscription.Text <> "" Then
                    INSCRIPTIONS = TrimAll(txt_Hold_Inscription.Text)
                    INSCRIPTIONS = RemoveQuotes(INSCRIPTIONS)
                    If Len(INSCRIPTIONS) > 150 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_Inscription.Focus()
                        Exit Sub
                    End If
                Else
                    INSCRIPTIONS = ""
                End If
            Else
                INSCRIPTIONS = ""
            End If

            'validation for  DESCRIPTION
            Dim DESCRIPTION As Object = Nothing
            If TR_DESCRIPTION.Visible = True Then
                If txt_Hold_Description.Text <> "" Then
                    DESCRIPTION = TrimAll(txt_Hold_Description.Text)
                    DESCRIPTION = RemoveQuotes(DESCRIPTION)
                    If Len(DESCRIPTION) > 250 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_Description.Focus()
                        Exit Sub
                    End If
                Else
                    DESCRIPTION = ""
                End If
            Else
                DESCRIPTION = ""
            End If

            'validation for  GLOBE_TYPE
            Dim GLOBE_TYPE As Object = Nothing
            If TR_GLOBE_TYPE.Visible = True Then
                If txt_Hold_GlobeType.Text <> "" Then
                    GLOBE_TYPE = TrimAll(txt_Hold_GlobeType.Text)
                    GLOBE_TYPE = RemoveQuotes(GLOBE_TYPE)
                    If Len(GLOBE_TYPE) > 50 Then
                        Label6.Text = " Input Length is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_GlobeType.Focus()
                        Exit Sub
                    End If
                Else
                    GLOBE_TYPE = ""
                End If
            Else
                GLOBE_TYPE = ""
            End If

            'search ALTER_DATE
            Dim ALTER_DATE As Object = Nothing
            If TR_ALTER_DATE.Visible = True Then
                If txt_Hold_AlterDate.Text <> "" Then
                    ALTER_DATE = TrimX(txt_Hold_AlterDate.Text)
                    ALTER_DATE = RemoveQuotes(ALTER_DATE)
                    ALTER_DATE = Convert.ToDateTime(ALTER_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                    If Len(ALTER_DATE) > 12 Then
                        Label6.Text = " Input is not Valid..."
                        Label15.Text = ""
                        Me.txt_Hold_AlterDate.Focus()
                        Exit Sub
                    End If
                Else
                    ALTER_DATE = ""
                End If
            Else
                ALTER_DATE = ""
            End If




            'Dim CopiesAdding As Integer = Nothing
            'If txt_Hold_Copies.Text <> "" Then
            '    CopiesAdding = CInt(txt_Hold_Copies.Text)
            '    CopiesAdding = CopiesAdding - 2
            'Else
            '    CopiesAdding = 1
            'End If



            Dim myAccNO As Integer = 0
            myAccNO = TrimX(txt_Hold_AccNo.Text)
            Dim x As Integer = 0
            For x = 0 To txt_Hold_Copies.Text - 2
                Dim myNextAccNo As Object = Nothing
                If x = 0 Then
                    myAccNO = myAccNO + 1
                    myNextAccNo = ACCESSION_SERIES + Convert.ToString(myAccNO) 'TrimX(txt_Hold_AccNo.Text)
                Else
                    myAccNO = myAccNO + 1
                    myNextAccNo = ACCESSION_SERIES + Convert.ToString(myAccNO) ' + 1)
                End If

                'check duplicate acc no
                Dim str2 As Object = Nothing
                Dim flag2 As Object = Nothing
                str2 = "SELECT HOLD_ID FROM HOLDINGS WHERE (ACCESSION_NO = '" & Trim(myNextAccNo) & "')  AND (LIB_CODE = '" & Trim(DDL_Library.SelectedValue) & "')"
                Dim cmd2 As New SqlCommand(str2, SqlConn)
                SqlConn.Open()
                flag2 = cmd2.ExecuteScalar
                SqlConn.Close()
                If flag2 <> Nothing Then
                    If x = 0 Then
                        myAccNO = myAccNO + 1
                    End If
                    x = x - 1
                    Continue For
                Else
                    If SqlConn.State = 0 Then
                        SqlConn.Open()
                    End If

                    thisTransaction = SqlConn.BeginTransaction()

                    'ACQ data saving
                    If txt_Acq_ItemPrice.Text <> "" Then
                        Dim objCommand1 As New SqlCommand
                        objCommand1.Connection = SqlConn
                        objCommand1.Transaction = thisTransaction
                        objCommand1.CommandType = CommandType.Text
                        objCommand1.CommandText = "INSERT INTO ACQUISITIONS (CAT_NO, LIB_CODE, USER_CODE, DATE_ADDED, ACQMODE_CODE, CUR_CODE, ITEM_PRICE, CONVERSION_RATE, ITEM_RUPEES, OTHER_CHARGES, VEND_ID, IP, PROCESS_STATUS, VOL_NO, COPY_PROPOSED, COPY_APPROVED, COPY_ORDERED, COPY_RECEIVED, COPY_ACCESSIONED) " & _
                                                 " VALUES (@CAT_NO, @LIB_CODE, @USER_CODE, @DATE_ADDED, @ACQMODE_CODE, @CUR_CODE, @ITEM_PRICE, @CONVERSION_RATE, @ITEM_RUPEES, @OTHER_CHARGES, @VEND_ID, @IP, @PROCESS_STATUS, @VOL_NO, @COPY_PROPOSED, @COPY_APPROVED, @COPY_ORDERED, @COPY_RECEIVED, @COPY_ACCESSIONED); " & _
                                                 " SELECT SCOPE_IDENTITY()"

                        objCommand1.Parameters.Add("@CAT_NO", SqlDbType.Int)
                        objCommand1.Parameters("@CAT_NO").Value = Label7.Text

                        objCommand1.Parameters.Add("@LIB_CODE", SqlDbType.NVarChar)
                        If LibCode = "" Then
                            objCommand1.Parameters("@LIB_CODE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@LIB_CODE").Value = LibCode
                        End If

                        objCommand1.Parameters.Add("@USER_CODE", SqlDbType.NVarChar)
                        If USER_CODE = "" Then
                            objCommand1.Parameters("@USER_CODE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@USER_CODE").Value = USER_CODE
                        End If

                        objCommand1.Parameters.Add("@DATE_ADDED", SqlDbType.DateTime)
                        If DATE_ADDED = "" Then
                            objCommand1.Parameters("@DATE_ADDED").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@DATE_ADDED").Value = DATE_ADDED
                        End If

                        objCommand1.Parameters.Add("@ACQMODE_CODE", SqlDbType.NVarChar)
                        If ACQMODE_CODE = "" Then
                            objCommand1.Parameters("@ACQMODE_CODE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@ACQMODE_CODE").Value = ACQMODE_CODE
                        End If

                        objCommand1.Parameters.Add("@CUR_CODE", SqlDbType.NVarChar)
                        If CUR_CODE = "" Then
                            objCommand1.Parameters("@CUR_CODE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@CUR_CODE").Value = CUR_CODE
                        End If

                        objCommand1.Parameters.Add("@ITEM_PRICE", SqlDbType.Decimal)
                        If ITEM_PRICE = 0 Then
                            objCommand1.Parameters("@ITEM_PRICE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@ITEM_PRICE").Value = ITEM_PRICE
                        End If

                        objCommand1.Parameters.Add("@CONVERSION_RATE", SqlDbType.Decimal)
                        If CONVERSION_RATE = 0 Then
                            objCommand1.Parameters("@CONVERSION_RATE").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@CONVERSION_RATE").Value = CONVERSION_RATE
                        End If

                        objCommand1.Parameters.Add("@ITEM_RUPEES", SqlDbType.Decimal)
                        If ITEM_RUPEES = 0 Then
                            objCommand1.Parameters("@ITEM_RUPEES").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@ITEM_RUPEES").Value = ITEM_RUPEES
                        End If

                        objCommand1.Parameters.Add("@OTHER_CHARGES", SqlDbType.Decimal)
                        If OTHER_CHARGES = 0 Then
                            objCommand1.Parameters("@OTHER_CHARGES").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@OTHER_CHARGES").Value = OTHER_CHARGES
                        End If

                        objCommand1.Parameters.Add("@VOL_NO", SqlDbType.VarChar)
                        If VOL_NO = "" Then
                            objCommand1.Parameters("@VOL_NO").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@VOL_NO").Value = VOL_NO
                        End If

                        objCommand1.Parameters.Add("@VEND_ID", SqlDbType.Int)
                        If VEND_ID = 0 Then
                            objCommand1.Parameters("@VEND_ID").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@VEND_ID").Value = VEND_ID
                        End If

                        objCommand1.Parameters.Add("@COPY_PROPOSED", SqlDbType.Int)
                        objCommand1.Parameters("@COPY_PROPOSED").Value = 1

                        objCommand1.Parameters.Add("@COPY_APPROVED", SqlDbType.Int)
                        objCommand1.Parameters("@COPY_APPROVED").Value = 1

                        objCommand1.Parameters.Add("@COPY_ORDERED", SqlDbType.Int)
                        objCommand1.Parameters("@COPY_ORDERED").Value = 1

                        objCommand1.Parameters.Add("@COPY_RECEIVED", SqlDbType.Int)
                        objCommand1.Parameters("@COPY_RECEIVED").Value = 1

                        objCommand1.Parameters.Add("@COPY_ACCESSIONED", SqlDbType.Int)
                        objCommand1.Parameters("@COPY_ACCESSIONED").Value = 1

                        objCommand1.Parameters.Add("@PROCESS_STATUS", SqlDbType.VarChar)
                        objCommand1.Parameters("@PROCESS_STATUS").Value = "Direct Accessioned"

                        objCommand1.Parameters.Add("@IP", SqlDbType.VarChar)
                        If IP = "" Then
                            objCommand1.Parameters("@IP").Value = System.DBNull.Value
                        Else
                            objCommand1.Parameters("@IP").Value = IP
                        End If

                        Dim drAcq As SqlDataReader
                        drAcq = objCommand1.ExecuteReader()
                        If drAcq.Read Then
                            intAcqID = drAcq.GetValue(0)
                        End If
                        drAcq.Close()
                    End If

                    Dim objCommand3 As New SqlCommand
                    objCommand3.Connection = SqlConn
                    objCommand3.Transaction = thisTransaction
                    objCommand3.CommandType = CommandType.Text
                    objCommand3.CommandText = "INSERT INTO HOLDINGS (CAT_NO, ACQ_ID, ACCESSION_NO, ACCESSION_DATE, FORMAT_CODE, SHOW, ISSUEABLE, VOL_NO, VOL_YEAR, VOL_EDITORS, VOL_TITLE, COPY_ISBN, CLASS_NO, BOOK_NO, PAGINATION, SIZE, ILLUSTRATION, COLLECTION_TYPE, STA_CODE, BIND_CODE, SEC_CODE, LIB_CODE, ACC_MAT_CODE, REMARKS, PHYSICAL_LOCATION, REFERENCE_NO, MEDIUM, RECORDING_CATEGORY, RECORDING_FORM, RECORDING_FORMAT, RECORDING_SPEED, RECORDING_STORAGE_TECH, RECORDING_PLAY_DURATION, VIDEO_TYPEOFVISUAL, CARTOGRAPHIC_SCALE, CARTOGRAPHIC_PROJECTION, CARTOGRAPHIC_COORDINATES, CARTOGRAPHIC_GEOGRAPHIC_LOCATION, CARTOGRAPHIC_MEDIUM, CARTOGRAPHIC_DATAGATHERING_DATE, CREATION_DATE, CARTOGRAPHIC_COMPILATION_DATE, CARTOGRAPHIC_INSPECTION_DATE, DATE_ADDED, USER_CODE, IP,VIDEO_COLOR,PLAYBACK_CHANNELS,TAPE_WIDTH,TAPE_CONFIGURATION,KIND_OF_DISK,KIND_OF_CUTTING,ENCODING_STANDARD,CAPTURE_TECHNIQUE,PHOTO_NO,PHOTO_ALBUM_NO,PHOTO_OCASION,IMAGE_VIEW_TYPE,VIEW_DATE,THEME,STYLE,CULTURE,CURRENT_SITE,CREATION_SITE,YARNCOUNT,MATERIAL_TYPE,TECHNIQUE,TECH_DETAILS,INSCRIPTIONS,DESCRIPTION,GLOBE_TYPE,ALTER_DATE ) " & _
                                             " VALUES (@CAT_NO, @ACQ_ID, @ACCESSION_NO, @ACCESSION_DATE, @FORMAT_CODE, @SHOW, @ISSUABLE, @VOL_NO, @VOL_YEAR, @VOL_EDITORS, @VOL_TITLE, @COPY_ISBN, @CLASS_NO, @BOOK_NO, @PAGINATION, @SIZE, @ILLUSTRATION, @COLLECTION_TYPE, @STA_CODE, @BIND_CODE, @SEC_CODE, @LIB_CODE, @ACC_MAT_CODE, @REMARKS, @PHYSICAL_LOCATION, @REFERENCE_NO, @RECORDING_MEDIUM, @RECORDING_CATEGORY, @RECORDING_FORM, @RECORDING_FORMAT, @RECORDING_SPEED, @RECORDING_STORAGE_TECH, @RECORDING_PLAY_DURATION, @VIDEO_TYPEOFVISUALS, @CARTOGRAPHIC_SCALE, @CARTOGRAPHIC_PROJECTION, @CARTOGRAPHIC_COORDINATES, @CARTOGRAPHIC_GEOGRAPHIC_LOCATION, @CARTOGRAPHIC_MEDIUM, @CARTOGRAPHIC_DATAGATHERING_DATE, @CARTOGRAPHIC_CREATION_DATE, @CARTOGRAPHIC_COMPILATION_DATE, @CARTOGRAPHIC_INSPECTION_DATE, @DATE_ADDED, @USER_CODE, @IP,@VIDEO_COLOR,@PLAYBACK_CHANNELS,@TAPE_WIDTH,@TAPE_CONFIGURATION,@KIND_OF_DISK,@KIND_OF_CUTTING,@ENCODING_STANDARD,@CAPTURE_TECHNIQUE,@PHOTO_NO,@PHOTO_ALBUM_NO,@PHOTO_OCASION,@IMAGE_VIEW_TYPE,@VIEW_DATE,@THEME,@STYLE,@CULTURE,@CURRENT_SITE,@CREATION_SITE,@YARNCOUNT,@MATERIAL_TYPE,@TECHNIQUE,@TECH_DETAILS,@INSCRIPTIONS,@DESCRIPTION,@GLOBE_TYPE,@ALTER_DATE);  " & _
                                             " SELECT SCOPE_IDENTITY()"

                    objCommand3.Parameters.Add("@CAT_NO", SqlDbType.Int)
                    objCommand3.Parameters("@CAT_NO").Value = Label7.Text

                    objCommand3.Parameters.Add("@ACQ_ID", SqlDbType.Int)
                    If intAcqID = 0 Then
                        objCommand3.Parameters("@ACQ_ID").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@ACQ_ID").Value = intAcqID
                    End If



                    If myNextAccNo = "" Then myNextAccNo = System.DBNull.Value
                    objCommand3.Parameters.Add("@ACCESSION_NO", SqlDbType.NVarChar)
                    objCommand3.Parameters("@ACCESSION_NO").Value = myNextAccNo










                    objCommand3.Parameters.Add("@ACCESSION_DATE", SqlDbType.DateTime)
                    If ACCESSION_DATE = "" Then
                        objCommand3.Parameters("@ACCESSION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@ACCESSION_DATE").Value = ACCESSION_DATE
                    End If


                    If FORMAT_CODE = "" Then FORMAT_CODE = "PT"
                    objCommand3.Parameters.Add("@FORMAT_CODE", SqlDbType.VarChar)
                    objCommand3.Parameters("@FORMAT_CODE").Value = FORMAT_CODE

                    If SHOW = "" Then SHOW = "Y"
                    objCommand3.Parameters.Add("@SHOW", SqlDbType.VarChar)
                    objCommand3.Parameters("@SHOW").Value = SHOW

                    If ISSUABLE = "" Then ISSUABLE = "Y"
                    objCommand3.Parameters.Add("@ISSUABLE", SqlDbType.VarChar)
                    objCommand3.Parameters("@ISSUABLE").Value = ISSUABLE

                    objCommand3.Parameters.Add("@VOL_NO", SqlDbType.NVarChar)
                    If VOL_NO = "" Then
                        objCommand3.Parameters("@VOL_NO").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@VOL_NO").Value = VOL_NO
                    End If

                    objCommand3.Parameters.Add("@VOL_YEAR", SqlDbType.Int)
                    If VOL_YEAR = 0 Then
                        objCommand3.Parameters("@VOL_YEAR").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@VOL_YEAR").Value = VOL_YEAR
                    End If

                    objCommand3.Parameters.Add("@VOL_EDITORS", SqlDbType.NVarChar)
                    If VOL_EDITORS = "" Then
                        objCommand3.Parameters("@VOL_EDITORS").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@VOL_EDITORS").Value = VOL_EDITORS
                    End If

                    objCommand3.Parameters.Add("@VOL_TITLE", SqlDbType.NVarChar)
                    If VOL_TITLE = "" Then
                        objCommand3.Parameters("@VOL_TITLE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@VOL_TITLE").Value = VOL_TITLE
                    End If

                    objCommand3.Parameters.Add("@COPY_ISBN", SqlDbType.VarChar)
                    If COPY_ISBN = "" Then
                        objCommand3.Parameters("@COPY_ISBN").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@COPY_ISBN").Value = COPY_ISBN
                    End If

                    objCommand3.Parameters.Add("@CLASS_NO", SqlDbType.NVarChar)
                    If CLASS_NO = "" Then
                        objCommand3.Parameters("@CLASS_NO").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CLASS_NO").Value = CLASS_NO
                    End If

                    objCommand3.Parameters.Add("@BOOK_NO", SqlDbType.NVarChar)
                    If BOOK_NO = "" Then
                        objCommand3.Parameters("@BOOK_NO").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@BOOK_NO").Value = BOOK_NO
                    End If

                    objCommand3.Parameters.Add("@PAGINATION", SqlDbType.NVarChar)
                    If PAGINATION = "" Then
                        objCommand3.Parameters("@PAGINATION").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@PAGINATION").Value = PAGINATION
                    End If

                    objCommand3.Parameters.Add("@SIZE", SqlDbType.VarChar)
                    If SIZE = "" Then
                        objCommand3.Parameters("@SIZE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@SIZE").Value = SIZE
                    End If

                    objCommand3.Parameters.Add("@ILLUSTRATION", SqlDbType.VarChar)
                    If ILLUSTRATION = "" Then
                        objCommand3.Parameters("@ILLUSTRATION").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@ILLUSTRATION").Value = ILLUSTRATION
                    End If

                    objCommand3.Parameters.Add("@COLLECTION_TYPE", SqlDbType.VarChar)
                    If COLLECTION_TYPE = "" Then
                        objCommand3.Parameters("@COLLECTION_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@COLLECTION_TYPE").Value = COLLECTION_TYPE
                    End If

                    If STA_CODE = "" Then STA_CODE = "1"
                    objCommand3.Parameters.Add("@STA_CODE", SqlDbType.VarChar)
                    objCommand3.Parameters("@STA_CODE").Value = STA_CODE

                    objCommand3.Parameters.Add("@BIND_CODE", SqlDbType.VarChar)
                    If BIND_CODE = "" Then
                        objCommand3.Parameters("@BIND_CODE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@BIND_CODE").Value = BIND_CODE
                    End If

                    objCommand3.Parameters.Add("@SEC_CODE", SqlDbType.VarChar)
                    If SEC_CODE = "" Then
                        objCommand3.Parameters("@SEC_CODE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@SEC_CODE").Value = SEC_CODE
                    End If

                    objCommand3.Parameters.Add("@LIB_CODE", SqlDbType.NVarChar)
                    If HOLD_LIB_CODE = "" Then
                        objCommand3.Parameters("@LIB_CODE").Value = HOLD_LIB_CODE
                    Else
                        objCommand3.Parameters("@LIB_CODE").Value = LibCode
                    End If

                    objCommand3.Parameters.Add("@ACC_MAT_CODE", SqlDbType.VarChar)
                    If ACC_MAT_CODE = "" Then
                        objCommand3.Parameters("@ACC_MAT_CODE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@ACC_MAT_CODE").Value = ACC_MAT_CODE
                    End If

                    objCommand3.Parameters.Add("@REMARKS", SqlDbType.NVarChar)
                    If REMARKS = "" Then
                        objCommand3.Parameters("@REMARKS").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@REMARKS").Value = REMARKS
                    End If

                    objCommand3.Parameters.Add("@PHYSICAL_LOCATION", SqlDbType.NVarChar)
                    If PHYSICAL_LOCATION = "" Then
                        objCommand3.Parameters("@PHYSICAL_LOCATION").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@PHYSICAL_LOCATION").Value = PHYSICAL_LOCATION
                    End If

                    objCommand3.Parameters.Add("@REFERENCE_NO", SqlDbType.NVarChar)
                    If REFERENCE_NO = "" Then
                        objCommand3.Parameters("@REFERENCE_NO").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@REFERENCE_NO").Value = REFERENCE_NO
                    End If

                    objCommand3.Parameters.Add("@RECORDING_MEDIUM", SqlDbType.NVarChar)
                    If RECORDING_MEDIUM = "" Then
                        objCommand3.Parameters("@RECORDING_MEDIUM").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@RECORDING_MEDIUM").Value = RECORDING_MEDIUM
                    End If

                    objCommand3.Parameters.Add("@RECORDING_CATEGORY", SqlDbType.NVarChar)
                    If RECORDING_CATEGORY = "" Then
                        objCommand3.Parameters("@RECORDING_CATEGORY").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@RECORDING_CATEGORY").Value = RECORDING_CATEGORY
                    End If

                    objCommand3.Parameters.Add("@RECORDING_FORM", SqlDbType.NVarChar)
                    If RECORDING_FORM = "" Then
                        objCommand3.Parameters("@RECORDING_FORM").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@RECORDING_FORM").Value = RECORDING_FORM
                    End If

                    objCommand3.Parameters.Add("@RECORDING_FORMAT", SqlDbType.NVarChar)
                    If RECORDING_FORMAT = "" Then
                        objCommand3.Parameters("@RECORDING_FORMAT").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@RECORDING_FORMAT").Value = RECORDING_FORMAT
                    End If

                    objCommand3.Parameters.Add("@RECORDING_SPEED", SqlDbType.NVarChar)
                    If RECORDING_SPEED = "" Then
                        objCommand3.Parameters("@RECORDING_SPEED").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@RECORDING_SPEED").Value = RECORDING_SPEED
                    End If

                    objCommand3.Parameters.Add("@RECORDING_STORAGE_TECH", SqlDbType.NVarChar)
                    If RECORDING_STORAGE_TECH = "" Then
                        objCommand3.Parameters("@RECORDING_STORAGE_TECH").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@RECORDING_STORAGE_TECH").Value = RECORDING_STORAGE_TECH
                    End If

                    objCommand3.Parameters.Add("@RECORDING_PLAY_DURATION", SqlDbType.NVarChar)
                    If RECORDING_PLAY_DURATION = "" Then
                        objCommand3.Parameters("@RECORDING_PLAY_DURATION").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@RECORDING_PLAY_DURATION").Value = RECORDING_PLAY_DURATION
                    End If

                    objCommand3.Parameters.Add("@VIDEO_TYPEOFVISUALS", SqlDbType.NVarChar)
                    If VIDEO_TYPEOFVISUALS = "" Then
                        objCommand3.Parameters("@VIDEO_TYPEOFVISUALS").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@VIDEO_TYPEOFVISUALS").Value = VIDEO_TYPEOFVISUALS
                    End If

                    objCommand3.Parameters.Add("@CARTOGRAPHIC_SCALE", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_SCALE = "" Then
                        objCommand3.Parameters("@CARTOGRAPHIC_SCALE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CARTOGRAPHIC_SCALE").Value = CARTOGRAPHIC_SCALE
                    End If

                    objCommand3.Parameters.Add("@CARTOGRAPHIC_PROJECTION", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_PROJECTION = "" Then
                        objCommand3.Parameters("@CARTOGRAPHIC_PROJECTION").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CARTOGRAPHIC_PROJECTION").Value = CARTOGRAPHIC_PROJECTION
                    End If

                    objCommand3.Parameters.Add("@CARTOGRAPHIC_COORDINATES", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_COORDINATES = "" Then
                        objCommand3.Parameters("@CARTOGRAPHIC_COORDINATES").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CARTOGRAPHIC_COORDINATES").Value = CARTOGRAPHIC_COORDINATES
                    End If

                    objCommand3.Parameters.Add("@CARTOGRAPHIC_GEOGRAPHIC_LOCATION", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_GEOGRAPHIC_LOCATION = "" Then
                        objCommand3.Parameters("@CARTOGRAPHIC_GEOGRAPHIC_LOCATION").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CARTOGRAPHIC_GEOGRAPHIC_LOCATION").Value = CARTOGRAPHIC_GEOGRAPHIC_LOCATION
                    End If

                    objCommand3.Parameters.Add("@CARTOGRAPHIC_MEDIUM", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_MEDIUM = "" Then
                        objCommand3.Parameters("@CARTOGRAPHIC_MEDIUM").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CARTOGRAPHIC_MEDIUM").Value = CARTOGRAPHIC_MEDIUM
                    End If

                    objCommand3.Parameters.Add("@CARTOGRAPHIC_DATAGATHERING_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_DATAGATHERING_DATE = "" Then
                        objCommand3.Parameters("@CARTOGRAPHIC_DATAGATHERING_DATE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CARTOGRAPHIC_DATAGATHERING_DATE").Value = CARTOGRAPHIC_DATAGATHERING_DATE
                    End If

                    objCommand3.Parameters.Add("@CARTOGRAPHIC_CREATION_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_CREATION_DATE = "" Then
                        objCommand3.Parameters("@CARTOGRAPHIC_CREATION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CARTOGRAPHIC_CREATION_DATE").Value = CARTOGRAPHIC_CREATION_DATE
                    End If

                    objCommand3.Parameters.Add("@CARTOGRAPHIC_COMPILATION_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_COMPILATION_DATE = "" Then
                        objCommand3.Parameters("@CARTOGRAPHIC_COMPILATION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CARTOGRAPHIC_COMPILATION_DATE").Value = CARTOGRAPHIC_COMPILATION_DATE
                    End If

                    objCommand3.Parameters.Add("@CARTOGRAPHIC_INSPECTION_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_INSPECTION_DATE = "" Then
                        objCommand3.Parameters("@CARTOGRAPHIC_INSPECTION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CARTOGRAPHIC_INSPECTION_DATE").Value = CARTOGRAPHIC_INSPECTION_DATE
                    End If

                    objCommand3.Parameters.Add("@VIDEO_COLOR", SqlDbType.NVarChar)
                    If VIDEO_COLOR = "" Then
                        objCommand3.Parameters("@VIDEO_COLOR").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@VIDEO_COLOR").Value = VIDEO_COLOR
                    End If

                    objCommand3.Parameters.Add("@PLAYBACK_CHANNELS", SqlDbType.NVarChar)
                    If PLAYBACK_CHANNELS = "" Then
                        objCommand3.Parameters("@PLAYBACK_CHANNELS").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@PLAYBACK_CHANNELS").Value = PLAYBACK_CHANNELS
                    End If

                    objCommand3.Parameters.Add("@TAPE_WIDTH", SqlDbType.NVarChar)
                    If TAPE_WIDTH = "" Then
                        objCommand3.Parameters("@TAPE_WIDTH").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@TAPE_WIDTH").Value = TAPE_WIDTH
                    End If

                    objCommand3.Parameters.Add("@TAPE_CONFIGURATION", SqlDbType.NVarChar)
                    If TAPE_CONFIGURATION = "" Then
                        objCommand3.Parameters("@TAPE_CONFIGURATION").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@TAPE_CONFIGURATION").Value = TAPE_CONFIGURATION
                    End If

                    objCommand3.Parameters.Add("@KIND_OF_DISK", SqlDbType.NVarChar)
                    If KIND_OF_DISK = "" Then
                        objCommand3.Parameters("@KIND_OF_DISK").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@KIND_OF_DISK").Value = KIND_OF_DISK
                    End If

                    objCommand3.Parameters.Add("@KIND_OF_CUTTING", SqlDbType.NVarChar)
                    If KIND_OF_CUTTING = "" Then
                        objCommand3.Parameters("@KIND_OF_CUTTING").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@KIND_OF_CUTTING").Value = KIND_OF_CUTTING
                    End If

                    objCommand3.Parameters.Add("@ENCODING_STANDARD", SqlDbType.NVarChar)
                    If ENCODING_STANDARD = "" Then
                        objCommand3.Parameters("@ENCODING_STANDARD").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@ENCODING_STANDARD").Value = ENCODING_STANDARD
                    End If

                    objCommand3.Parameters.Add("@CAPTURE_TECHNIQUE", SqlDbType.NVarChar)
                    If CAPTURE_TECHNIQUE = "" Then
                        objCommand3.Parameters("@CAPTURE_TECHNIQUE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CAPTURE_TECHNIQUE").Value = CAPTURE_TECHNIQUE
                    End If

                    objCommand3.Parameters.Add("@PHOTO_NO", SqlDbType.NVarChar)
                    If PHOTO_NO = "" Then
                        objCommand3.Parameters("@PHOTO_NO").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@PHOTO_NO").Value = PHOTO_NO
                    End If

                    objCommand3.Parameters.Add("@PHOTO_ALBUM_NO", SqlDbType.NVarChar)
                    If PHOTO_ALBUM_NO = "" Then
                        objCommand3.Parameters("@PHOTO_ALBUM_NO").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@PHOTO_ALBUM_NO").Value = PHOTO_ALBUM_NO
                    End If

                    objCommand3.Parameters.Add("@PHOTO_OCASION", SqlDbType.NVarChar)
                    If PHOTO_OCASION = "" Then
                        objCommand3.Parameters("@PHOTO_OCASION").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@PHOTO_OCASION").Value = PHOTO_OCASION
                    End If

                    objCommand3.Parameters.Add("@IMAGE_VIEW_TYPE", SqlDbType.NVarChar)
                    If IMAGE_VIEW_TYPE = "" Then
                        objCommand3.Parameters("@IMAGE_VIEW_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@IMAGE_VIEW_TYPE").Value = IMAGE_VIEW_TYPE
                    End If

                    objCommand3.Parameters.Add("@THEME", SqlDbType.NVarChar)
                    If THEME = "" Then
                        objCommand3.Parameters("@THEME").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@THEME").Value = THEME
                    End If

                    objCommand3.Parameters.Add("@STYLE", SqlDbType.NVarChar)
                    If STYLE = "" Then
                        objCommand3.Parameters("@STYLE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@STYLE").Value = STYLE
                    End If

                    objCommand3.Parameters.Add("@CULTURE", SqlDbType.NVarChar)
                    If CULTURE = "" Then
                        objCommand3.Parameters("@CULTURE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CULTURE").Value = CULTURE
                    End If

                    objCommand3.Parameters.Add("@CURRENT_SITE", SqlDbType.NVarChar)
                    If CURRENT_SITE = "" Then
                        objCommand3.Parameters("@CURRENT_SITE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CURRENT_SITE").Value = CURRENT_SITE
                    End If

                    objCommand3.Parameters.Add("@CREATION_SITE", SqlDbType.NVarChar)
                    If CREATION_SITE = "" Then
                        objCommand3.Parameters("@CREATION_SITE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@CREATION_SITE").Value = CREATION_SITE
                    End If

                    objCommand3.Parameters.Add("@YARNCOUNT", SqlDbType.NVarChar)
                    If YARNCOUNT = "" Then
                        objCommand3.Parameters("@YARNCOUNT").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@YARNCOUNT").Value = YARNCOUNT
                    End If

                    objCommand3.Parameters.Add("@MATERIAL_TYPE", SqlDbType.NVarChar)
                    If MATERIAL_TYPE = "" Then
                        objCommand3.Parameters("@MATERIAL_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@MATERIAL_TYPE").Value = MATERIAL_TYPE
                    End If

                    objCommand3.Parameters.Add("@TECHNIQUE", SqlDbType.NVarChar)
                    If TECHNIQUE = "" Then
                        objCommand3.Parameters("@TECHNIQUE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@TECHNIQUE").Value = TECHNIQUE
                    End If

                    objCommand3.Parameters.Add("@TECH_DETAILS", SqlDbType.NVarChar)
                    If TECH_DETAILS = "" Then
                        objCommand3.Parameters("@TECH_DETAILS").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@TECH_DETAILS").Value = TECH_DETAILS
                    End If

                    objCommand3.Parameters.Add("@INSCRIPTIONS", SqlDbType.NVarChar)
                    If INSCRIPTIONS = "" Then
                        objCommand3.Parameters("@INSCRIPTIONS").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@INSCRIPTIONS").Value = INSCRIPTIONS
                    End If

                    objCommand3.Parameters.Add("@DESCRIPTION", SqlDbType.NVarChar)
                    If DESCRIPTION = "" Then
                        objCommand3.Parameters("@DESCRIPTION").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@DESCRIPTION").Value = DESCRIPTION
                    End If

                    objCommand3.Parameters.Add("@GLOBE_TYPE", SqlDbType.NVarChar)
                    If GLOBE_TYPE = "" Then
                        objCommand3.Parameters("@GLOBE_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@GLOBE_TYPE").Value = GLOBE_TYPE
                    End If

                    objCommand3.Parameters.Add("@ALTER_DATE", SqlDbType.DateTime)
                    If ALTER_DATE = "" Then
                        objCommand3.Parameters("@ALTER_DATE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@ALTER_DATE").Value = ALTER_DATE
                    End If

                    objCommand3.Parameters.Add("@VIEW_DATE", SqlDbType.DateTime)
                    If VIEW_DATE = "" Then
                        objCommand3.Parameters("@VIEW_DATE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@VIEW_DATE").Value = VIEW_DATE
                    End If

                    objCommand3.Parameters.Add("@DATE_ADDED", SqlDbType.DateTime)
                    If DATE_ADDED = "" Then
                        objCommand3.Parameters("@DATE_ADDED").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@DATE_ADDED").Value = DATE_ADDED
                    End If

                    objCommand3.Parameters.Add("@USER_CODE", SqlDbType.NVarChar)
                    If USER_CODE = "" Then
                        objCommand3.Parameters("@USER_CODE").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@USER_CODE").Value = USER_CODE
                    End If

                    objCommand3.Parameters.Add("@IP", SqlDbType.VarChar)
                    If IP = "" Then
                        objCommand3.Parameters("@IP").Value = System.DBNull.Value
                    Else
                        objCommand3.Parameters("@IP").Value = IP
                    End If

                    objCommand3.ExecuteNonQuery()

                    thisTransaction.Commit()
                    SqlConn.Close()
                End If
            Next
        End If

    End Sub
    Public Sub ClearFields()
        txt_Cat_TotalVol.Text = ""
        txt_Cat_ISBN.Text = ""
        txt_Cat_SPNo.Text = ""
        txt_Cat_ManualNo.Text = ""
        txt_Cat_ReportNo.Text = ""
        txt_Cat_Title.Text = ""
        txt_Cat_SubTitle.Text = ""
        txt_Cat_VarTitle.Text = ""
        txt_Cat_ScholarName.Text = ""
        txt_Cat_ScholarDept.Text = ""
        txt_Cat_GuideName.Text = ""
        txt_Cat_GuideDept.Text = ""
        txt_Cat_DegreeName.Text = ""
        txt_Cat_SPRevision.Text = ""
        txt_Cat_ManualRevision.Text = ""
        txt_Cat_PatentNo.Text = ""
        txt_Cat_Patentee.Text = ""
        txt_Cat_PatentInventor.Text = ""
        txt_Cat_ConfName.Text = ""
        txt_Cat_SDate.Text = ""
        txt_Cat_EDate.Text = ""
        txt_Cat_ConfPlace.Text = ""
        txt_Cat_Author1.Text = ""
        txt_Cat_Author2.Text = ""
        txt_Cat_Author3.Text = ""
        txt_Cat_Editor.Text = ""
        txt_Cat_Translator.Text = ""
        txt_Cat_Illustrator.Text = ""
        txt_Cat_Compiler.Text = ""
        txt_Cat_Commentator.Text = ""
        txt_Cat_RevisedBy.Text = ""
        txt_Cat_CorpAuthor.Text = ""
        txt_Cat_Edition.Text = ""
        txt_Cat_Reprint.Text = ""
        Pub_ComboBox.ClearSelection()
        txt_Cat_Place.Text = ""
        DDL_Countries.Text = ""
        txt_Cat_Series.Text = ""
        txt_Cat_SeriesEditor.Text = ""
        txt_Cat_Note.Text = ""
        txt_Cat_Remarks.Text = ""
        txt_Cat_URL.Text = ""
        txt_Cat_Comments.Text = ""
        DDL_Subjects.ClearSelection()
        txt_Cat_Keywords.Text = ""
        txt_Cat_TrFrom.Text = ""
        txt_Cat_Abstract.Text = ""
        txt_Cat_ReferenceNo.Text = ""
        txt_Cat_SPAmmendments.Text = ""
        txt_Cat_SPTCSC.Text = ""
        txt_Cat_SPUpdates.Text = ""
        txt_Cat_ReaffirmYear.Text = ""
        txt_Cat_WithdrawYear.Text = ""
        txt_Cat_SPIssueBody.Text = ""
        ' Me.Label7.Text = ""
        txt_Display_Value.Text = ""
        Image1.ImageUrl = ""
        CheckBox1.Visible = False


        txt_Cat_Producer.Text = ""
        txt_Cat_ProductionYear.Text = ""
        txt_Cat_Designer.Text = ""
        txt_Cat_Manufacturer.Text = ""
        txt_Cat_Creater.Text = ""
        txt_Cat_RoleofCreator.Text = ""
        txt_Cat_Materials.Text = ""
        txt_Cat_Techniq.Text = ""
        txt_Cat_WrokCategory.Text = ""
        txt_Cat_WorkType.Text = ""
        txt_Cat_RelatedWork.Text = ""
        txt_Cat_Source.Text = ""
        txt_Cat_Photographer.Text = ""
        txt_Cat_Nationality.Text = ""
        txt_Cat_Chairman.Text = ""
        DDL_Government.ClearSelection()
        txt_Cat_ActNo.Text = ""
        txt_Cat_ActYear.Text = ""

        DDL_AcqModes.ClearSelection()
        DDL_Currencies.ClearSelection()
        DDL_Vendors.ClearSelection()
        txt_Acq_ItemPrice.Text = ""
        txt_Acq_ConversionRate.Text = ""
        txt_Acq_ItemRupees.Text = ""
        txt_Acq_OtherCharges.Text = ""

        Me.txt_Hold_AccDate.Text = ""
        Me.txt_Hold_AccNo.Text = ""
        Me.txt_Hold_BookNo.Text = ""
        Me.txt_Hold_ClassNo.Text = ""
        Me.txt_Hold_CompilationDate.Text = ""
        Me.txt_Hold_Coordinates.Text = ""
        Me.txt_Hold_CopyISBN.Text = ""
        Me.txt_Hold_CreationDate.Text = ""
        Me.txt_Hold_DataGatheringDate.Text = ""
        Me.txt_Hold_GeographicLocation.Text = ""
        Me.txt_Hold_InspectionDate.Text = ""
        Me.txt_Hold_Location.Text = ""
        Me.txt_Hold_Pages.Text = ""
        Me.txt_Hold_Projection.Text = ""
        Me.txt_Hold_RecordingCategory.Text = ""
        Me.txt_Hold_RecordingDuration.Text = ""
        Me.txt_Hold_RecordingForm.Text = ""
        Me.txt_Hold_RecordingFormat.Text = ""
        Me.txt_Hold_RecordingMedium.Text = ""
        Me.txt_Hold_RecordingSpeed.Text = ""
        Me.txt_Hold_RecordingStorageTech.Text = ""
        Me.txt_Hold_ReferenceNo.Text = ""
        Me.txt_Hold_Remarks.Text = ""
        Me.txt_Hold_Scale.Text = ""
        Me.txt_Hold_Size.Text = ""
        Me.txt_Hold_TypeOfVisuals.Text = ""
        Me.txt_Hold_VolEditors.Text = ""
        Me.txt_Hold_VolNo.Text = ""
        Me.txt_Hold_VolTitle.Text = ""
        Me.txt_Hold_VolYear.Text = ""

        txt_Hold_Color.Text = ""
        txt_Hold_PlayBackChannel.Text = ""
        txt_Hold_TapeWidth.Text = ""
        txt_Hold_TapeConfiguration.Text = ""
        txt_Hold_KindofDisk.Text = ""
        txt_Hold_KindofCutting.Text = ""
        txt_Hold_EncodingStandard.Text = ""
        txt_Hold_CaptureTechnique.Text = ""
        txt_Hold_PhotoNo.Text = ""
        txt_Hold_PhotoAlbumNo.Text = ""
        txt_Hold_Color.Text = ""
        txt_Hold_Ocasion.Text = ""
        txt_Hold_ImageViewType.Text = ""
        txt_Hold_ViewDate.Text = ""
        txt_Hold_Theme.Text = ""
        txt_Hold_Style.Text = ""
        txt_Hold_Culture.Text = ""
        txt_Hold_CurrentSite.Text = ""
        txt_Hold_CreationSite.Text = ""
        txt_Hold_YarnCount.Text = ""
        txt_Hold_MaterialsType.Text = ""
        txt_Hold_Technique.Text = ""
        txt_Hold_TechDetails.Text = ""
        txt_Hold_Inscription.Text = ""
        txt_Hold_Description.Text = ""
        txt_Hold_GlobeType.Text = ""
        txt_Hold_AlterDate.Text = ""
        DDL_AccMaterials.ClearSelection()
        Me.DDL_GeographicMedium.ClearSelection()



    End Sub
    'enable/disable Total vol text box
    Protected Sub DDL_YesNo_TextChanged(ByVal sender As Object, ByVal e As EventArgs) Handles DDL_YesNo.TextChanged
        If DDL_YesNo.Text = "N" Then
            txt_Cat_TotalVol.Enabled = False
            TR_VOL_NO.Visible = False
            TR_VOL_EDITORS.Visible = False
            TR_VOL_TITLE.Visible = False
        Else
            txt_Cat_TotalVol.Enabled = True
            TR_VOL_NO.Visible = True
            TR_VOL_EDITORS.Visible = True
            TR_VOL_TITLE.Visible = True
        End If
        DDL_YesNo.Focus()
    End Sub
    'display record
    Public Function DisplayRecord()
        Dim dt As New DataTable
        Try
            Dim iloop As Integer
            Dim strcurrentchar As Object
            Dim c As Integer
            Dim counter1 As Integer

            Dim myDisplayValue As Object = Nothing
            Dim myDisplayField As Object = Nothing
            If Trim(txt_Display_Value.Text) <> "" Then
                myDisplayValue = TrimAll(txt_Display_Value.Text)
                myDisplayValue = RemoveQuotes(myDisplayValue)
                If Trim(DDL_Display.Text) <> "" Then
                    myDisplayField = DDL_Display.SelectedValue
                    myDisplayField = RemoveQuotes(myDisplayField)
                Else
                    myDisplayField = "CAT_NO"
                End If
            Else
                ClearFields()
                Exit Function
            End If

            'get record details from database
            Dim SQL As String = Nothing
            If myDisplayField = "CAT_NO" Then
                If IsNumeric(myDisplayValue) = False Then
                    Label6.Text = "Cat Number value must be Numeric Only!"
                    Label15.Text = ""
                    ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert('Cat No must be Numeric Only ');", True)
                    Exit Function
                Else
                    SQL = "SELECT *  FROM CATS WHERE (CAT_NO = '" & Trim(myDisplayValue) & "') "
                End If
            End If
            If myDisplayField = "STANDARD_NO" Then
                SQL = "SELECT *  FROM CATS WHERE (STANDARD_NO = '" & Trim(myDisplayValue) & "') "
            End If
            If myDisplayField = "ACCESSION_NO" Then
                SQL = "SELECT *  FROM CATS where CAT_NO = (SELECT CAT_NO FROM HOLDINGS WHERE (LIB_CODE ='" & Trim(LibCode) & "'  AND ACCESSION_NO ='" & myDisplayValue & "'))"
            End If
            Dim ds As New DataSet
            Dim da As New SqlDataAdapter(SQL, SqlConn)
            If SqlConn.State = 0 Then
                SqlConn.Open()
            End If
            da.Fill(ds)

            dt = ds.Tables(0).Copy
            ClearFields()

            If dt.Rows.Count <> 0 Then
                If dt.Rows(0).Item("BIB_CODE").ToString <> "" Then
                    Me.DDL_Bib_Level.SelectedValue = dt.Rows(0).Item("BIB_CODE").ToString
                Else
                    DDL_Bib_Level.SelectedValue = "M"
                End If
                If dt.Rows(0).Item("MAT_CODE").ToString <> "" Then
                    Dim sender As Object = Nothing
                    Dim e As Object = Nothing
                    DDL_Bib_Level_SelectedIndexChanged(sender, e)
                    Me.DDL_Mat_Type.SelectedValue = dt.Rows(0).Item("MAT_CODE").ToString
                Else
                    DDL_Mat_Type.SelectedValue = "B"
                End If
                If dt.Rows(0).Item("DOC_TYPE_CODE").ToString <> "" Then
                    Dim sender As Object = Nothing
                    Dim e As Object = Nothing
                    DDL_Mat_Type_SelectedIndexChanged(sender, e)
                    Me.DDL_Doc_Type.SelectedValue = dt.Rows(0).Item("DOC_TYPE_CODE").ToString
                    LoadDeFormats()
                Else
                    DDL_Doc_Type.SelectedValue = "BK"
                End If

                Label_CatLevel.Text = dt.Rows(0).Item("CAT_LEVEL").ToString

                If dt.Rows(0).Item("LANG_CODE").ToString <> "" Then
                    Me.DDL_Lang.SelectedValue = dt.Rows(0).Item("LANG_CODE").ToString
                Else
                    DDL_Lang.SelectedValue = "ENG"
                End If
                If dt.Rows(0).Item("MULTI_VOL").ToString <> "" Then
                    Me.DDL_YesNo.SelectedValue = dt.Rows(0).Item("MULTI_VOL").ToString
                    TR_VOL_NO.Visible = True
                    TR_VOL_EDITORS.Visible = True
                    TR_VOL_TITLE.Visible = True
                Else
                    DDL_YesNo.ClearSelection()
                    TR_VOL_NO.Visible = False
                    TR_VOL_EDITORS.Visible = False
                    TR_VOL_TITLE.Visible = False
                End If
                If dt.Rows(0).Item("MULTI_VOL").ToString = "Y" Then
                    txt_Cat_TotalVol.Enabled = True
                Else
                    txt_Cat_TotalVol.Enabled = False
                End If
                If dt.Rows(0).Item("TOTAL_VOL").ToString <> "" Then
                    Me.txt_Cat_TotalVol.Text = dt.Rows(0).Item("TOTAL_VOL").ToString
                Else
                    txt_Cat_TotalVol.Text = ""
                End If
                If dt.Rows(0).Item("STANDARD_NO").ToString <> "" Then
                    Me.txt_Cat_ISBN.Text = dt.Rows(0).Item("STANDARD_NO").ToString
                Else
                    txt_Cat_ISBN.Text = ""
                End If
                If dt.Rows(0).Item("SP_NO").ToString <> "" Then
                    Me.txt_Cat_SPNo.Text = dt.Rows(0).Item("SP_NO").ToString
                Else
                    txt_Cat_SPNo.Text = ""
                End If
                If dt.Rows(0).Item("MANUAL_NO").ToString <> "" Then
                    Me.txt_Cat_ManualNo.Text = dt.Rows(0).Item("MANUAL_NO").ToString
                Else
                    txt_Cat_ManualNo.Text = ""
                End If
                If dt.Rows(0).Item("REPORT_NO").ToString <> "" Then
                    Me.txt_Cat_ReportNo.Text = dt.Rows(0).Item("REPORT_NO").ToString
                Else
                    txt_Cat_ReportNo.Text = ""
                End If
                If dt.Rows(0).Item("TITLE").ToString <> "" Then
                    Me.txt_Cat_Title.Text = dt.Rows(0).Item("TITLE").ToString
                Else
                    txt_Cat_Title.Text = ""
                End If
                If dt.Rows(0).Item("SUB_TITLE").ToString <> "" Then
                    Me.txt_Cat_SubTitle.Text = dt.Rows(0).Item("SUB_TITLE").ToString
                Else
                    txt_Cat_SubTitle.Text = ""
                End If
                If dt.Rows(0).Item("VAR_TITLE").ToString <> "" Then
                    Me.txt_Cat_VarTitle.Text = dt.Rows(0).Item("VAR_TITLE").ToString
                Else
                    txt_Cat_VarTitle.Text = ""
                End If
                If dt.Rows(0).Item("SCHOLAR_NAME").ToString <> "" Then
                    Me.txt_Cat_ScholarName.Text = dt.Rows(0).Item("SCHOLAR_NAME").ToString
                Else
                    txt_Cat_ScholarName.Text = ""
                End If
                If dt.Rows(0).Item("SCHOLAR_DEPT").ToString <> "" Then
                    Me.txt_Cat_ScholarDept.Text = dt.Rows(0).Item("SCHOLAR_DEPT").ToString
                Else
                    txt_Cat_ScholarDept.Text = ""
                End If
                If dt.Rows(0).Item("GUIDE_NAME").ToString <> "" Then
                    Me.txt_Cat_GuideName.Text = dt.Rows(0).Item("GUIDE_NAME").ToString
                Else
                    txt_Cat_GuideName.Text = ""
                End If
                If dt.Rows(0).Item("GUIDE_DEPT").ToString <> "" Then
                    Me.txt_Cat_GuideDept.Text = dt.Rows(0).Item("GUIDE_DEPT").ToString
                Else
                    txt_Cat_GuideDept.Text = ""
                End If
                If dt.Rows(0).Item("DEGREE_NAME").ToString <> "" Then
                    Me.txt_Cat_DegreeName.Text = dt.Rows(0).Item("DEGREE_NAME").ToString
                Else
                    txt_Cat_DegreeName.Text = ""
                End If
                If dt.Rows(0).Item("SP_VERSION").ToString <> "" Then
                    Me.txt_Cat_SPRevision.Text = dt.Rows(0).Item("SP_VERSION").ToString
                Else
                    txt_Cat_SPRevision.Text = ""
                End If
                If dt.Rows(0).Item("MANUAL_VER").ToString <> "" Then
                    Me.txt_Cat_ManualRevision.Text = dt.Rows(0).Item("MANUAL_VER").ToString
                Else
                    txt_Cat_ManualRevision.Text = ""
                End If
                If dt.Rows(0).Item("PATENT_NO").ToString <> "" Then
                    Me.txt_Cat_PatentNo.Text = dt.Rows(0).Item("PATENT_NO").ToString
                Else
                    txt_Cat_PatentNo.Text = ""
                End If
                If dt.Rows(0).Item("PATENTEE").ToString <> "" Then
                    Me.txt_Cat_Patentee.Text = dt.Rows(0).Item("PATENTEE").ToString
                Else
                    txt_Cat_Patentee.Text = ""
                End If
                If dt.Rows(0).Item("PATENT_INVENTOR").ToString <> "" Then
                    Me.txt_Cat_PatentInventor.Text = dt.Rows(0).Item("PATENT_INVENTOR").ToString
                Else
                    txt_Cat_PatentInventor.Text = ""
                End If
                If dt.Rows(0).Item("CONF_NAME").ToString <> "" Then
                    Me.txt_Cat_ConfName.Text = dt.Rows(0).Item("CONF_NAME").ToString
                Else
                    txt_Cat_ConfName.Text = ""
                End If
                If dt.Rows(0).Item("CONF_FROM").ToString <> "" Then
                    Me.txt_Cat_SDate.Text = Format(dt.Rows(0).Item("CONF_FROM"), "dd/MM/yyyy")
                Else
                    txt_Cat_SDate.Text = ""
                End If
                If dt.Rows(0).Item("CONF_TO").ToString <> "" Then
                    Me.txt_Cat_EDate.Text = Format(dt.Rows(0).Item("CONF_TO"), "dd/MM/yyyy")
                Else
                    txt_Cat_EDate.Text = ""
                End If
                If dt.Rows(0).Item("CONF_PLACE").ToString <> "" Then
                    Me.txt_Cat_ConfPlace.Text = dt.Rows(0).Item("CONF_PLACE").ToString
                Else
                    txt_Cat_ConfPlace.Text = ""
                End If
                If dt.Rows(0).Item("AUTHOR1").ToString <> "" Then
                    Me.txt_Cat_Author1.Text = dt.Rows(0).Item("AUTHOR1").ToString
                Else
                    txt_Cat_Author1.Text = ""
                End If
                If dt.Rows(0).Item("AUTHOR2").ToString <> "" Then
                    Me.txt_Cat_Author2.Text = dt.Rows(0).Item("AUTHOR2").ToString
                Else
                    txt_Cat_Author2.Text = ""
                End If
                If dt.Rows(0).Item("AUTHOR3").ToString <> "" Then
                    Me.txt_Cat_Author3.Text = dt.Rows(0).Item("AUTHOR3").ToString
                Else
                    txt_Cat_Author3.Text = ""
                End If
                If dt.Rows(0).Item("EDITOR").ToString <> "" Then
                    Me.txt_Cat_Editor.Text = dt.Rows(0).Item("EDITOR").ToString
                Else
                    txt_Cat_Editor.Text = ""
                End If
                If dt.Rows(0).Item("TRANSLATOR").ToString <> "" Then
                    Me.txt_Cat_Translator.Text = dt.Rows(0).Item("TRANSLATOR").ToString
                Else
                    txt_Cat_Translator.Text = ""
                End If
                If dt.Rows(0).Item("ILLUSTRATOR").ToString <> "" Then
                    Me.txt_Cat_Illustrator.Text = dt.Rows(0).Item("ILLUSTRATOR").ToString
                Else
                    txt_Cat_Illustrator.Text = ""
                End If
                If dt.Rows(0).Item("COMPILER").ToString <> "" Then
                    Me.txt_Cat_Compiler.Text = dt.Rows(0).Item("COMPILER").ToString
                Else
                    txt_Cat_Compiler.Text = ""
                End If
                If dt.Rows(0).Item("COMMENTATORS").ToString <> "" Then
                    Me.txt_Cat_Commentator.Text = dt.Rows(0).Item("COMMENTATORS").ToString
                Else
                    txt_Cat_Commentator.Text = ""
                End If
                If dt.Rows(0).Item("REVISED_BY").ToString <> "" Then
                    Me.txt_Cat_RevisedBy.Text = dt.Rows(0).Item("REVISED_BY").ToString
                Else
                    txt_Cat_RevisedBy.Text = ""
                End If
                If dt.Rows(0).Item("CORPORATE_AUTHOR").ToString <> "" Then
                    Me.txt_Cat_CorpAuthor.Text = dt.Rows(0).Item("CORPORATE_AUTHOR").ToString
                Else
                    txt_Cat_CorpAuthor.Text = ""
                End If
                If dt.Rows(0).Item("EDITION").ToString <> "" Then
                    Me.txt_Cat_Edition.Text = dt.Rows(0).Item("EDITION").ToString
                Else
                    txt_Cat_Edition.Text = ""
                End If
                If dt.Rows(0).Item("REPRINTS").ToString <> "" Then
                    Me.txt_Cat_Reprint.Text = dt.Rows(0).Item("REPRINTS").ToString
                Else
                    txt_Cat_Reprint.Text = ""
                End If
                If dt.Rows(0).Item("PUB_ID").ToString <> "" Then
                    Me.Pub_ComboBox.SelectedValue = dt.Rows(0).Item("PUB_ID").ToString
                Else
                    Pub_ComboBox.ClearSelection()
                End If
                If dt.Rows(0).Item("PLACE_OF_PUB").ToString <> "" Then
                    Me.txt_Cat_Place.Text = dt.Rows(0).Item("PLACE_OF_PUB").ToString
                Else
                    txt_Cat_Place.Text = ""
                End If
                If dt.Rows(0).Item("CON_CODE").ToString <> "" Then
                    Me.DDL_Countries.Text = dt.Rows(0).Item("CON_CODE").ToString
                Else
                    DDL_Countries.ClearSelection()
                End If
                If dt.Rows(0).Item("YEAR_OF_PUB").ToString <> "" Then
                    Me.txt_Cat_Year.Text = dt.Rows(0).Item("YEAR_OF_PUB").ToString
                Else
                    txt_Cat_Year.Text = ""
                End If
                If dt.Rows(0).Item("SERIES_TITLE").ToString <> "" Then
                    Me.txt_Cat_Series.Text = dt.Rows(0).Item("SERIES_TITLE").ToString
                Else
                    txt_Cat_Series.Text = ""
                End If
                If dt.Rows(0).Item("SERIES_EDITOR").ToString <> "" Then
                    Me.txt_Cat_SeriesEditor.Text = dt.Rows(0).Item("SERIES_EDITOR").ToString
                Else
                    txt_Cat_SeriesEditor.Text = ""
                End If
                If dt.Rows(0).Item("NOTE").ToString <> "" Then
                    Me.txt_Cat_Note.Text = dt.Rows(0).Item("NOTE").ToString
                Else
                    txt_Cat_Note.Text = ""
                End If
                If dt.Rows(0).Item("REMARKS").ToString <> "" Then
                    Me.txt_Cat_Remarks.Text = dt.Rows(0).Item("REMARKS").ToString
                Else
                    txt_Cat_Remarks.Text = ""
                End If
                If dt.Rows(0).Item("URL").ToString <> "" Then
                    Me.txt_Cat_URL.Text = dt.Rows(0).Item("URL").ToString
                Else
                    txt_Cat_URL.Text = ""
                End If
                If dt.Rows(0).Item("COMMENTS").ToString <> "" Then
                    Me.txt_Cat_Comments.Text = dt.Rows(0).Item("COMMENTS").ToString
                Else
                    txt_Cat_Comments.Text = ""
                End If
                If Convert.ToString(dt.Rows(0).Item("SUB_ID")) <> "" Then
                    Me.DDL_Subjects.SelectedValue = dt.Rows(0).Item("SUB_ID").ToString
                Else
                    DDL_Subjects.ClearSelection()
                End If
                If dt.Rows(0).Item("KEYWORDS").ToString <> "" Then
                    Me.txt_Cat_Keywords.Text = dt.Rows(0).Item("KEYWORDS").ToString
                Else
                    txt_Cat_Keywords.Text = ""
                End If
                If dt.Rows(0).Item("TR_FROM").ToString <> "" Then
                    Me.txt_Cat_TrFrom.Text = dt.Rows(0).Item("TR_FROM").ToString
                Else
                    txt_Cat_TrFrom.Text = ""
                End If
                If dt.Rows(0).Item("ABSTRACT").ToString <> "" Then
                    Me.txt_Cat_Abstract.Text = dt.Rows(0).Item("ABSTRACT").ToString
                Else
                    txt_Cat_Abstract.Text = ""
                End If
                If dt.Rows(0).Item("REFERENCE_NO").ToString <> "" Then
                    Me.txt_Cat_ReferenceNo.Text = dt.Rows(0).Item("REFERENCE_NO").ToString
                Else
                    txt_Cat_ReferenceNo.Text = ""
                End If

                If dt.Rows(0).Item("SP_TCSC").ToString <> "" Then
                    Me.txt_Cat_SPTCSC.Text = dt.Rows(0).Item("SP_TCSC").ToString
                Else
                    txt_Cat_SPTCSC.Text = ""
                End If

                If Convert.ToString(dt.Rows(0).Item("SP_REAFFIRM_YEAR")) <> "" Then
                    Me.txt_Cat_ReaffirmYear.Text = dt.Rows(0).Item("SP_REAFFIRM_YEAR").ToString
                Else
                    txt_Cat_ReaffirmYear.Text = ""
                End If
                If dt.Rows(0).Item("SP_UPDATES").ToString <> "" Then
                    Me.txt_Cat_SPUpdates.Text = dt.Rows(0).Item("SP_UPDATES").ToString
                Else
                    txt_Cat_SPUpdates.Text = ""
                End If

                If Convert.ToString(dt.Rows(0).Item("SP_WITHDRAW_YEAR")) <> "" Then
                    Me.txt_Cat_WithdrawYear.Text = dt.Rows(0).Item("SP_WITHDRAW_YEAR").ToString
                Else
                    txt_Cat_WithdrawYear.Text = ""
                End If
                If dt.Rows(0).Item("SP_AMMENDMENTS").ToString <> "" Then
                    Me.txt_Cat_SPAmmendments.Text = dt.Rows(0).Item("SP_AMMENDMENTS").ToString
                Else
                    txt_Cat_SPAmmendments.Text = ""
                End If
                If dt.Rows(0).Item("SP_ISSUE_BODY").ToString <> "" Then
                    Me.txt_Cat_SPIssueBody.Text = dt.Rows(0).Item("SP_ISSUE_BODY").ToString
                Else
                    txt_Cat_SPIssueBody.Text = ""
                End If

                If dt.Rows(0).Item("PRODUCER").ToString <> "" Then
                    Me.txt_Cat_Producer.Text = dt.Rows(0).Item("PRODUCER").ToString
                Else
                    txt_Cat_Producer.Text = ""
                End If
                If Convert.ToString(dt.Rows(0).Item("PRODUCTION_YEAR")) <> "" Then
                    Me.txt_Cat_ProductionYear.Text = dt.Rows(0).Item("PRODUCTION_YEAR").ToString
                Else
                    txt_Cat_ProductionYear.Text = ""
                End If
                If dt.Rows(0).Item("DESIGNER").ToString <> "" Then
                    Me.txt_Cat_Designer.Text = dt.Rows(0).Item("DESIGNER").ToString
                Else
                    txt_Cat_Designer.Text = ""
                End If
                If dt.Rows(0).Item("MANUFACTURER").ToString <> "" Then
                    Me.txt_Cat_Manufacturer.Text = dt.Rows(0).Item("MANUFACTURER").ToString
                Else
                    txt_Cat_Manufacturer.Text = ""
                End If
                If dt.Rows(0).Item("CREATOR").ToString <> "" Then
                    Me.txt_Cat_Creater.Text = dt.Rows(0).Item("CREATOR").ToString
                Else
                    txt_Cat_Creater.Text = ""
                End If
                If dt.Rows(0).Item("ROLE_OF_CREATOR").ToString <> "" Then
                    Me.txt_Cat_RoleofCreator.Text = dt.Rows(0).Item("ROLE_OF_CREATOR").ToString
                Else
                    txt_Cat_RoleofCreator.Text = ""
                End If
                If dt.Rows(0).Item("MATERIALS").ToString <> "" Then
                    Me.txt_Cat_Materials.Text = dt.Rows(0).Item("MATERIALS").ToString
                Else
                    txt_Cat_Materials.Text = ""
                End If
                If dt.Rows(0).Item("TECHNIQ").ToString <> "" Then
                    Me.txt_Cat_Techniq.Text = dt.Rows(0).Item("TECHNIQ").ToString
                Else
                    txt_Cat_Techniq.Text = ""
                End If

                If dt.Rows(0).Item("WORK_CATEGORY").ToString <> "" Then
                    Me.txt_Cat_WrokCategory.Text = dt.Rows(0).Item("WORK_CATEGORY").ToString
                Else
                    txt_Cat_WrokCategory.Text = ""
                End If

                If dt.Rows(0).Item("WORK_TYPE").ToString <> "" Then
                    Me.txt_Cat_WorkType.Text = dt.Rows(0).Item("WORK_TYPE").ToString
                Else
                    txt_Cat_WorkType.Text = ""
                End If

                If dt.Rows(0).Item("RELATED_WORK").ToString <> "" Then
                    Me.txt_Cat_RelatedWork.Text = dt.Rows(0).Item("RELATED_WORK").ToString
                Else
                    txt_Cat_RelatedWork.Text = ""
                End If

                If dt.Rows(0).Item("SOURCE").ToString <> "" Then
                    Me.txt_Cat_Source.Text = dt.Rows(0).Item("SOURCE").ToString
                Else
                    txt_Cat_Source.Text = ""
                End If

                If dt.Rows(0).Item("PHOTOGRAPHER").ToString <> "" Then
                    Me.txt_Cat_Photographer.Text = dt.Rows(0).Item("PHOTOGRAPHER").ToString
                Else
                    txt_Cat_Photographer.Text = ""
                End If

                If dt.Rows(0).Item("NATIONALITY").ToString <> "" Then
                    Me.txt_Cat_Nationality.Text = dt.Rows(0).Item("NATIONALITY").ToString
                Else
                    txt_Cat_Nationality.Text = ""
                End If

                If dt.Rows(0).Item("CHAIRMAN").ToString <> "" Then
                    Me.txt_Cat_Chairman.Text = dt.Rows(0).Item("CHAIRMAN").ToString
                Else
                    txt_Cat_Chairman.Text = ""
                End If

                If dt.Rows(0).Item("GOVERNMENT").ToString <> "" Then
                    Me.DDL_Government.SelectedValue = dt.Rows(0).Item("GOVERNMENT").ToString
                Else
                    DDL_Government.ClearSelection()
                End If

                If dt.Rows(0).Item("ACT_NO").ToString <> "" Then
                    Me.txt_Cat_ActNo.Text = dt.Rows(0).Item("ACT_NO").ToString
                Else
                    txt_Cat_ActNo.Text = ""
                End If

                If dt.Rows(0).Item("ACT_YEAR").ToString <> "" Then
                    Me.txt_Cat_ActYear.Text = dt.Rows(0).Item("ACT_YEAR").ToString
                Else
                    txt_Cat_ActYear.Text = ""
                End If


                Label7.Text = dt.Rows(0).Item("CAT_NO").ToString

                If dt.Rows(0).Item("PHOTO").ToString <> "" Then
                    Dim strURL As String = "~/Acquisition/Cats_GetPhoto.aspx?CAT_NO=" & Label7.Text & ""
                    Image1.ImageUrl = strURL
                    Image1.Visible = True
                Else
                    Image1.Visible = True
                End If

                If dt.Rows(0).Item("CONT_FILE").ToString <> "" Then
                    Dim strURL As String = "~/Acquisition/Cats_GetContents.aspx?CAT_NO=" & Label7.Text & ""
                    HyperLink1.Visible = True
                    HyperLink1.NavigateUrl = strURL
                    CheckBox3.Visible = True
                Else
                    HyperLink1.Visible = False
                    CheckBox3.Visible = False
                End If
                SqlConn.Close()

                Acq_Save_Bttn.Visible = False
                Acq_Update_Bttn.Visible = True
                Acq_Delete_Bttn.Visible = True
                Acq_SaveNew_Bttn.Visible = False
                Acq_AddCopy_Bttn.Visible = True
                Acq_SaveCopy_Bttn.Visible = False
                CheckBox1.Visible = True
                CheckBox1.Checked = False
                Label15.Text = "Press UPDATE Button to save the Changes if any.."
                Label6.Text = ""
                Table2.Visible = False
                Table4.Visible = False
            Else
                Label6.Text = "No Record to Edit... "
                Label7.Text = ""
                Label15.Text = ""
                Label_CatLevel.Text = ""
                Acq_Save_Bttn.Visible = True
                Acq_Update_Bttn.Visible = False
                Acq_Delete_Bttn.Visible = False
                Acq_SaveNew_Bttn.Visible = False
                Acq_AddCopy_Bttn.Visible = False
                Acq_SaveCopy_Bttn.Visible = False
                CheckBox1.Visible = False
                CheckBox1.Checked = False
                Table2.Visible = True
                If AcqRetro = "Y" Then
                    Table4.Visible = True
                Else
                    Table4.Visible = False
                End If
            End If
            PopulateHoldingsGrid()
        Catch ex As Exception
            Label6.Text = "Error: " & (ex.Message())
            Label15.Text = ""
        Finally
            dt.Dispose()
            SqlConn.Close()
        End Try
    End Function
    'display Cat Record   
    Public Sub txt_Display_Value_TextChanged(ByVal sender As Object, ByVal e As EventArgs) Handles txt_Display_Value.TextChanged
        Me.DisplayRecord()
        txt_Display_Value.Focus()
    End Sub
    'cancel button
    Protected Sub Acq_Cancel_Bttn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles Acq_Cancel_Bttn.Click
        ClearFields()
        Label7.Text = ""
        PopulateHoldingsGrid()
        LoadDeFormats()
        Table4.Visible = True
        Table2.Visible = True
        DDL_Currencies.SelectedValue = "INR"
        DDL_AcqModes.SelectedValue = "P"
        Label_ACQID.Text = ""
        Label_HoldID.Text = ""
        Label_CatLevel.Text = ""
        Label_ProcessStatus.Text = ""
        Acq_Save_Bttn.Visible = True
        Acq_Update_Bttn.Visible = False
        Acq_Delete_Bttn.Visible = False
        Acq_SaveNew_Bttn.Visible = False
        Acq_AddCopy_Bttn.Visible = False
        Acq_SaveCopy_Bttn.Visible = False
    End Sub
    Public Sub DisplayAcq()
        Dim dt As DataTable
        Try
            Dim CAT_NO As Long = Nothing
            If Label_ACQID.Text <> "" Then
                CAT_NO = Label7.Text
                'get record details from database
                Dim SQL As String = Nothing
                SQL = "SELECT *  FROM ACQUISITIONS WHERE (CAT_NO = '" & Trim(CAT_NO) & "') AND (LIB_CODE = '" & Trim(LibCode) & "')  AND (ACQ_ID = '" & Trim(Label_ACQID.Text) & "')"

                Dim ds As New DataSet
                Dim da As New SqlDataAdapter(SQL, SqlConn)
                If SqlConn.State = 0 Then
                    SqlConn.Open()
                End If
                da.Fill(ds)

                dt = ds.Tables(0).Copy

                If dt.Rows.Count <> 0 Then
                    Table4.Visible = True
                    Label_ProcessStatus.Text = dt.Rows(0).Item("PROCESS_STATUS").ToString
                    If dt.Rows(0).Item("ACQMODE_CODE").ToString <> "" Then
                        Me.DDL_AcqModes.SelectedValue = dt.Rows(0).Item("ACQMODE_CODE").ToString
                    Else
                        DDL_AcqModes.ClearSelection()
                    End If

                    If dt.Rows(0).Item("CUR_CODE").ToString <> "" Then
                        Me.DDL_Currencies.SelectedValue = dt.Rows(0).Item("CUR_CODE").ToString
                    Else
                        DDL_Currencies.ClearSelection()
                    End If

                    If dt.Rows(0).Item("VEND_ID").ToString <> "" Then
                        Me.DDL_Vendors.SelectedValue = dt.Rows(0).Item("VEND_ID").ToString
                    Else
                        DDL_Vendors.ClearSelection()
                    End If

                    If dt.Rows(0).Item("ITEM_PRICE").ToString <> "" Then
                        Me.txt_Acq_ItemPrice.Text = dt.Rows(0).Item("ITEM_PRICE").ToString
                    Else
                        txt_Acq_ItemPrice.Text = ""
                    End If

                    If dt.Rows(0).Item("CONVERSION_RATE").ToString <> "" Then
                        Me.txt_Acq_ConversionRate.Text = dt.Rows(0).Item("CONVERSION_RATE").ToString
                    Else
                        txt_Acq_ConversionRate.Text = ""
                    End If

                    If dt.Rows(0).Item("ITEM_RUPEES").ToString <> "" Then
                        Me.txt_Acq_ItemRupees.Text = dt.Rows(0).Item("ITEM_RUPEES").ToString
                    Else
                        txt_Acq_ItemRupees.Text = ""
                    End If

                    If dt.Rows(0).Item("OTHER_CHARGES").ToString <> "" Then
                        Me.txt_Acq_OtherCharges.Text = dt.Rows(0).Item("OTHER_CHARGES").ToString
                    Else
                        txt_Acq_OtherCharges.Text = ""
                    End If
                Else
                    If AcqRetro = "Y" Then
                        Table4.Visible = True
                    Else
                        Table4.Visible = False
                    End If
                    Label_ProcessStatus.Text = ""
                End If
            Else
                If AcqRetro = "Y" Then
                    Table4.Visible = True
                Else
                    Table4.Visible = False
                End If
                Label_ProcessStatus.Text = ""
            End If
        Catch ex As Exception
            Label6.Text = "Error in Displaying the Record!"
            Label15.Text = ""
            Label_ProcessStatus.Text = ""
        Finally
            SqlConn.Close()
        End Try
    End Sub
    'fill Grid with holdings
    Public Sub PopulateHoldingsGrid()
        Dim dtSearch As DataTable = Nothing
        Try
            If Label7.Text <> "" Then
                Dim SQL As String = Nothing
                SQL = "SELECT HOLD_ID, CAT_NO, ACQ_ID, ACCESSION_NO, ACCESSION_DATE, VOL_NO, CLASS_NO, BOOK_NO, PAGINATION, PHYSICAL_LOCATION, COLLECTION_TYPE, LIB_CODE FROM HOLDINGS WHERE (CAT_NO = '" & Label7.Text & "')   AND (LIB_CODE = '" & Trim(LibCode) & "') ORDER BY HOLD_ID DESC"

                Dim ds As New DataSet
                Dim da As New SqlDataAdapter(SQL, SqlConn)
                If SqlConn.State = 0 Then
                    SqlConn.Open()
                End If
                da.Fill(ds)

                dtSearch = ds.Tables(0).Copy
                Dim RecordCount As Long = 0
                If dtSearch.Rows.Count = 0 Then
                    Me.Grid2.DataSource = Nothing
                    Grid2.DataBind()
                    Label4.Text = "Display Holdings/Copies Record(s); Total Record(s): 0 "
                    Hold_Delete_Bttn.Visible = False
                    Acq_Delete_Bttn.Visible = True
                Else
                    Grid2.Visible = True
                    RecordCount = dtSearch.Rows.Count
                    Grid2.DataSource = dtSearch
                    Grid2.DataBind()
                    Label4.Text = "Display Holdings/Copies Record(s); Total Record(s): " & RecordCount
                    Hold_Delete_Bttn.Visible = True
                    Acq_Delete_Bttn.Visible = False
                End If
                ViewState("dt") = dtSearch
            Else
                Me.Grid2.DataSource = Nothing
                Grid2.DataBind()
                Label4.Text = "Display Holdings/Copies Record(s); Total Record(s): 0 "
                Hold_Delete_Bttn.Visible = False
                Acq_Delete_Bttn.Visible = True
            End If
            UpdatePanel1.Update()
        Catch s As Exception
            Label16.Text = "Error: " & (s.Message())
        Finally
            SqlConn.Close()
        End Try
    End Sub
    'grid view page index changing event
    Protected Sub Grid2_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs) Handles Grid2.PageIndexChanging
        Try
            'rebind datagrid
            Grid2.DataSource = ViewState("dt") 'temp
            Grid2.PageIndex = e.NewPageIndex
            index = e.NewPageIndex * Grid2.PageSize
            Grid2.DataBind()
        Catch s As Exception
            Label16.Text = "Error:  there is error in page index !"
        End Try
    End Sub
    'gridview sorting event
    Protected Sub Grid2_Sorting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewSortEventArgs) Handles Grid2.Sorting
        Dim temp As DataTable = CType(ViewState("dt"), DataTable)
        GridViewSortExpression = e.SortExpression
        Grid2.DataSource = temp
        Dim pageIndex As Integer = Grid2.PageIndex
        Grid2.DataSource = SortDataTable(Grid2.DataSource, False)
        Grid2.DataBind()
        Grid2.PageIndex = pageIndex
    End Sub
    Protected Sub Grid2_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs) Handles Grid2.RowDataBound

        If e.Row.RowType = DataControlRowType.DataRow Then
            Dim Lblsr As Label = e.Row.FindControl("lblsr")
            Srno = index + 1
            If Lblsr Is Nothing = False Then
                Lblsr.Text = Srno
                index += 1
            End If
        End If
    End Sub
    'get value of row from grid
    Private Sub Grid2_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs) Handles Grid2.RowCommand
        Dim Command As SqlCommand = Nothing
        Dim dr As SqlDataReader = Nothing
        Try
            If e.CommandName = "Select" Then
                Dim myRowID, HOLD_ID As Integer
                myRowID = e.CommandArgument.ToString()
                HOLD_ID = Grid2.DataKeys(myRowID).Value
                If Not String.IsNullOrEmpty(HOLD_ID) And HOLD_ID <> 0 Then
                    Dim iloop As Integer
                    Dim strcurrentchar As Object
                    Dim c As Integer
                    Dim counter1 As Integer

                    HOLD_ID = TrimX(HOLD_ID)
                    HOLD_ID = UCase(HOLD_ID)

                    HOLD_ID = RemoveQuotes(HOLD_ID)
                    If Len(HOLD_ID).ToString > 10 Then
                        Label15.Text = "Length of Input is not Proper!"
                        Label1.Text = ""
                        ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Length of Input is not Proper... ');", True)
                        Exit Sub
                    End If
                    HOLD_ID = " " & HOLD_ID & " "
                    If InStr(1, HOLD_ID, " CREATE ", 1) > 0 Or InStr(1, HOLD_ID, " DELETE ", 1) > 0 Or InStr(1, HOLD_ID, " DROP ", 1) > 0 Or InStr(1, HOLD_ID, " INSERT ", 1) > 1 Or InStr(1, HOLD_ID, " TRACK ", 1) > 1 Or InStr(1, HOLD_ID, " TRACE ", 1) > 1 Then
                        Label15.Text = "Do not use reserve words... !"
                        Label1.Text = ""
                        ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Do not use reserve words... ');", True)
                        Exit Sub
                    End If
                    HOLD_ID = TrimX(HOLD_ID)
                    'get record details from database
                    Dim SQL As String = Nothing
                    SQL = " SELECT *  FROM HOLDINGS WHERE (HOLD_ID = '" & Trim(HOLD_ID) & "') AND (LIB_CODE = '" & Trim(LibCode) & "')"
                    Command = New SqlCommand(SQL, SqlConn)
                    SqlConn.Open()
                    dr = Command.ExecuteReader(CommandBehavior.CloseConnection)
                    dr.Read()
                    'ClearFields()

                    If dr.HasRows = True Then

                        If dr.Item("ACQ_ID").ToString <> "" Then
                            Label_ACQID.Text = dr.Item("ACQ_ID").ToString
                        Else
                            Label_ACQID.Text = ""
                        End If

                        If dr.Item("HOLD_ID").ToString <> "" Then
                            Label_HoldID.Text = dr.Item("HOLD_ID").ToString
                        Else
                            Label_HoldID.Text = ""
                        End If

                        If dr.Item("ACCESSION_NO").ToString <> "" Then
                            txt_Hold_AccNo.Text = dr.Item("ACCESSION_NO").ToString
                        Else
                            txt_Hold_AccNo.Text = ""
                        End If

                        If dr.Item("ACCESSION_DATE").ToString <> "" Then
                            txt_Hold_AccDate.Text = Format(dr.Item("ACCESSION_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_AccDate.Text = ""
                        End If

                        If dr.Item("FORMAT_CODE").ToString <> "" Then
                            DDL_Format.SelectedValue = dr.Item("FORMAT_CODE").ToString
                        Else
                            DDL_Format.ClearSelection()
                        End If

                        If dr.Item("SHOW").ToString <> "" Then
                            DDL_Show.SelectedValue = dr.Item("SHOW").ToString
                        Else
                            DDL_Show.ClearSelection()
                        End If

                        If dr.Item("ISSUEABLE").ToString <> "" Then
                            DDL_Issuable.SelectedValue = dr.Item("ISSUEABLE").ToString
                        Else
                            DDL_Issuable.ClearSelection()
                        End If

                        If dr.Item("VOL_NO").ToString <> "" Then
                            txt_Hold_VolNo.Text = dr.Item("VOL_NO").ToString
                        Else
                            txt_Hold_VolNo.Text = ""
                        End If

                        If dr.Item("VOL_YEAR").ToString <> "" Then
                            txt_Hold_VolYear.Text = dr.Item("VOL_YEAR").ToString
                        Else
                            txt_Hold_VolYear.Text = ""
                        End If

                        If dr.Item("VOL_EDITORS").ToString <> "" Then
                            txt_Hold_VolEditors.Text = dr.Item("VOL_EDITORS").ToString
                        Else
                            txt_Hold_VolEditors.Text = ""
                        End If

                        If dr.Item("VOL_TITLE").ToString <> "" Then
                            txt_Hold_VolTitle.Text = dr.Item("VOL_TITLE").ToString
                        Else
                            txt_Hold_VolTitle.Text = ""
                        End If

                        If dr.Item("COPY_ISBN").ToString <> "" Then
                            txt_Hold_CopyISBN.Text = dr.Item("COPY_ISBN").ToString
                        Else
                            txt_Hold_CopyISBN.Text = ""
                        End If

                        If dr.Item("CLASS_NO").ToString <> "" Then
                            txt_Hold_ClassNo.Text = dr.Item("CLASS_NO").ToString
                        Else
                            txt_Hold_ClassNo.Text = ""
                        End If

                        If dr.Item("BOOK_NO").ToString <> "" Then
                            txt_Hold_BookNo.Text = dr.Item("BOOK_NO").ToString
                        Else
                            txt_Hold_BookNo.Text = ""
                        End If

                        If dr.Item("PAGINATION").ToString <> "" Then
                            txt_Hold_Pages.Text = dr.Item("PAGINATION").ToString
                        Else
                            txt_Hold_Pages.Text = ""
                        End If

                        If dr.Item("SIZE").ToString <> "" Then
                            txt_Hold_Size.Text = dr.Item("SIZE").ToString
                        Else
                            txt_Hold_Size.Text = ""
                        End If

                        If dr.Item("ILLUSTRATION").ToString <> "" Then
                            CB_Illus.Checked = True
                        Else
                            CB_Illus.Checked = False
                        End If

                        If dr.Item("COLLECTION_TYPE").ToString <> "" Then
                            DDL_CollectionType.SelectedValue = dr.Item("COLLECTION_TYPE").ToString
                        Else
                            DDL_CollectionType.ClearSelection()
                        End If

                        If dr.Item("STA_CODE").ToString <> "" Then
                            DDL_Status.SelectedValue = dr.Item("STA_CODE").ToString
                        Else
                            DDL_Status.ClearSelection()
                        End If

                        If dr.Item("BIND_CODE").ToString <> "" Then
                            DDL_Binding.SelectedValue = dr.Item("BIND_CODE").ToString
                        Else
                            DDL_Binding.ClearSelection()
                        End If

                        If dr.Item("SEC_CODE").ToString <> "" Then
                            DDL_Section.SelectedValue = dr.Item("SEC_CODE").ToString
                        Else
                            DDL_Section.ClearSelection()
                        End If

                        If dr.Item("LIB_CODE").ToString <> "" Then
                            DDL_Library.SelectedValue = dr.Item("LIB_CODE").ToString
                        Else
                            DDL_Library.ClearSelection()
                        End If

                        If dr.Item("ACC_MAT_CODE").ToString <> "" Then
                            DDL_AccMaterials.SelectedValue = dr.Item("ACC_MAT_CODE").ToString
                        Else
                            DDL_AccMaterials.ClearSelection()
                        End If

                        If dr.Item("REMARKS").ToString <> "" Then
                            txt_Hold_Remarks.Text = dr.Item("REMARKS").ToString
                        Else
                            txt_Hold_Remarks.Text = ""
                        End If

                        If dr.Item("PHYSICAL_LOCATION").ToString <> "" Then
                            txt_Hold_Location.Text = dr.Item("PHYSICAL_LOCATION").ToString
                        Else
                            txt_Hold_Location.Text = ""
                        End If

                        If dr.Item("REFERENCE_NO").ToString <> "" Then
                            txt_Hold_ReferenceNo.Text = dr.Item("REFERENCE_NO").ToString
                        Else
                            txt_Hold_ReferenceNo.Text = ""
                        End If

                        If dr.Item("MEDIUM").ToString <> "" Then
                            txt_Hold_RecordingMedium.Text = dr.Item("MEDIUM").ToString
                        Else
                            txt_Hold_RecordingMedium.Text = ""
                        End If

                        If dr.Item("RECORDING_CATEGORY").ToString <> "" Then
                            txt_Hold_RecordingCategory.Text = dr.Item("RECORDING_CATEGORY").ToString
                        Else
                            txt_Hold_RecordingCategory.Text = ""
                        End If

                        If dr.Item("RECORDING_FORM").ToString <> "" Then
                            txt_Hold_RecordingForm.Text = dr.Item("RECORDING_FORM").ToString
                        Else
                            txt_Hold_RecordingForm.Text = ""
                        End If

                        If dr.Item("RECORDING_FORMAT").ToString <> "" Then
                            txt_Hold_RecordingFormat.Text = dr.Item("RECORDING_FORMAT").ToString
                        Else
                            txt_Hold_RecordingFormat.Text = ""
                        End If

                        If dr.Item("RECORDING_SPEED").ToString <> "" Then
                            txt_Hold_RecordingSpeed.Text = dr.Item("RECORDING_SPEED").ToString
                        Else
                            txt_Hold_RecordingSpeed.Text = ""
                        End If

                        If dr.Item("RECORDING_STORAGE_TECH").ToString <> "" Then
                            txt_Hold_RecordingStorageTech.Text = dr.Item("RECORDING_STORAGE_TECH").ToString
                        Else
                            txt_Hold_RecordingStorageTech.Text = ""
                        End If

                        If dr.Item("RECORDING_PLAY_DURATION").ToString <> "" Then
                            txt_Hold_RecordingDuration.Text = dr.Item("RECORDING_PLAY_DURATION").ToString
                        Else
                            txt_Hold_RecordingDuration.Text = ""
                        End If

                        If dr.Item("VIDEO_TYPEOFVISUAL").ToString <> "" Then
                            txt_Hold_TypeOfVisuals.Text = dr.Item("VIDEO_TYPEOFVISUAL").ToString
                        Else
                            txt_Hold_TypeOfVisuals.Text = ""
                        End If

                        If dr.Item("CARTOGRAPHIC_SCALE").ToString <> "" Then
                            txt_Hold_Scale.Text = dr.Item("CARTOGRAPHIC_SCALE").ToString
                        Else
                            txt_Hold_Scale.Text = ""
                        End If

                        If dr.Item("CARTOGRAPHIC_PROJECTION").ToString <> "" Then
                            txt_Hold_Projection.Text = dr.Item("CARTOGRAPHIC_PROJECTION").ToString
                        Else
                            txt_Hold_Projection.Text = ""
                        End If

                        If dr.Item("CARTOGRAPHIC_COORDINATES").ToString <> "" Then
                            txt_Hold_Coordinates.Text = dr.Item("CARTOGRAPHIC_COORDINATES").ToString
                        Else
                            txt_Hold_Coordinates.Text = ""
                        End If

                        If dr.Item("CARTOGRAPHIC_GEOGRAPHIC_LOCATION").ToString <> "" Then
                            txt_Hold_GeographicLocation.Text = dr.Item("CARTOGRAPHIC_GEOGRAPHIC_LOCATION").ToString
                        Else
                            txt_Hold_GeographicLocation.Text = ""
                        End If

                        If dr.Item("CARTOGRAPHIC_MEDIUM").ToString <> "" Then
                            DDL_GeographicMedium.SelectedValue = dr.Item("CARTOGRAPHIC_MEDIUM").ToString
                        Else
                            DDL_GeographicMedium.ClearSelection()
                        End If

                        If dr.Item("CARTOGRAPHIC_DATAGATHERING_DATE").ToString <> "" Then
                            txt_Hold_DataGatheringDate.Text = Format(dr.Item("CARTOGRAPHIC_DATAGATHERING_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_DataGatheringDate.Text = ""
                        End If

                        If dr.Item("CREATION_DATE").ToString <> "" Then
                            txt_Hold_CreationDate.Text = Format(dr.Item("CREATION_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_CreationDate.Text = ""
                        End If

                        If dr.Item("CARTOGRAPHIC_COMPILATION_DATE").ToString <> "" Then
                            txt_Hold_CompilationDate.Text = Format(dr.Item("CARTOGRAPHIC_COMPILATION_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_CompilationDate.Text = ""
                        End If

                        If dr.Item("CARTOGRAPHIC_INSPECTION_DATE").ToString <> "" Then
                            txt_Hold_InspectionDate.Text = Format(dr.Item("CARTOGRAPHIC_INSPECTION_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_InspectionDate.Text = ""
                        End If

                        If dr.Item("ALTER_DATE").ToString <> "" Then
                            txt_Hold_AlterDate.Text = Format(dr.Item("ALTER_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_AlterDate.Text = ""
                        End If

                        If dr.Item("VIEW_DATE").ToString <> "" Then
                            txt_Hold_ViewDate.Text = Format(dr.Item("VIEW_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_ViewDate.Text = ""
                        End If

                        If dr.Item("VIDEO_COLOR").ToString <> "" Then
                            txt_Hold_Color.Text = dr.Item("VIDEO_COLOR").ToString
                        Else
                            txt_Hold_Color.Text = ""
                        End If

                        If dr.Item("PLAYBACK_CHANNELS").ToString <> "" Then
                            txt_Hold_PlayBackChannel.Text = dr.Item("PLAYBACK_CHANNELS").ToString
                        Else
                            txt_Hold_PlayBackChannel.Text = ""
                        End If

                        If dr.Item("TAPE_WIDTH").ToString <> "" Then
                            txt_Hold_TapeWidth.Text = dr.Item("TAPE_WIDTH").ToString
                        Else
                            txt_Hold_TapeWidth.Text = ""
                        End If

                        If dr.Item("TAPE_CONFIGURATION").ToString <> "" Then
                            txt_Hold_TapeConfiguration.Text = dr.Item("TAPE_CONFIGURATION").ToString
                        Else
                            txt_Hold_TapeConfiguration.Text = ""
                        End If

                        If dr.Item("KIND_OF_DISK").ToString <> "" Then
                            txt_Hold_KindofDisk.Text = dr.Item("KIND_OF_DISK").ToString
                        Else
                            txt_Hold_KindofDisk.Text = ""
                        End If

                        If dr.Item("KIND_OF_CUTTING").ToString <> "" Then
                            txt_Hold_KindofCutting.Text = dr.Item("KIND_OF_CUTTING").ToString
                        Else
                            txt_Hold_KindofCutting.Text = ""
                        End If

                        If dr.Item("ENCODING_STANDARD").ToString <> "" Then
                            txt_Hold_EncodingStandard.Text = dr.Item("ENCODING_STANDARD").ToString
                        Else
                            txt_Hold_EncodingStandard.Text = ""
                        End If

                        If dr.Item("CAPTURE_TECHNIQUE").ToString <> "" Then
                            txt_Hold_CaptureTechnique.Text = dr.Item("CAPTURE_TECHNIQUE").ToString
                        Else
                            txt_Hold_CaptureTechnique.Text = ""
                        End If

                        If dr.Item("PHOTO_NO").ToString <> "" Then
                            txt_Hold_PhotoNo.Text = dr.Item("PHOTO_NO").ToString
                        Else
                            txt_Hold_PhotoNo.Text = ""
                        End If

                        If dr.Item("PHOTO_ALBUM_NO").ToString <> "" Then
                            txt_Hold_PhotoAlbumNo.Text = dr.Item("PHOTO_ALBUM_NO").ToString
                        Else
                            txt_Hold_PhotoAlbumNo.Text = ""
                        End If

                        If dr.Item("PHOTO_OCASION").ToString <> "" Then
                            txt_Hold_Ocasion.Text = dr.Item("PHOTO_OCASION").ToString
                        Else
                            txt_Hold_Ocasion.Text = ""
                        End If

                        If dr.Item("IMAGE_VIEW_TYPE").ToString <> "" Then
                            txt_Hold_ImageViewType.Text = dr.Item("IMAGE_VIEW_TYPE").ToString
                        Else
                            txt_Hold_TapeConfiguration.Text = ""
                        End If

                        If dr.Item("THEME").ToString <> "" Then
                            txt_Hold_Theme.Text = dr.Item("THEME").ToString
                        Else
                            txt_Hold_Theme.Text = ""
                        End If

                        If dr.Item("STYLE").ToString <> "" Then
                            txt_Hold_Style.Text = dr.Item("STYLE").ToString
                        Else
                            txt_Hold_Style.Text = ""
                        End If

                        If dr.Item("CULTURE").ToString <> "" Then
                            txt_Hold_Culture.Text = dr.Item("CULTURE").ToString
                        Else
                            txt_Hold_Culture.Text = ""
                        End If

                        If dr.Item("CURRENT_SITE").ToString <> "" Then
                            txt_Hold_CurrentSite.Text = dr.Item("CURRENT_SITE").ToString
                        Else
                            txt_Hold_CurrentSite.Text = ""
                        End If

                        If dr.Item("CREATION_SITE").ToString <> "" Then
                            txt_Hold_CreationDate.Text = dr.Item("CREATION_SITE").ToString
                        Else
                            txt_Hold_CreationSite.Text = ""
                        End If

                        If dr.Item("YARNCOUNT").ToString <> "" Then
                            txt_Hold_YarnCount.Text = dr.Item("YARNCOUNT").ToString
                        Else
                            txt_Hold_YarnCount.Text = ""
                        End If

                        If dr.Item("MATERIAL_TYPE").ToString <> "" Then
                            txt_Hold_MaterialsType.Text = dr.Item("MATERIAL_TYPE").ToString
                        Else
                            txt_Hold_MaterialsType.Text = ""
                        End If

                        If dr.Item("TECHNIQUE").ToString <> "" Then
                            txt_Hold_Technique.Text = dr.Item("TECHNIQUE").ToString
                        Else
                            txt_Hold_Technique.Text = ""
                        End If

                        If dr.Item("TECH_DETAILS").ToString <> "" Then
                            txt_Hold_TechDetails.Text = dr.Item("TECH_DETAILS").ToString
                        Else
                            txt_Hold_TechDetails.Text = ""
                        End If

                        If dr.Item("INSCRIPTIONS").ToString <> "" Then
                            txt_Hold_Inscription.Text = dr.Item("INSCRIPTIONS").ToString
                        Else
                            txt_Hold_Inscription.Text = ""
                        End If

                        If dr.Item("DESCRIPTION").ToString <> "" Then
                            txt_Hold_Description.Text = dr.Item("DESCRIPTION").ToString
                        Else
                            txt_Hold_Description.Text = ""
                        End If

                        If dr.Item("GLOBE_TYPE").ToString <> "" Then
                            txt_Hold_GlobeType.Text = dr.Item("GLOBE_TYPE").ToString
                        Else
                            txt_Hold_GlobeType.Text = ""
                        End If
                        dr.Close()
                        Acq_SaveNew_Bttn.Visible = True
                        Acq_AddCopy_Bttn.Visible = False
                        Acq_SaveCopy_Bttn.Visible = True

                    Else
                        Label_ACQID.Text = ""
                        Label_HoldID.Text = ""
                        Acq_SaveNew_Bttn.Visible = False
                        Acq_AddCopy_Bttn.Visible = False
                        Acq_SaveCopy_Bttn.Visible = False
                        'ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' No Record Selected!');", True)
                    End If
                Else
                    Label_ACQID.Text = ""
                    Label_HoldID.Text = ""
                    Acq_SaveNew_Bttn.Visible = False
                    Acq_AddCopy_Bttn.Visible = False
                    Acq_SaveCopy_Bttn.Visible = False
                    ' ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' No Record Selected!');", True)
                End If
            End If
            LoadHoldFormat()
            DisplayAcq()
        Catch s As Exception
            Label6.Text = "Error: " & (s.Message())
            Label15.Text = ""
            Label_ACQID.Text = ""
            Label_HOLDID.Text = ""
        Finally
            SqlConn.Close()
            Me.txt_Hold_AccNo.Focus()
        End Try
    End Sub 'Grid1_ItemCommand
    'update cat record
    Protected Sub Acq_Update_Bttn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles Acq_Update_Bttn.Click
        Dim SQL As String = Nothing
        Dim da As SqlDataAdapter
        Dim cb As SqlCommandBuilder
        Dim ds As New DataSet
        Dim dt As New DataTable
        Dim thisTransaction As SqlClient.SqlTransaction = Nothing
        Try
            If IsPostBack = True Then
                If Label7.Text <> "" Then
                    Dim iloop As Integer
                    Dim strcurrentchar As Object
                    Dim c As Integer
                    Dim counter1, counter2, counter3, counter4, counter5, counter6, counter7, counter8, counter9, counter10, counter11, counter12, counter13, counter14, counter15, counter16, counter17, counter18, counter19 As Integer
                    Dim counter20, counter21, counter22, counter23, counter24, counter25, counter26, counter27, counter28, counter29, counter30, counter31, counter32, counter33, counter34, counter35, counter36, counter37, counter38, counter39 As Integer
                    Dim counter40, counter41, counter42, counter43, counter44, counter45, counter46, counter47, counter48, counter49, counter50, counter51, counter52, counter53, counter54 As Integer
                    Dim counter55, counter56, counter57, counter58, counter59, counter60 As Integer
                    Dim counter71, counter72, counter73, counter74, counter75 As Integer
                    '*****************************************************************************************************************
                    'validation for DDL_Bib_Level
                    Dim myBibLevel As Object = Nothing
                    myBibLevel = DDL_Bib_Level.SelectedValue
                    If Not String.IsNullOrEmpty(myBibLevel) Then
                        myBibLevel = RemoveQuotes(myBibLevel)
                        If myBibLevel.Length > 2 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Bib_Level.Focus()
                            Exit Sub
                        End If
                        myBibLevel = " " & myBibLevel & " "
                        If InStr(1, myBibLevel, "CREATE", 1) > 0 Or InStr(1, myBibLevel, "DELETE", 1) > 0 Or InStr(1, myBibLevel, "DROP", 1) > 0 Or InStr(1, myBibLevel, "INSERT", 1) > 1 Or InStr(1, myBibLevel, "TRACK", 1) > 1 Or InStr(1, myBibLevel, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Bib_Level.Focus()
                            Exit Sub
                        End If
                        myBibLevel = TrimX(myBibLevel)
                        'check unwanted characters
                        c = 0
                        counter1 = 0
                        For iloop = 1 To Len(myBibLevel)
                            strcurrentchar = Mid(myBibLevel, iloop, 1)
                            If c = 0 Then
                                If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter1 = 1
                                End If
                            End If
                        Next
                        If counter1 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Bib_Level.Focus()
                            Exit Sub
                        End If
                    Else
                        myBibLevel = "M"
                    End If

                    'validation for DDL_Mat_Type
                    Dim myMatType As Object = Nothing
                    myMatType = DDL_Mat_Type.SelectedValue
                    If Not String.IsNullOrEmpty(myMatType) Then
                        myMatType = RemoveQuotes(myMatType)
                        If myMatType.Length > 2 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Mat_Type.Focus()
                            Exit Sub
                        End If
                        myMatType = " " & myMatType & " "
                        If InStr(1, myMatType, "CREATE", 1) > 0 Or InStr(1, myMatType, "DELETE", 1) > 0 Or InStr(1, myMatType, "DROP", 1) > 0 Or InStr(1, myMatType, "INSERT", 1) > 1 Or InStr(1, myMatType, "TRACK", 1) > 1 Or InStr(1, myMatType, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Mat_Type.Focus()
                            Exit Sub
                        End If
                        myMatType = TrimX(myMatType)
                        'check unwanted characters
                        c = 0
                        counter2 = 0
                        For iloop = 1 To Len(myMatType)
                            strcurrentchar = Mid(myBibLevel, iloop, 1)
                            If c = 0 Then
                                If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter2 = 1
                                End If
                            End If
                        Next
                        If counter2 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Mat_Type.Focus()
                            Exit Sub
                        End If
                    Else
                        myMatType = "B"
                    End If

                    'validation for document Type
                    Dim myDocType As Object = Nothing
                    myDocType = DDL_Doc_Type.SelectedValue
                    If Not String.IsNullOrEmpty(myDocType) Then
                        myDocType = RemoveQuotes(myDocType)
                        If myDocType.Length > 4 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Doc_Type.Focus()
                            Exit Sub
                        End If
                        myDocType = " " & myDocType & " "
                        If InStr(1, myDocType, "CREATE", 1) > 0 Or InStr(1, myDocType, "DELETE", 1) > 0 Or InStr(1, myDocType, "DROP", 1) > 0 Or InStr(1, myDocType, "INSERT", 1) > 1 Or InStr(1, myDocType, "TRACK", 1) > 1 Or InStr(1, myDocType, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Doc_Type.Focus()
                            Exit Sub
                        End If
                        myDocType = TrimX(myDocType)
                        'check unwanted characters
                        c = 0
                        counter3 = 0
                        For iloop = 1 To Len(myDocType)
                            strcurrentchar = Mid(myDocType, iloop, 1)
                            If c = 0 Then
                                If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter3 = 1
                                End If
                            End If
                        Next
                        If counter3 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Doc_Type.Focus()
                            Exit Sub
                        End If
                    Else
                        myDocType = "BK"
                    End If

                    'validation for Lang DDL_Lang
                    Dim myLangCode As Object = Nothing
                    myLangCode = DDL_Lang.SelectedValue
                    If Not String.IsNullOrEmpty(myLangCode) Then
                        myLangCode = RemoveQuotes(myLangCode)
                        If myLangCode.Length > 4 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Lang.Focus()
                            Exit Sub
                        End If
                        myLangCode = " " & myLangCode & " "
                        If InStr(1, myLangCode, "CREATE", 1) > 0 Or InStr(1, myLangCode, "DELETE", 1) > 0 Or InStr(1, myLangCode, "DROP", 1) > 0 Or InStr(1, myLangCode, "INSERT", 1) > 1 Or InStr(1, myLangCode, "TRACK", 1) > 1 Or InStr(1, myLangCode, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Lang.Focus()
                            Exit Sub
                        End If
                        myLangCode = TrimX(myLangCode)
                        'check unwanted characters
                        c = 0
                        counter4 = 0
                        For iloop = 1 To Len(myLangCode)
                            strcurrentchar = Mid(myLangCode, iloop, 1)
                            If c = 0 Then
                                If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter4 = 1
                                End If
                            End If
                        Next
                        If counter4 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Lang.Focus()
                            Exit Sub
                        End If
                    Else
                        myLangCode = "ENG"
                    End If

                    'DDL_YesNo for Multi-Vol Y/N
                    Dim myYesNo As Object = Nothing
                    myYesNo = DDL_YesNo.SelectedValue
                    If Not String.IsNullOrEmpty(myYesNo) Then
                        myYesNo = RemoveQuotes(myYesNo)
                        If myYesNo.Length > 2 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_YesNo.Focus()
                            Exit Sub
                        End If
                        myYesNo = " " & myYesNo & " "
                        If InStr(1, myYesNo, "CREATE", 1) > 0 Or InStr(1, myYesNo, "DELETE", 1) > 0 Or InStr(1, myYesNo, "DROP", 1) > 0 Or InStr(1, myYesNo, "INSERT", 1) > 1 Or InStr(1, myYesNo, "TRACK", 1) > 1 Or InStr(1, myYesNo, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_YesNo.Focus()
                            Exit Sub
                        End If
                        myYesNo = TrimX(myYesNo)
                        'check unwanted characters
                        c = 0
                        counter5 = 0
                        For iloop = 1 To Len(myYesNo)
                            strcurrentchar = Mid(myYesNo, iloop, 1)
                            If c = 0 Then
                                If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter5 = 1
                                End If
                            End If
                        Next
                        If counter5 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_YesNo.Focus()
                            Exit Sub
                        End If
                    Else
                        myYesNo = "N"
                    End If


                    'Server Validation for  total vol - numeric only
                    Dim TotalVol As Integer = Nothing
                    If myYesNo = "Y" Then
                        If txt_Cat_TotalVol.Text <> "" Then
                            TotalVol = TrimX(txt_Cat_TotalVol.Text)
                            TotalVol = RemoveQuotes(TotalVol)
                            If Len(TotalVol.ToString) > 5 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Cat_TotalVol.Focus()
                                Exit Sub
                            End If

                            If Not IsNumeric(TotalVol) = True Then 'maximum length
                                Label6.Text = " Data must be Numeric Only.. "
                                Label15.Text = ""
                                txt_Cat_TotalVol.Focus()
                                Exit Sub
                            End If

                            TotalVol = " " & TotalVol & " "
                            If InStr(1, TotalVol, "CREATE", 1) > 0 Or InStr(1, TotalVol, "DELETE", 1) > 0 Or InStr(1, TotalVol, "DROP", 1) > 0 Or InStr(1, TotalVol, "INSERT", 1) > 1 Or InStr(1, TotalVol, "TRACK", 1) > 1 Or InStr(1, TotalVol, "TRACE", 1) > 1 Then
                                Label6.Text = " Do Not use Reserve Words... "
                                Label15.Text = ""
                                Me.txt_Cat_TotalVol.Focus()
                                Exit Sub
                            End If
                            TotalVol = TrimX(TotalVol)
                            'check unwanted characters
                            c = 0
                            counter6 = 0
                            For iloop = 1 To Len(TotalVol.ToString)
                                strcurrentchar = Mid(TotalVol, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'~!@#$^*+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter6 = 1
                                    End If
                                End If
                            Next
                            If counter6 = 1 Then
                                Label6.Text = " Do Not use un-wanted Characters... "
                                Label15.Text = ""
                                Me.txt_Cat_TotalVol.Focus()
                                Exit Sub
                            End If
                        Else
                            TotalVol = Nothing
                        End If
                    End If

                    'Server Validation for txt_Cat_ISBN
                    Dim myISBN As Object = Nothing
                    If txt_Cat_ISBN.Text <> "" Then
                        myISBN = TrimX(txt_Cat_ISBN.Text)
                        myISBN = RemoveQuotes(myISBN)
                        If myISBN.Length > 30 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ISBN.Focus()
                            Exit Sub
                        End If

                        myISBN = " " & myISBN & " "
                        If InStr(1, myISBN, "CREATE", 1) > 0 Or InStr(1, myISBN, "DELETE", 1) > 0 Or InStr(1, myISBN, "DROP", 1) > 0 Or InStr(1, myISBN, "INSERT", 1) > 1 Or InStr(1, myISBN, "TRACK", 1) > 1 Or InStr(1, myISBN, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ISBN.Focus()
                            Exit Sub
                        End If
                        myISBN = TrimX(myISBN)
                        'check unwanted characters
                        c = 0
                        counter7 = 0
                        For iloop = 1 To Len(myISBN.ToString)
                            strcurrentchar = Mid(myISBN, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#$^*+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter7 = 1
                                End If
                            End If
                        Next
                        If counter7 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ISBN.Focus()
                            Exit Sub
                        End If
                        'check duplicate isbn
                        Dim str As Object = Nothing
                        Dim flag As Object = Nothing
                        str = "SELECT CAT_NO FROM CATS WHERE (replace(STANDARD_NO,'-','') = '" & Replace(myISBN.ToString, "-", "") & "' AND CAT_NO<> ' " & Trim(Label7.Text) & "') "
                        Dim cmd1 As New SqlCommand(str, SqlConn)
                        SqlConn.Open()
                        flag = cmd1.ExecuteScalar
                        If flag <> Nothing Then
                            Label6.Text = "This ISBN Already Exists ! "
                            Label15.Text = ""
                            Me.txt_Cat_ISBN.Focus()
                            Exit Sub
                        End If
                        SqlConn.Close()
                    Else
                        myISBN = ""
                    End If

                    'Server validation for Standard Specification No : txt_Cat_SPNo
                    Dim mySPNo As Object = Nothing
                    If txt_Cat_SPNo.Text <> "" Then
                        mySPNo = TrimX(txt_Cat_SPNo.Text)
                        mySPNo = RemoveQuotes(mySPNo)
                        If mySPNo.Length > 100 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_SPNo.Focus()
                            Exit Sub
                        End If

                        mySPNo = " " & mySPNo & " "
                        If InStr(1, mySPNo, "CREATE", 1) > 0 Or InStr(1, mySPNo, "DELETE", 1) > 0 Or InStr(1, mySPNo, "DROP", 1) > 0 Or InStr(1, mySPNo, "INSERT", 1) > 1 Or InStr(1, mySPNo, "TRACK", 1) > 1 Or InStr(1, mySPNo, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_SPNo.Focus()
                            Exit Sub
                        End If
                        mySPNo = TrimX(mySPNo)
                        'check unwanted characters
                        c = 0
                        counter8 = 0
                        For iloop = 1 To Len(mySPNo.ToString)
                            strcurrentchar = Mid(mySPNo, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#$^*+|?<>=%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter8 = 1
                                End If
                            End If
                        Next
                        If counter8 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_SPNo.Focus()
                            Exit Sub
                        End If
                    Else
                        mySPNo = ""
                    End If

                    'Server validation for Standard Specification No : txt_Cat_ManualNo
                    Dim myManualNo As Object = Nothing
                    If txt_Cat_ManualNo.Text <> "" Then
                        myManualNo = TrimX(txt_Cat_ManualNo.Text)
                        myManualNo = RemoveQuotes(myManualNo)
                        If myManualNo.Length > 100 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ManualNo.Focus()
                            Exit Sub
                        End If

                        myManualNo = " " & myManualNo & " "
                        If InStr(1, myManualNo, "CREATE", 1) > 0 Or InStr(1, myManualNo, "DELETE", 1) > 0 Or InStr(1, myManualNo, "DROP", 1) > 0 Or InStr(1, myManualNo, "INSERT", 1) > 1 Or InStr(1, myManualNo, "TRACK", 1) > 1 Or InStr(1, myManualNo, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ManualNo.Focus()
                            Exit Sub
                        End If
                        myManualNo = TrimX(myManualNo)
                        'check unwanted characters
                        c = 0
                        counter9 = 0
                        For iloop = 1 To Len(myManualNo.ToString)
                            strcurrentchar = Mid(myManualNo, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#$^*+|?<>=%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter9 = 1
                                End If
                            End If
                        Next
                        If counter9 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ManualNo.Focus()
                            Exit Sub
                        End If
                    Else
                        myManualNo = ""
                    End If

                    'Server validation for  : txt_Cat_ReportNo
                    Dim myReportNo As Object = Nothing
                    If txt_Cat_ReportNo.Text <> "" Then
                        myReportNo = TrimX(txt_Cat_ReportNo.Text)
                        myReportNo = RemoveQuotes(myReportNo)
                        If myReportNo.Length > 100 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ReportNo.Focus()
                            Exit Sub
                        End If

                        myReportNo = " " & myReportNo & " "
                        If InStr(1, myReportNo, "CREATE", 1) > 0 Or InStr(1, myReportNo, "DELETE", 1) > 0 Or InStr(1, myReportNo, "DROP", 1) > 0 Or InStr(1, myReportNo, "INSERT", 1) > 1 Or InStr(1, myReportNo, "TRACK", 1) > 1 Or InStr(1, myReportNo, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ReportNo.Focus()
                            Exit Sub
                        End If
                        myReportNo = TrimX(myReportNo)
                        'check unwanted characters
                        c = 0
                        counter10 = 0
                        For iloop = 1 To Len(myReportNo.ToString)
                            strcurrentchar = Mid(myReportNo, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#$^*+|?<>=%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter10 = 1
                                End If
                            End If
                        Next
                        If counter10 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ReportNo.Focus()
                            Exit Sub
                        End If
                    Else
                        myReportNo = ""
                    End If

                    'Server validation for  : txt_Cat_Title
                    Dim myTitle As Object = Nothing
                    If txt_Cat_Title.Text <> "" Then
                        myTitle = TrimAll(txt_Cat_Title.Text)
                        myTitle = RemoveQuotes(myTitle)
                        If myTitle.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Title.Focus()
                            Exit Sub
                        End If

                        myTitle = " " & myTitle & " "
                        If InStr(1, myTitle, "CREATE", 1) > 0 Or InStr(1, myTitle, "DELETE", 1) > 0 Or InStr(1, myTitle, "DROP", 1) > 0 Or InStr(1, myTitle, "INSERT", 1) > 1 Or InStr(1, myTitle, "TRACK", 1) > 1 Or InStr(1, myTitle, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Title.Focus()
                            Exit Sub
                        End If
                        myTitle = TrimAll(myTitle)
                        'check unwanted characters
                        c = 0
                        counter11 = 0
                        For iloop = 1 To Len(myTitle.ToString)
                            strcurrentchar = Mid(myTitle, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!+|""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter11 = 1
                                End If
                            End If
                        Next
                        If counter11 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Title.Focus()
                            Exit Sub
                        End If
                    Else
                        Label6.Text = " Plz Enter Data... "
                        Label15.Text = ""
                        Me.txt_Cat_Title.Focus()
                        Exit Sub
                    End If

                    'Server validation for  : txt_Cat_SubTitle
                    Dim mySubTitle As Object = Nothing
                    If txt_Cat_SubTitle.Text <> "" Then
                        mySubTitle = TrimAll(txt_Cat_SubTitle.Text)
                        mySubTitle = RemoveQuotes(mySubTitle)
                        If mySubTitle.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_SubTitle.Focus()
                            Exit Sub
                        End If

                        mySubTitle = " " & mySubTitle & " "
                        If InStr(1, mySubTitle, "CREATE", 1) > 0 Or InStr(1, mySubTitle, "DELETE", 1) > 0 Or InStr(1, mySubTitle, "DROP", 1) > 0 Or InStr(1, mySubTitle, "INSERT", 1) > 1 Or InStr(1, mySubTitle, "TRACK", 1) > 1 Or InStr(1, mySubTitle, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_SubTitle.Focus()
                            Exit Sub
                        End If
                        mySubTitle = TrimAll(mySubTitle)
                        'check unwanted characters
                        c = 0
                        counter12 = 0
                        For iloop = 1 To Len(mySubTitle.ToString)
                            strcurrentchar = Mid(mySubTitle, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter12 = 1
                                End If
                            End If
                        Next
                        If counter12 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_SubTitle.Focus()
                            Exit Sub
                        End If
                    Else
                        mySubTitle = ""
                    End If

                    'Server validation for  : txt_Cat_VarTitle
                    Dim myVarTitle As Object = Nothing
                    If txt_Cat_VarTitle.Text <> "" Then
                        myVarTitle = TrimAll(txt_Cat_VarTitle.Text)
                        myVarTitle = RemoveQuotes(myVarTitle)
                        If myVarTitle.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_VarTitle.Focus()
                            Exit Sub
                        End If

                        myVarTitle = " " & myVarTitle & " "
                        If InStr(1, myVarTitle, "CREATE", 1) > 0 Or InStr(1, myVarTitle, "DELETE", 1) > 0 Or InStr(1, myVarTitle, "DROP", 1) > 0 Or InStr(1, myVarTitle, "INSERT", 1) > 1 Or InStr(1, myVarTitle, "TRACK", 1) > 1 Or InStr(1, myVarTitle, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_VarTitle.Focus()
                            Exit Sub
                        End If
                        myVarTitle = TrimAll(myVarTitle)
                        'check unwanted characters
                        c = 0
                        counter13 = 0
                        For iloop = 1 To Len(myVarTitle.ToString)
                            strcurrentchar = Mid(myVarTitle, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter13 = 1
                                End If
                            End If
                        Next
                        If counter13 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_VarTitle.Focus()
                            Exit Sub
                        End If
                    Else
                        myVarTitle = ""
                    End If

                    'Server validation for  : txt_Cat_ScholarName
                    Dim myScholarName As Object = Nothing
                    If txt_Cat_ScholarName.Text <> "" Then
                        myScholarName = TrimAll(txt_Cat_ScholarName.Text)
                        myScholarName = RemoveQuotes(myScholarName)
                        If myScholarName.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ScholarName.Focus()
                            Exit Sub
                        End If

                        myScholarName = " " & myScholarName & " "
                        If InStr(1, myScholarName, "CREATE", 1) > 0 Or InStr(1, myScholarName, "DELETE", 1) > 0 Or InStr(1, myScholarName, "DROP", 1) > 0 Or InStr(1, myScholarName, "INSERT", 1) > 1 Or InStr(1, myScholarName, "TRACK", 1) > 1 Or InStr(1, myScholarName, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ScholarName.Focus()
                            Exit Sub
                        End If
                        myScholarName = TrimAll(myScholarName)
                        'check unwanted characters
                        c = 0
                        counter14 = 0
                        For iloop = 1 To Len(myScholarName.ToString)
                            strcurrentchar = Mid(myScholarName, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter14 = 1
                                End If
                            End If
                        Next
                        If counter14 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ScholarName.Focus()
                            Exit Sub
                        End If
                    Else
                        myScholarName = ""
                    End If

                    'Server validation for  : txt_Cat_ScholarDept
                    Dim myScholarDept As Object = Nothing
                    If txt_Cat_ScholarDept.Text <> "" Then
                        myScholarDept = TrimAll(txt_Cat_ScholarDept.Text)
                        myScholarDept = RemoveQuotes(myScholarDept)
                        If myScholarDept.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ScholarDept.Focus()
                            Exit Sub
                        End If

                        myScholarDept = " " & myScholarDept & " "
                        If InStr(1, myScholarDept, "CREATE", 1) > 0 Or InStr(1, myScholarDept, "DELETE", 1) > 0 Or InStr(1, myScholarDept, "DROP", 1) > 0 Or InStr(1, myScholarDept, "INSERT", 1) > 1 Or InStr(1, myScholarDept, "TRACK", 1) > 1 Or InStr(1, myScholarDept, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ScholarDept.Focus()
                            Exit Sub
                        End If
                        myScholarDept = TrimAll(myScholarDept)
                        'check unwanted characters
                        c = 0
                        counter15 = 0
                        For iloop = 1 To Len(myScholarDept.ToString)
                            strcurrentchar = Mid(myScholarDept, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter15 = 1
                                End If
                            End If
                        Next
                        If counter15 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ScholarDept.Focus()
                            Exit Sub
                        End If
                    Else
                        myScholarDept = ""
                    End If

                    'Server validation for  : txt_Cat_GuideName
                    Dim myGuideName As Object = Nothing
                    If txt_Cat_GuideName.Text <> "" Then
                        myGuideName = TrimAll(txt_Cat_GuideName.Text)
                        myGuideName = RemoveQuotes(myGuideName)
                        If myGuideName.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_GuideName.Focus()
                            Exit Sub
                        End If

                        myGuideName = " " & myGuideName & " "
                        If InStr(1, myGuideName, "CREATE", 1) > 0 Or InStr(1, myGuideName, "DELETE", 1) > 0 Or InStr(1, myGuideName, "DROP", 1) > 0 Or InStr(1, myGuideName, "INSERT", 1) > 1 Or InStr(1, myGuideName, "TRACK", 1) > 1 Or InStr(1, myGuideName, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_GuideName.Focus()
                            Exit Sub
                        End If
                        myGuideName = TrimAll(myGuideName)
                        'check unwanted characters
                        c = 0
                        counter16 = 0
                        For iloop = 1 To Len(myGuideName.ToString)
                            strcurrentchar = Mid(myGuideName, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter16 = 1
                                End If
                            End If
                        Next
                        If counter16 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_GuideName.Focus()
                            Exit Sub
                        End If
                    Else
                        myGuideName = ""
                    End If

                    'Server validation for  : txt_Cat_GuideDept
                    Dim myGuideDept As Object = Nothing
                    If txt_Cat_GuideDept.Text <> "" Then
                        myGuideDept = TrimAll(txt_Cat_GuideDept.Text)
                        myGuideDept = RemoveQuotes(myGuideDept)
                        If myGuideDept.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_GuideDept.Focus()
                            Exit Sub
                        End If

                        myGuideDept = " " & myGuideDept & " "
                        If InStr(1, myGuideDept, "CREATE", 1) > 0 Or InStr(1, myGuideDept, "DELETE", 1) > 0 Or InStr(1, myGuideDept, "DROP", 1) > 0 Or InStr(1, myGuideDept, "INSERT", 1) > 1 Or InStr(1, myGuideDept, "TRACK", 1) > 1 Or InStr(1, myGuideDept, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_GuideDept.Focus()
                            Exit Sub
                        End If
                        myGuideDept = TrimAll(myGuideDept)
                        'check unwanted characters
                        c = 0
                        counter17 = 0
                        For iloop = 1 To Len(myGuideDept.ToString)
                            strcurrentchar = Mid(myGuideDept, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter17 = 1
                                End If
                            End If
                        Next
                        If counter17 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_GuideDept.Focus()
                            Exit Sub
                        End If
                    Else
                        myGuideDept = ""
                    End If

                    'Server validation for  : txt_Cat_DegreeName
                    Dim myDegreeName As Object = Nothing
                    If txt_Cat_DegreeName.Text <> "" Then
                        myDegreeName = TrimAll(txt_Cat_DegreeName.Text)
                        myDegreeName = RemoveQuotes(myDegreeName)
                        If myDegreeName.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_DegreeName.Focus()
                            Exit Sub
                        End If

                        myDegreeName = " " & myDegreeName & " "
                        If InStr(1, myDegreeName, "CREATE", 1) > 0 Or InStr(1, myDegreeName, "DELETE", 1) > 0 Or InStr(1, myDegreeName, "DROP", 1) > 0 Or InStr(1, myDegreeName, "INSERT", 1) > 1 Or InStr(1, myDegreeName, "TRACK", 1) > 1 Or InStr(1, myDegreeName, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_DegreeName.Focus()
                            Exit Sub
                        End If
                        myDegreeName = TrimAll(myDegreeName)
                        'check unwanted characters
                        c = 0
                        counter18 = 0
                        For iloop = 1 To Len(myDegreeName.ToString)
                            strcurrentchar = Mid(myDegreeName, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter18 = 1
                                End If
                            End If
                        Next
                        If counter18 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_DegreeName.Focus()
                            Exit Sub
                        End If
                    Else
                        myDegreeName = ""
                    End If

                    'Server validation for  : txt_Cat_SPRevision
                    Dim mySPRev As Object = Nothing
                    If txt_Cat_SPRevision.Text <> "" Then
                        mySPRev = TrimAll(txt_Cat_SPRevision.Text)
                        mySPRev = RemoveQuotes(mySPRev)
                        If mySPRev.Length > 100 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_SPRevision.Focus()
                            Exit Sub
                        End If

                        mySPRev = " " & mySPRev & " "
                        If InStr(1, mySPRev, "CREATE", 1) > 0 Or InStr(1, mySPRev, "DELETE", 1) > 0 Or InStr(1, mySPRev, "DROP", 1) > 0 Or InStr(1, mySPRev, "INSERT", 1) > 1 Or InStr(1, mySPRev, "TRACK", 1) > 1 Or InStr(1, mySPRev, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_SPRevision.Focus()
                            Exit Sub
                        End If
                        mySPRev = TrimAll(mySPRev)
                        'check unwanted characters
                        c = 0
                        counter19 = 0
                        For iloop = 1 To Len(mySPRev.ToString)
                            strcurrentchar = Mid(mySPRev, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter19 = 1
                                End If
                            End If
                        Next
                        If counter19 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_SPRevision.Focus()
                            Exit Sub
                        End If
                    Else
                        mySPRev = ""
                    End If

                    'Server validation for  : txt_Cat_ManualRevision
                    Dim myManualVer As Object = Nothing
                    If txt_Cat_ManualRevision.Text <> "" Then
                        myManualVer = TrimAll(txt_Cat_ManualRevision.Text)
                        myManualVer = RemoveQuotes(myManualVer)
                        If myManualVer.Length > 50 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ManualRevision.Focus()
                            Exit Sub
                        End If

                        myManualVer = " " & myManualVer & " "
                        If InStr(1, myManualVer, "CREATE", 1) > 0 Or InStr(1, myManualVer, "DELETE", 1) > 0 Or InStr(1, myManualVer, "DROP", 1) > 0 Or InStr(1, myManualVer, "INSERT", 1) > 1 Or InStr(1, myManualVer, "TRACK", 1) > 1 Or InStr(1, myManualVer, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ManualRevision.Focus()
                            Exit Sub
                        End If
                        myManualVer = TrimAll(myManualVer)
                        'check unwanted characters
                        c = 0
                        counter20 = 0
                        For iloop = 1 To Len(myManualVer.ToString)
                            strcurrentchar = Mid(myManualVer, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter20 = 1
                                End If
                            End If
                        Next
                        If counter20 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ManualRevision.Focus()
                            Exit Sub
                        End If
                    Else
                        myManualVer = ""
                    End If

                    'Server validation for  : txt_Cat_PatentNo
                    Dim myPatentNo As Object = Nothing
                    If txt_Cat_PatentNo.Text <> "" Then
                        myPatentNo = TrimAll(txt_Cat_PatentNo.Text)
                        myPatentNo = RemoveQuotes(myPatentNo)
                        If myPatentNo.Length > 100 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_PatentNo.Focus()
                            Exit Sub
                        End If

                        myPatentNo = " " & myPatentNo & " "
                        If InStr(1, myPatentNo, "CREATE", 1) > 0 Or InStr(1, myPatentNo, "DELETE", 1) > 0 Or InStr(1, myPatentNo, "DROP", 1) > 0 Or InStr(1, myPatentNo, "INSERT", 1) > 1 Or InStr(1, myPatentNo, "TRACK", 1) > 1 Or InStr(1, myPatentNo, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_PatentNo.Focus()
                            Exit Sub
                        End If
                        myPatentNo = TrimAll(myPatentNo)
                        'check unwanted characters
                        c = 0
                        counter21 = 0
                        For iloop = 1 To Len(myPatentNo.ToString)
                            strcurrentchar = Mid(myPatentNo, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter21 = 1
                                End If
                            End If
                        Next
                        If counter21 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_PatentNo.Focus()
                            Exit Sub
                        End If
                    Else
                        myPatentNo = ""
                    End If


                    'Server validation for  : txt_Cat_Patentee
                    Dim myPatentee As Object = Nothing
                    If txt_Cat_Patentee.Text <> "" Then
                        myPatentee = TrimAll(txt_Cat_Patentee.Text)
                        myPatentee = RemoveQuotes(myPatentee)
                        If myPatentee.Length > 150 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Patentee.Focus()
                            Exit Sub
                        End If

                        myPatentee = " " & myPatentee & " "
                        If InStr(1, myPatentee, "CREATE", 1) > 0 Or InStr(1, myPatentee, "DELETE", 1) > 0 Or InStr(1, myPatentee, "DROP", 1) > 0 Or InStr(1, myPatentee, "INSERT", 1) > 1 Or InStr(1, myPatentee, "TRACK", 1) > 1 Or InStr(1, myPatentee, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Patentee.Focus()
                            Exit Sub
                        End If
                        myPatentee = TrimAll(myPatentee)
                        'check unwanted characters
                        c = 0
                        counter22 = 0
                        For iloop = 1 To Len(myPatentee.ToString)
                            strcurrentchar = Mid(myPatentee, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter22 = 1
                                End If
                            End If
                        Next
                        If counter22 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Patentee.Focus()
                            Exit Sub
                        End If
                    Else
                        myPatentee = ""
                    End If


                    'Server validation for  : txt_Cat_PatentInventor
                    Dim myPatentInventor As Object = Nothing
                    If txt_Cat_PatentInventor.Text <> "" Then
                        myPatentInventor = TrimAll(txt_Cat_PatentInventor.Text)
                        myPatentInventor = RemoveQuotes(myPatentInventor)
                        If myPatentInventor.Length > 256 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_PatentInventor.Focus()
                            Exit Sub
                        End If

                        myPatentInventor = " " & myPatentInventor & " "
                        If InStr(1, myPatentInventor, "CREATE", 1) > 0 Or InStr(1, myPatentInventor, "DELETE", 1) > 0 Or InStr(1, myPatentInventor, "DROP", 1) > 0 Or InStr(1, myPatentInventor, "INSERT", 1) > 1 Or InStr(1, myPatentInventor, "TRACK", 1) > 1 Or InStr(1, myPatentInventor, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_PatentInventor.Focus()
                            Exit Sub
                        End If
                        myPatentInventor = TrimAll(myPatentInventor)
                        'check unwanted characters
                        c = 0
                        counter23 = 0
                        For iloop = 1 To Len(myPatentInventor.ToString)
                            strcurrentchar = Mid(myPatentInventor, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter23 = 1
                                End If
                            End If
                        Next
                        If counter23 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_PatentInventor.Focus()
                            Exit Sub
                        End If
                    Else
                        myPatentInventor = ""
                    End If


                    'Server validation for  : txt_Cat_ConfName
                    Dim myConfName As Object = Nothing
                    If txt_Cat_ConfName.Text <> "" Then
                        myConfName = TrimAll(txt_Cat_ConfName.Text)
                        myConfName = RemoveQuotes(myConfName)
                        If myConfName.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ConfName.Focus()
                            Exit Sub
                        End If

                        myConfName = " " & myConfName & " "
                        If InStr(1, myConfName, "CREATE", 1) > 0 Or InStr(1, myConfName, "DELETE", 1) > 0 Or InStr(1, myConfName, "DROP", 1) > 0 Or InStr(1, myConfName, "INSERT", 1) > 1 Or InStr(1, myConfName, "TRACK", 1) > 1 Or InStr(1, myConfName, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ConfName.Focus()
                            Exit Sub
                        End If
                        myConfName = TrimAll(myConfName)
                        'check unwanted characters
                        c = 0
                        counter24 = 0
                        For iloop = 1 To Len(myConfName.ToString)
                            strcurrentchar = Mid(myConfName, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter24 = 1
                                End If
                            End If
                        Next
                        If counter24 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ConfName.Focus()
                            Exit Sub
                        End If
                    Else
                        myConfName = ""
                    End If


                    'Server validation for  : txt_Cat_ConfName
                    Dim myConfSDate As Object = Nothing
                    If txt_Cat_SDate.Text <> "" Then
                        myConfSDate = TrimX(txt_Cat_SDate.Text)
                        myConfSDate = RemoveQuotes(myConfSDate)
                        myConfSDate = Convert.ToDateTime(myConfSDate, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us
                        If myConfSDate.Length > 12 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_SDate.Focus()
                            Exit Sub
                        End If

                        myConfSDate = " " & myConfSDate & " "
                        If InStr(1, myConfSDate, "CREATE", 1) > 0 Or InStr(1, myConfSDate, "DELETE", 1) > 0 Or InStr(1, myConfSDate, "DROP", 1) > 0 Or InStr(1, myConfSDate, "INSERT", 1) > 1 Or InStr(1, myConfSDate, "TRACK", 1) > 1 Or InStr(1, myConfSDate, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_SDate.Focus()
                            Exit Sub
                        End If
                        myConfSDate = TrimX(myConfSDate)
                        'check unwanted characters
                        c = 0
                        counter25 = 0
                        For iloop = 1 To Len(myConfSDate.ToString)
                            strcurrentchar = Mid(myConfSDate, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter25 = 1
                                End If
                            End If
                        Next
                        If counter25 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_SDate.Focus()
                            Exit Sub
                        End If
                    Else
                        myConfSDate = ""
                    End If

                    'Server validation for  : txt_Cat_EDate
                    Dim myConfEDate As Object = Nothing
                    If txt_Cat_EDate.Text <> "" Then
                        myConfEDate = TrimX(txt_Cat_EDate.Text)
                        myConfEDate = RemoveQuotes(myConfEDate)
                        myConfEDate = Convert.ToDateTime(myConfEDate, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us
                        If myConfEDate.Length > 12 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_EDate.Focus()
                            Exit Sub
                        End If

                        myConfEDate = " " & myConfEDate & " "
                        If InStr(1, myConfEDate, "CREATE", 1) > 0 Or InStr(1, myConfEDate, "DELETE", 1) > 0 Or InStr(1, myConfEDate, "DROP", 1) > 0 Or InStr(1, myConfEDate, "INSERT", 1) > 1 Or InStr(1, myConfEDate, "TRACK", 1) > 1 Or InStr(1, myConfEDate, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_EDate.Focus()
                            Exit Sub
                        End If
                        myConfEDate = TrimX(myConfEDate)
                        'check unwanted characters
                        c = 0
                        counter26 = 0
                        For iloop = 1 To Len(myConfEDate.ToString)
                            strcurrentchar = Mid(myConfEDate, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter26 = 1
                                End If
                            End If
                        Next
                        If counter26 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_EDate.Focus()
                            Exit Sub
                        End If
                    Else
                        myConfEDate = ""
                    End If

                    'Server validation for  : txt_Cat_ConfPlace
                    Dim myConfPlace As Object = Nothing
                    If txt_Cat_ConfPlace.Text <> "" Then
                        myConfPlace = TrimAll(txt_Cat_ConfPlace.Text)
                        myConfPlace = RemoveQuotes(myConfPlace)
                        If myConfPlace.Length > 100 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ConfName.Focus()
                            Exit Sub
                        End If

                        myConfPlace = " " & myConfPlace & " "
                        If InStr(1, myConfPlace, "CREATE", 1) > 0 Or InStr(1, myConfPlace, "DELETE", 1) > 0 Or InStr(1, myConfPlace, "DROP", 1) > 0 Or InStr(1, myConfPlace, "INSERT", 1) > 1 Or InStr(1, myConfPlace, "TRACK", 1) > 1 Or InStr(1, myConfPlace, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ConfPlace.Focus()
                            Exit Sub
                        End If
                        myConfPlace = TrimAll(myConfPlace)
                        'check unwanted characters
                        c = 0
                        counter27 = 0
                        For iloop = 1 To Len(myConfPlace.ToString)
                            strcurrentchar = Mid(myConfPlace, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter27 = 1
                                End If
                            End If
                        Next
                        If counter27 = 1 Then
                            Label6.Text = "Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ConfPlace.Focus()
                            Exit Sub
                        End If
                    Else
                        myConfPlace = ""
                    End If

                    'Server validation for  : txt_Cat_Author1
                    Dim myAuthor1 As Object = Nothing
                    If txt_Cat_Author1.Text <> "" Then
                        myAuthor1 = TrimAll(txt_Cat_Author1.Text)
                        myAuthor1 = RemoveQuotes(myAuthor1)
                        If myAuthor1.Length > 250 Then 'maximum length
                            Label6.Text = "Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Author1.Focus()
                            Exit Sub
                        End If

                        myAuthor1 = " " & myAuthor1 & " "
                        If InStr(1, myAuthor1, "CREATE", 1) > 0 Or InStr(1, myAuthor1, "DELETE", 1) > 0 Or InStr(1, myAuthor1, "DROP", 1) > 0 Or InStr(1, myAuthor1, "INSERT", 1) > 1 Or InStr(1, myAuthor1, "TRACK", 1) > 1 Or InStr(1, myAuthor1, "TRACE", 1) > 1 Then
                            Label6.Text = "Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Author1.Focus()
                            Exit Sub
                        End If
                        myAuthor1 = TrimAll(myAuthor1)
                        'check unwanted characters
                        c = 0
                        counter28 = 0
                        For iloop = 1 To Len(myAuthor1.ToString)
                            strcurrentchar = Mid(myAuthor1, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter28 = 1
                                End If
                            End If
                        Next
                        myAuthor1 = TrimAll(Replace(myAuthor1, ".", " "))
                        myAuthor1 = TrimAll(Replace(myAuthor1, ",", ", "))
                        myAuthor1 = TrimAll(Replace(myAuthor1, ":", ", "))

                        If counter28 = 1 Then
                            Label6.Text = "Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Author1.Focus()
                            Exit Sub
                        End If
                    Else
                        myAuthor1 = ""
                    End If

                    'Server validation for  : txt_Cat_Author2
                    Dim myAuthor2 As Object = Nothing
                    If txt_Cat_Author2.Text <> "" Then
                        myAuthor2 = TrimAll(txt_Cat_Author2.Text)
                        myAuthor2 = RemoveQuotes(myAuthor2)
                        If myAuthor2.Length > 250 Then 'maximum length
                            Label6.Text = "Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Author2.Focus()
                            Exit Sub
                        End If

                        myAuthor2 = " " & myAuthor2 & " "
                        If InStr(1, myAuthor2, "CREATE", 1) > 0 Or InStr(1, myAuthor2, "DELETE", 1) > 0 Or InStr(1, myAuthor2, "DROP", 1) > 0 Or InStr(1, myAuthor2, "INSERT", 1) > 1 Or InStr(1, myAuthor2, "TRACK", 1) > 1 Or InStr(1, myAuthor2, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Author2.Focus()
                            Exit Sub
                        End If
                        myAuthor2 = TrimAll(myAuthor2)
                        'check unwanted characters
                        c = 0
                        counter29 = 0
                        For iloop = 1 To Len(myAuthor2.ToString)
                            strcurrentchar = Mid(myAuthor2, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter29 = 1
                                End If
                            End If
                        Next
                        myAuthor2 = TrimAll(Replace(myAuthor2, ".", " "))
                        myAuthor2 = TrimAll(Replace(myAuthor2, ",", ", "))
                        myAuthor2 = TrimAll(Replace(myAuthor2, ":", ", "))
                        If counter29 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Author2.Focus()
                            Exit Sub
                        End If
                    Else
                        myAuthor2 = ""
                    End If

                    'Server validation for  : txt_Cat_Author2
                    Dim myAuthor3 As Object = Nothing
                    If txt_Cat_Author3.Text <> "" Then
                        myAuthor3 = TrimAll(txt_Cat_Author3.Text)
                        myAuthor3 = RemoveQuotes(myAuthor3)
                        If myAuthor3.Length > 250 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Author3.Focus()
                            Exit Sub
                        End If

                        myAuthor3 = " " & myAuthor3 & " "
                        If InStr(1, myAuthor3, "CREATE", 1) > 0 Or InStr(1, myAuthor3, "DELETE", 1) > 0 Or InStr(1, myAuthor3, "DROP", 1) > 0 Or InStr(1, myAuthor3, "INSERT", 1) > 1 Or InStr(1, myAuthor3, "TRACK", 1) > 1 Or InStr(1, myAuthor3, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Author3.Focus()
                            Exit Sub
                        End If
                        myAuthor3 = TrimAll(myAuthor3)
                        'check unwanted characters
                        c = 0
                        counter30 = 0
                        For iloop = 1 To Len(myAuthor3.ToString)
                            strcurrentchar = Mid(myAuthor3, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter30 = 1
                                End If
                            End If
                        Next
                        myAuthor3 = TrimAll(Replace(myAuthor3, ".", " "))
                        myAuthor3 = TrimAll(Replace(myAuthor3, ",", ", "))
                        myAuthor3 = TrimAll(Replace(myAuthor3, ":", ", "))
                        If counter30 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Author3.Focus()
                            Exit Sub
                        End If
                    Else
                        myAuthor3 = ""
                    End If

                    'Server validation for  : txt_Cat_Editor
                    Dim myEditor As Object = Nothing
                    If txt_Cat_Editor.Text <> "" Then
                        myEditor = TrimAll(txt_Cat_Editor.Text)
                        myEditor = RemoveQuotes(myEditor)
                        If myEditor.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Editor.Focus()
                            Exit Sub
                        End If

                        myEditor = " " & myEditor & " "
                        If InStr(1, myEditor, "CREATE", 1) > 0 Or InStr(1, myEditor, "DELETE", 1) > 0 Or InStr(1, myEditor, "DROP", 1) > 0 Or InStr(1, myEditor, "INSERT", 1) > 1 Or InStr(1, myEditor, "TRACK", 1) > 1 Or InStr(1, myEditor, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Editor.Focus()
                            Exit Sub
                        End If
                        myEditor = TrimAll(myEditor)
                        'check unwanted characters
                        c = 0
                        counter31 = 0
                        For iloop = 1 To Len(myEditor.ToString)
                            strcurrentchar = Mid(myEditor, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter31 = 1
                                End If
                            End If
                        Next
                        If counter31 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Editor.Focus()
                            Exit Sub
                        End If
                    Else
                        myEditor = ""
                    End If

                    'Server validation for  : txt_Cat_Editor
                    Dim myTr As Object = Nothing
                    If txt_Cat_Translator.Text <> "" Then
                        myTr = TrimAll(txt_Cat_Translator.Text)
                        myTr = RemoveQuotes(myTr)
                        If myTr.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Translator.Focus()
                            Exit Sub
                        End If

                        myTr = " " & myTr & " "
                        If InStr(1, myTr, "CREATE", 1) > 0 Or InStr(1, myTr, "DELETE", 1) > 0 Or InStr(1, myTr, "DROP", 1) > 0 Or InStr(1, myTr, "INSERT", 1) > 1 Or InStr(1, myTr, "TRACK", 1) > 1 Or InStr(1, myTr, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Translator.Focus()
                            Exit Sub
                        End If
                        myTr = TrimAll(myTr)
                        'check unwanted characters
                        c = 0
                        counter32 = 0
                        For iloop = 1 To Len(myTr.ToString)
                            strcurrentchar = Mid(myTr, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter32 = 1
                                End If
                            End If
                        Next
                        If counter32 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Translator.Focus()
                            Exit Sub
                        End If
                    Else
                        myTr = ""
                    End If

                    'Server validation for  : txt_Cat_Illustrator
                    Dim myIllus As Object = Nothing
                    If txt_Cat_Illustrator.Text <> "" Then
                        myIllus = TrimAll(txt_Cat_Illustrator.Text)
                        myIllus = RemoveQuotes(myIllus)
                        If myIllus.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Illustrator.Focus()
                            Exit Sub
                        End If

                        myIllus = " " & myIllus & " "
                        If InStr(1, myIllus, "CREATE", 1) > 0 Or InStr(1, myIllus, "DELETE", 1) > 0 Or InStr(1, myIllus, "DROP", 1) > 0 Or InStr(1, myIllus, "INSERT", 1) > 1 Or InStr(1, myIllus, "TRACK", 1) > 1 Or InStr(1, myIllus, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Illustrator.Focus()
                            Exit Sub
                        End If
                        myIllus = TrimAll(myIllus)
                        'check unwanted characters
                        c = 0
                        counter33 = 0
                        For iloop = 1 To Len(myIllus.ToString)
                            strcurrentchar = Mid(myIllus, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter33 = 1
                                End If
                            End If
                        Next
                        If counter33 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Illustrator.Focus()
                            Exit Sub
                        End If
                    Else
                        myIllus = ""
                    End If

                    'Server validation for  : txt_Cat_Compiler
                    Dim myCompiler As Object = Nothing
                    If txt_Cat_Compiler.Text <> "" Then
                        myCompiler = TrimAll(txt_Cat_Compiler.Text)
                        myCompiler = RemoveQuotes(myCompiler)
                        If myCompiler.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Compiler.Focus()
                            Exit Sub
                        End If

                        myCompiler = " " & myCompiler & " "
                        If InStr(1, myCompiler, "CREATE", 1) > 0 Or InStr(1, myCompiler, "DELETE", 1) > 0 Or InStr(1, myCompiler, "DROP", 1) > 0 Or InStr(1, myCompiler, "INSERT", 1) > 1 Or InStr(1, myCompiler, "TRACK", 1) > 1 Or InStr(1, myCompiler, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Compiler.Focus()
                            Exit Sub
                        End If
                        myCompiler = TrimAll(myCompiler)
                        'check unwanted characters
                        c = 0
                        counter34 = 0
                        For iloop = 1 To Len(myCompiler.ToString)
                            strcurrentchar = Mid(myCompiler, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter34 = 1
                                End If
                            End If
                        Next
                        If counter34 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Compiler.Focus()
                            Exit Sub
                        End If
                    Else
                        myCompiler = ""
                    End If

                    'Server validation for  : txt_Cat_Commentator
                    Dim myCommentator As Object = Nothing
                    If txt_Cat_Commentator.Text <> "" Then
                        myCommentator = TrimAll(txt_Cat_Commentator.Text)
                        myCommentator = RemoveQuotes(myCommentator)
                        If myCommentator.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Commentator.Focus()
                            Exit Sub
                        End If

                        myCommentator = " " & myCommentator & " "
                        If InStr(1, myCommentator, "CREATE", 1) > 0 Or InStr(1, myCommentator, "DELETE", 1) > 0 Or InStr(1, myCommentator, "DROP", 1) > 0 Or InStr(1, myCommentator, "INSERT", 1) > 1 Or InStr(1, myCommentator, "TRACK", 1) > 1 Or InStr(1, myCommentator, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Commentator.Focus()
                            Exit Sub
                        End If
                        myCommentator = TrimAll(myCommentator)
                        'check unwanted characters
                        c = 0
                        counter35 = 0
                        For iloop = 1 To Len(myCommentator.ToString)
                            strcurrentchar = Mid(myCommentator, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter35 = 1
                                End If
                            End If
                        Next
                        If counter35 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Commentator.Focus()
                            Exit Sub
                        End If
                    Else
                        myCommentator = ""
                    End If

                    'Server validation for  : txt_Cat_RevisedBy
                    Dim myRevisedBy As Object = Nothing
                    If txt_Cat_RevisedBy.Text <> "" Then
                        myRevisedBy = TrimAll(txt_Cat_RevisedBy.Text)
                        myRevisedBy = RemoveQuotes(myRevisedBy)
                        If myRevisedBy.Length > 255 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_RevisedBy.Focus()
                            Exit Sub
                        End If

                        myRevisedBy = " " & myRevisedBy & " "
                        If InStr(1, myRevisedBy, "CREATE", 1) > 0 Or InStr(1, myRevisedBy, "DELETE", 1) > 0 Or InStr(1, myRevisedBy, "DROP", 1) > 0 Or InStr(1, myRevisedBy, "INSERT", 1) > 1 Or InStr(1, myRevisedBy, "TRACK", 1) > 1 Or InStr(1, myRevisedBy, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_RevisedBy.Focus()
                            Exit Sub
                        End If
                        myRevisedBy = TrimAll(myRevisedBy)
                        'check unwanted characters
                        c = 0
                        counter36 = 0
                        For iloop = 1 To Len(myRevisedBy.ToString)
                            strcurrentchar = Mid(myRevisedBy, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter36 = 1
                                End If
                            End If
                        Next
                        If counter36 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_RevisedBy.Focus()
                            Exit Sub
                        End If
                    Else
                        myRevisedBy = ""
                    End If

                    'Server validation for  : txt_Cat_CorpAuthor
                    Dim myCorpAuthor As Object = Nothing
                    If txt_Cat_CorpAuthor.Text <> "" Then
                        myCorpAuthor = TrimAll(txt_Cat_CorpAuthor.Text)
                        myCorpAuthor = RemoveQuotes(myCorpAuthor)
                        If myCorpAuthor.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_CorpAuthor.Focus()
                            Exit Sub
                        End If

                        myCorpAuthor = " " & myCorpAuthor & " "
                        If InStr(1, myCorpAuthor, "CREATE", 1) > 0 Or InStr(1, myCorpAuthor, "DELETE", 1) > 0 Or InStr(1, myCorpAuthor, "DROP", 1) > 0 Or InStr(1, myCorpAuthor, "INSERT", 1) > 1 Or InStr(1, myCorpAuthor, "TRACK", 1) > 1 Or InStr(1, myCorpAuthor, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_CorpAuthor.Focus()
                            Exit Sub
                        End If
                        myCorpAuthor = TrimAll(myCorpAuthor)
                        'check unwanted characters
                        c = 0
                        counter37 = 0
                        For iloop = 1 To Len(myCorpAuthor.ToString)
                            strcurrentchar = Mid(myCorpAuthor, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter37 = 1
                                End If
                            End If
                        Next
                        If counter37 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_CorpAuthor.Focus()
                            Exit Sub
                        End If
                    Else
                        myCorpAuthor = ""
                    End If

                    'Server validation for  : txt_Cat_Edition
                    Dim myEdition As Object = Nothing
                    If txt_Cat_Edition.Text <> "" Then
                        myEdition = TrimAll(txt_Cat_Edition.Text)
                        myEdition = RemoveQuotes(myEdition)
                        myEdition = LCase(myEdition)
                        If myEdition.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Edition.Focus()
                            Exit Sub
                        End If

                        myEdition = " " & myEdition & " "
                        If InStr(1, myEdition, "CREATE", 1) > 0 Or InStr(1, myEdition, "DELETE", 1) > 0 Or InStr(1, myEdition, "DROP", 1) > 0 Or InStr(1, myEdition, "INSERT", 1) > 1 Or InStr(1, myEdition, "TRACK", 1) > 1 Or InStr(1, myEdition, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Edition.Focus()
                            Exit Sub
                        End If
                        myEdition = TrimAll(myEdition)
                        'check unwanted characters
                        c = 0
                        counter38 = 0
                        For iloop = 1 To Len(myEdition.ToString)
                            strcurrentchar = Mid(myEdition, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter38 = 1
                                End If
                            End If
                        Next
                        If counter38 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Edition.Focus()
                            Exit Sub
                        End If
                        If InStr(myEdition, "edition") <> 0 Then
                            myEdition = LCase(TrimAll(Replace(myEdition, "edition", "")))
                        End If
                        If InStr(myEdition, "ed") <> 0 Then
                            myEdition = LCase(TrimAll(Replace(myEdition, "ed", "")))
                        End If
                        If InStr(myEdition, "ed.") <> 0 Then
                            myEdition = LCase(TrimAll(Replace(myEdition, "ed.", "")))
                        End If
                        If InStr(myEdition, "edition.") <> 0 Then
                            myEdition = LCase(TrimAll(Replace(myEdition, "edition.", "")))
                        End If
                    Else
                        myEdition = ""
                    End If


                    'Server validation for  : txt_Cat_Reprint
                    Dim myReprint As Object = Nothing
                    If txt_Cat_Reprint.Text <> "" Then
                        myReprint = TrimAll(txt_Cat_Reprint.Text)
                        myReprint = RemoveQuotes(myReprint)
                        If myReprint.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Reprint.Focus()
                            Exit Sub
                        End If

                        myReprint = " " & myReprint & " "
                        If InStr(1, myReprint, "CREATE", 1) > 0 Or InStr(1, myReprint, "DELETE", 1) > 0 Or InStr(1, myReprint, "DROP", 1) > 0 Or InStr(1, myReprint, "INSERT", 1) > 1 Or InStr(1, myReprint, "TRACK", 1) > 1 Or InStr(1, myReprint, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Reprint.Focus()
                            Exit Sub
                        End If
                        myReprint = TrimAll(myReprint)
                        'check unwanted characters
                        c = 0
                        counter39 = 0
                        For iloop = 1 To Len(myReprint.ToString)
                            strcurrentchar = Mid(myReprint, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter39 = 1
                                End If
                            End If
                        Next
                        If counter39 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Reprint.Focus()
                            Exit Sub
                        End If
                    Else
                        myReprint = ""
                    End If

                    'Server validation for  : txt_Cat_Place
                    Dim myPubPlace As Object = Nothing
                    If txt_Cat_Place.Text <> "" Then
                        myPubPlace = TrimAll(txt_Cat_Place.Text)
                        myPubPlace = RemoveQuotes(myPubPlace)
                        If myPubPlace.Length > 150 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Place.Focus()
                            Exit Sub
                        End If

                        myPubPlace = " " & myPubPlace & " "
                        If InStr(1, myPubPlace, "CREATE", 1) > 0 Or InStr(1, myPubPlace, "DELETE", 1) > 0 Or InStr(1, myPubPlace, "DROP", 1) > 0 Or InStr(1, myPubPlace, "INSERT", 1) > 1 Or InStr(1, myPubPlace, "TRACK", 1) > 1 Or InStr(1, myPubPlace, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Place.Focus()
                            Exit Sub
                        End If
                        myPubPlace = TrimAll(myPubPlace)
                        'check unwanted characters
                        c = 0
                        counter41 = 0
                        For iloop = 1 To Len(myPubPlace.ToString)
                            strcurrentchar = Mid(myPubPlace, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter41 = 1
                                End If
                            End If
                        Next
                        If counter41 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Place.Focus()
                            Exit Sub
                        End If
                    Else
                        myPubPlace = ""
                    End If

                    'validation for Country Code
                    Dim myConCode As Object = Nothing
                    myConCode = DDL_Countries.SelectedValue
                    If Not String.IsNullOrEmpty(myConCode) Then
                        myConCode = RemoveQuotes(myConCode)
                        If myConCode.Length > 4 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            DDL_Countries.Focus()
                            Exit Sub
                        End If

                        myConCode = " " & myConCode & " "
                        If InStr(1, myConCode, "CREATE", 1) > 0 Or InStr(1, myConCode, "DELETE", 1) > 0 Or InStr(1, myConCode, "DROP", 1) > 0 Or InStr(1, myConCode, "INSERT", 1) > 1 Or InStr(1, myConCode, "TRACK", 1) > 1 Or InStr(1, myConCode, "TRACE", 1) > 1 Then
                            ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                            DDL_Countries.Focus()
                            Exit Sub
                        End If
                        myConCode = TrimX(myConCode)
                        'check unwanted characters
                        c = 0
                        counter42 = 0
                        For iloop = 1 To Len(myConCode)
                            strcurrentchar = Mid(myConCode, iloop, 1)
                            If c = 0 Then
                                If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter42 = 1
                                End If
                            End If
                        Next
                        If counter42 = 1 Then
                            ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input  is not Valid... ');", True)
                            DDL_Countries.Focus()
                            Exit Sub
                        End If
                    Else
                        myConCode = ""
                    End If

                    'validation for Publisher
                    Dim myPubID As Object = Nothing
                    Dim PUB_NAME As Object = Nothing
                    If Pub_ComboBox.Text <> "" Then
                        myPubID = Pub_ComboBox.SelectedValue

                        If IsNumeric(myPubID) = False Then
                            PUB_NAME = Trim(Pub_ComboBox.Text)
                            If PUB_NAME <> "" Then
                                PUB_NAME = TrimAll(Replace(PUB_NAME, ".", " "))
                                PUB_NAME = TrimAll(Replace(PUB_NAME, ",", ", "))
                                PUB_NAME = TrimAll(Replace(PUB_NAME, ";", ", "))
                            End If
                            Dim PubForm As New Publishers
                            'save new pub in database
                            PubForm.PUB_SAVE(PUB_NAME, myPubPlace, myConCode, LibCode)
                            Me.PopulatePub()
                            Pub_ComboBox.Items.FindByText(PUB_NAME).Selected = True
                        End If

                        myPubID = Pub_ComboBox.SelectedValue
                        If Not String.IsNullOrEmpty(myPubID) Then
                            myPubID = RemoveQuotes(myPubID)
                            If Not IsNumeric(myPubID) = True Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                Pub_ComboBox.Focus()
                                Exit Sub
                            End If
                            myPubID = " " & myPubID & " "
                            If InStr(1, myPubID, "CREATE", 1) > 0 Or InStr(1, myPubID, "DELETE", 1) > 0 Or InStr(1, myPubID, "DROP", 1) > 0 Or InStr(1, myPubID, "INSERT", 1) > 1 Or InStr(1, myPubID, "TRACK", 1) > 1 Or InStr(1, myPubID, "TRACE", 1) > 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                Pub_ComboBox.Focus()
                                Exit Sub
                            End If
                            myPubID = TrimX(myPubID)
                            'check unwanted characters
                            c = 0
                            counter40 = 0
                            For iloop = 1 To Len(myPubID.ToString)
                                strcurrentchar = Mid(myPubID, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter40 = 1
                                    End If
                                End If
                            Next
                            If counter40 = 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                Pub_ComboBox.Focus()
                                Exit Sub
                            End If
                        End If
                    Else
                        myPubID = Nothing
                    End If

                    'Server validation for  : txt_Cat_Place
                    Dim myPubYear As Integer = Nothing
                    If txt_Cat_Year.Text <> "" Then
                        myPubYear = TrimX(txt_Cat_Year.Text)
                        myPubYear = RemoveQuotes(myPubYear)
                        If Not Len(myPubYear.ToString) = 4 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Year.Focus()
                            Exit Sub
                        End If

                        myPubYear = " " & myPubYear & " "
                        If InStr(1, myPubYear, "CREATE", 1) > 0 Or InStr(1, myPubYear, "DELETE", 1) > 0 Or InStr(1, myPubYear, "DROP", 1) > 0 Or InStr(1, myPubYear, "INSERT", 1) > 1 Or InStr(1, myPubYear, "TRACK", 1) > 1 Or InStr(1, myPubYear, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Year.Focus()
                            Exit Sub
                        End If
                        myPubYear = TrimX(myPubYear)
                        'check unwanted characters
                        c = 0
                        counter43 = 0
                        For iloop = 1 To Len(myPubYear.ToString)
                            strcurrentchar = Mid(myPubYear, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter43 = 1
                                End If
                            End If
                        Next
                        If counter43 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Year.Focus()
                            Exit Sub
                        End If
                    Else
                        myPubYear = 0
                    End If

                    'Server validation for  : txt_Cat_Place
                    Dim mySeries As Object = Nothing
                    If txt_Cat_Series.Text <> "" Then
                        mySeries = TrimAll(txt_Cat_Series.Text)
                        mySeries = RemoveQuotes(mySeries)
                        If mySeries.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Series.Focus()
                            Exit Sub
                        End If

                        mySeries = " " & mySeries & " "
                        If InStr(1, mySeries, "CREATE", 1) > 0 Or InStr(1, mySeries, "DELETE", 1) > 0 Or InStr(1, mySeries, "DROP", 1) > 0 Or InStr(1, mySeries, "INSERT", 1) > 1 Or InStr(1, mySeries, "TRACK", 1) > 1 Or InStr(1, mySeries, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Series.Focus()
                            Exit Sub
                        End If
                        mySeries = TrimAll(mySeries)
                        'check unwanted characters
                        c = 0
                        counter44 = 0
                        For iloop = 1 To Len(mySeries.ToString)
                            strcurrentchar = Mid(mySeries, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter44 = 1
                                End If
                            End If
                        Next
                        If counter44 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Series.Focus()
                            Exit Sub
                        End If
                    Else
                        mySeries = ""
                    End If

                    'Server validation for  : txt_Cat_SeriesEditor
                    Dim mySeriesEditor As Object = Nothing
                    If txt_Cat_SeriesEditor.Text <> "" Then
                        mySeriesEditor = TrimAll(txt_Cat_SeriesEditor.Text)
                        mySeriesEditor = RemoveQuotes(mySeriesEditor)
                        If mySeriesEditor.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_SeriesEditor.Focus()
                            Exit Sub
                        End If

                        mySeriesEditor = " " & mySeriesEditor & " "
                        If InStr(1, mySeriesEditor, "CREATE", 1) > 0 Or InStr(1, mySeriesEditor, "DELETE", 1) > 0 Or InStr(1, mySeriesEditor, "DROP", 1) > 0 Or InStr(1, mySeriesEditor, "INSERT", 1) > 1 Or InStr(1, mySeriesEditor, "TRACK", 1) > 1 Or InStr(1, mySeriesEditor, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_SeriesEditor.Focus()
                            Exit Sub
                        End If
                        mySeriesEditor = TrimAll(mySeriesEditor)
                        'check unwanted characters
                        c = 0
                        counter45 = 0
                        For iloop = 1 To Len(mySeriesEditor.ToString)
                            strcurrentchar = Mid(mySeriesEditor, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter45 = 1
                                End If
                            End If
                        Next
                        If counter45 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_SeriesEditor.Focus()
                            Exit Sub
                        End If
                    Else
                        mySeriesEditor = ""
                    End If


                    'Server validation for  : txt_Cat_Note
                    Dim myNote As Object = Nothing
                    If txt_Cat_Note.Text <> "" Then
                        myNote = TrimAll(txt_Cat_Note.Text)
                        myNote = RemoveQuotes(myNote)
                        If myNote.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Note.Focus()
                            Exit Sub
                        End If

                        myNote = " " & myNote & " "
                        If InStr(1, myNote, "CREATE", 1) > 0 Or InStr(1, myNote, "DELETE", 1) > 0 Or InStr(1, myNote, "DROP", 1) > 0 Or InStr(1, myNote, "INSERT", 1) > 1 Or InStr(1, myNote, "TRACK", 1) > 1 Or InStr(1, myNote, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Note.Focus()
                            Exit Sub
                        End If
                        myNote = TrimAll(myNote)
                        'check unwanted characters
                        c = 0
                        counter46 = 0
                        For iloop = 1 To Len(myNote.ToString)
                            strcurrentchar = Mid(myNote, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter46 = 1
                                End If
                            End If
                        Next
                        If counter46 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Note.Focus()
                            Exit Sub
                        End If
                    Else
                        myNote = ""
                    End If

                    'Server validation for  : txt_Cat_Remarks
                    Dim myRemarks As Object = Nothing
                    If txt_Cat_Remarks.Text <> "" Then
                        myRemarks = TrimAll(txt_Cat_Remarks.Text)
                        myRemarks = RemoveQuotes(myRemarks)
                        If myRemarks.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Remarks.Focus()
                            Exit Sub
                        End If

                        myRemarks = " " & myRemarks & " "
                        If InStr(1, myRemarks, "CREATE", 1) > 0 Or InStr(1, myRemarks, "DELETE", 1) > 0 Or InStr(1, myRemarks, "DROP", 1) > 0 Or InStr(1, myRemarks, "INSERT", 1) > 1 Or InStr(1, myRemarks, "TRACK", 1) > 1 Or InStr(1, myRemarks, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Remarks.Focus()
                            Exit Sub
                        End If
                        myRemarks = TrimAll(myRemarks)
                        'check unwanted characters
                        c = 0
                        counter47 = 0
                        For iloop = 1 To Len(myRemarks.ToString)
                            strcurrentchar = Mid(myRemarks, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter47 = 1
                                End If
                            End If
                        Next
                        If counter47 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Remarks.Focus()
                            Exit Sub
                        End If
                    Else
                        myRemarks = ""
                    End If

                    'Server validation for  : txt_Cat_URL
                    Dim myURL As Object = Nothing
                    If txt_Cat_URL.Text <> "" Then
                        myURL = TrimAll(txt_Cat_URL.Text)
                        myURL = RemoveQuotes(myURL)
                        If myURL.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_URL.Focus()
                            Exit Sub
                        End If

                        myURL = " " & myURL & " "
                        If InStr(1, myURL, "CREATE", 1) > 0 Or InStr(1, myURL, "DELETE", 1) > 0 Or InStr(1, myURL, "DROP", 1) > 0 Or InStr(1, myURL, "INSERT", 1) > 1 Or InStr(1, myURL, "TRACK", 1) > 1 Or InStr(1, myURL, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_URL.Focus()
                            Exit Sub
                        End If
                        myURL = TrimAll(myURL)
                        'check unwanted characters
                        c = 0
                        counter48 = 0
                        For iloop = 1 To Len(myURL.ToString)
                            strcurrentchar = Mid(myURL, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter48 = 1
                                End If
                            End If
                        Next
                        If InStr(myURL, "http://") <> 0 Then
                            myURL = "http://" & myURL
                        End If
                        If counter48 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_URL.Focus()
                            Exit Sub
                        End If
                    Else
                        myURL = ""
                    End If

                    'Server validation for  : txt_Cat_Remarks
                    Dim myComments As Object = Nothing
                    If txt_Cat_Comments.Text <> "" Then
                        myComments = TrimAll(txt_Cat_Comments.Text)
                        myComments = RemoveQuotes(myComments)
                        If myComments.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_URL.Focus()
                            Exit Sub
                        End If
                        myComments = " " & myComments & " "
                        If InStr(1, myComments, "CREATE", 1) > 0 Or InStr(1, myComments, "DELETE", 1) > 0 Or InStr(1, myComments, "DROP", 1) > 0 Or InStr(1, myComments, "INSERT", 1) > 1 Or InStr(1, myComments, "TRACK", 1) > 1 Or InStr(1, myComments, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_URL.Focus()
                            Exit Sub
                        End If
                        myComments = TrimAll(myComments)
                        'check unwanted characters
                        c = 0
                        counter49 = 0
                        For iloop = 1 To Len(myComments.ToString)
                            strcurrentchar = Mid(myComments, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter49 = 1
                                End If
                            End If
                        Next
                        If counter49 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Comments.Focus()
                            Exit Sub
                        End If
                    Else
                        myComments = ""
                    End If

                    'validation for DDL_Subjects
                    Dim mySubId As Integer = Nothing
                    If DDL_Subjects.Text <> "" Then
                        mySubId = DDL_Subjects.SelectedValue
                        If Not String.IsNullOrEmpty(mySubId) Then
                            mySubId = RemoveQuotes(mySubId)
                            If Len(mySubId) > 10 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                DDL_Subjects.Focus()
                                Exit Sub
                            End If

                            If Not IsNumeric(mySubId) = True Then 'maximum length
                                Label6.Text = " Data must be Numeric Only.. "
                                Label15.Text = ""
                                DDL_Subjects.Focus()
                                Exit Sub
                            End If

                            mySubId = " " & mySubId & " "
                            If InStr(1, mySubId, "CREATE", 1) > 0 Or InStr(1, mySubId, "DELETE", 1) > 0 Or InStr(1, mySubId, "DROP", 1) > 0 Or InStr(1, mySubId, "INSERT", 1) > 1 Or InStr(1, mySubId, "TRACK", 1) > 1 Or InStr(1, mySubId, "TRACE", 1) > 1 Then
                                ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                                DDL_Subjects.Focus()
                                Exit Sub
                            End If
                            mySubId = TrimX(mySubId)
                            'check unwanted characters
                            c = 0
                            counter50 = 0
                            For iloop = 1 To Len(mySubId.ToString)
                                strcurrentchar = Mid(mySubId, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter50 = 1
                                    End If
                                End If
                            Next
                            If counter50 = 1 Then
                                ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input  is not Valid... ');", True)
                                DDL_Subjects.Focus()
                                Exit Sub
                            End If
                        Else
                            mySubId = Nothing
                        End If
                    Else
                        mySubId = Nothing
                    End If

                    'Server validation for  : txt_Cat_Keywords
                    Dim myKeywords As Object = Nothing
                    If txt_Cat_Keywords.Text <> "" Then
                        myKeywords = TrimAll(txt_Cat_Keywords.Text)
                        myKeywords = RemoveQuotes(myKeywords)
                        If myKeywords.Length > 1000 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Keywords.Focus()
                            Exit Sub
                        End If
                        myKeywords = " " & myKeywords & " "
                        If InStr(1, myKeywords, "CREATE", 1) > 0 Or InStr(1, myKeywords, "DELETE", 1) > 0 Or InStr(1, myKeywords, "DROP", 1) > 0 Or InStr(1, myKeywords, "INSERT", 1) > 1 Or InStr(1, myKeywords, "TRACK", 1) > 1 Or InStr(1, myKeywords, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Keywords.Focus()
                            Exit Sub
                        End If
                        myKeywords = TrimAll(myKeywords)
                        'check unwanted characters
                        c = 0
                        counter51 = 0
                        For iloop = 1 To Len(myKeywords.ToString)
                            strcurrentchar = Mid(myKeywords, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter51 = 1
                                End If
                            End If
                        Next
                        If counter51 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Keywords.Focus()
                            Exit Sub
                        End If
                    Else
                        myKeywords = ""
                    End If

                    'Server validation for  : txt_Cat_TrFrom
                    Dim myTrFrom As Object = Nothing
                    If txt_Cat_TrFrom.Text <> "" Then
                        myTrFrom = TrimAll(txt_Cat_TrFrom.Text)
                        myTrFrom = RemoveQuotes(myTrFrom)
                        If myTrFrom.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_TrFrom.Focus()
                            Exit Sub
                        End If
                        myTrFrom = " " & myTrFrom & " "
                        If InStr(1, myTrFrom, "CREATE", 1) > 0 Or InStr(1, myTrFrom, "DELETE", 1) > 0 Or InStr(1, myTrFrom, "DROP", 1) > 0 Or InStr(1, myTrFrom, "INSERT", 1) > 1 Or InStr(1, myTrFrom, "TRACK", 1) > 1 Or InStr(1, myTrFrom, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_TrFrom.Focus()
                            Exit Sub
                        End If
                        myTrFrom = TrimAll(myTrFrom)
                        'check unwanted characters
                        c = 0
                        counter52 = 0
                        For iloop = 1 To Len(myTrFrom.ToString)
                            strcurrentchar = Mid(myTrFrom, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter52 = 1
                                End If
                            End If
                        Next
                        If counter52 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_TrFrom.Focus()
                            Exit Sub
                        End If
                    Else
                        myTrFrom = ""
                    End If

                    'Server validation for  : txt_Cat_Abstract
                    Dim myAbstract As Object = Nothing
                    If txt_Cat_Abstract.Text <> "" Then
                        myAbstract = TrimAll(txt_Cat_Abstract.Text)
                        myAbstract = RemoveQuotes(myAbstract)
                        If myAbstract.Length > 4000 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Abstract.Focus()
                            Exit Sub
                        End If
                        myAbstract = " " & myAbstract & " "
                        If InStr(1, myAbstract, "CREATE", 1) > 0 Or InStr(1, myAbstract, "DELETE", 1) > 0 Or InStr(1, myAbstract, "DROP", 1) > 0 Or InStr(1, myAbstract, "INSERT", 1) > 1 Or InStr(1, myAbstract, "TRACK", 1) > 1 Or InStr(1, myAbstract, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_Abstract.Focus()
                            Exit Sub
                        End If
                        myAbstract = TrimAll(myAbstract)
                        'check unwanted characters
                        c = 0
                        counter53 = 0
                        For iloop = 1 To Len(myAbstract.ToString)
                            strcurrentchar = Mid(myAbstract, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter53 = 1
                                End If
                            End If
                        Next
                        If counter53 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_Abstract.Focus()
                            Exit Sub
                        End If
                    Else
                        myAbstract = ""
                    End If

                    'Server validation for  : txt_Cat_ReferenceNo
                    Dim myRefNo As Object = Nothing
                    If txt_Cat_ReferenceNo.Text <> "" Then
                        myRefNo = TrimAll(txt_Cat_ReferenceNo.Text)
                        myRefNo = RemoveQuotes(myRefNo)
                        If myRefNo.Length > 500 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ReferenceNo.Focus()
                            Exit Sub
                        End If
                        myRefNo = " " & myRefNo & " "
                        If InStr(1, myRefNo, "CREATE", 1) > 0 Or InStr(1, myRefNo, "DELETE", 1) > 0 Or InStr(1, myRefNo, "DROP", 1) > 0 Or InStr(1, myRefNo, "INSERT", 1) > 1 Or InStr(1, myRefNo, "TRACK", 1) > 1 Or InStr(1, myRefNo, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ReferenceNo.Focus()
                            Exit Sub
                        End If
                        myRefNo = TrimAll(myRefNo)
                        'check unwanted characters
                        c = 0
                        counter54 = 0
                        For iloop = 1 To Len(myRefNo.ToString)
                            strcurrentchar = Mid(myRefNo, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter54 = 1
                                End If
                            End If
                        Next
                        If counter1 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ReferenceNo.Focus()
                            Exit Sub
                        End If
                    Else
                        myRefNo = ""
                    End If

                    'Server validation for  : SP Re-Affirmation year
                    Dim myReaffirmYear As Integer = Nothing
                    If txt_Cat_ReaffirmYear.Text <> "" Then
                        myReaffirmYear = TrimX(txt_Cat_ReaffirmYear.Text)
                        myReaffirmYear = RemoveQuotes(myReaffirmYear)
                        If Not Len(myReaffirmYear.ToString) = 4 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ReaffirmYear.Focus()
                            Exit Sub
                        End If

                        myReaffirmYear = " " & myReaffirmYear & " "
                        If InStr(1, myReaffirmYear, "CREATE", 1) > 0 Or InStr(1, myReaffirmYear, "DELETE", 1) > 0 Or InStr(1, myReaffirmYear, "DROP", 1) > 0 Or InStr(1, myReaffirmYear, "INSERT", 1) > 1 Or InStr(1, myReaffirmYear, "TRACK", 1) > 1 Or InStr(1, myReaffirmYear, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ReaffirmYear.Focus()
                            Exit Sub
                        End If
                        myReaffirmYear = TrimX(myReaffirmYear)
                        'check unwanted characters
                        c = 0
                        counter55 = 0
                        For iloop = 1 To Len(myReaffirmYear.ToString)
                            strcurrentchar = Mid(myReaffirmYear, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter55 = 1
                                End If
                            End If
                        Next
                        If counter55 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ReaffirmYear.Focus()
                            Exit Sub
                        End If
                    Else
                        myReaffirmYear = 0
                    End If

                    'Server validation for  : SP Re-txt_Cat_WithdrawYear
                    Dim myWithdrawYear As Integer = Nothing
                    If txt_Cat_WithdrawYear.Text <> "" Then
                        myWithdrawYear = TrimX(txt_Cat_WithdrawYear.Text)
                        myWithdrawYear = RemoveQuotes(myWithdrawYear)
                        If Not Len(myWithdrawYear.ToString) = 4 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_WithdrawYear.Focus()
                            Exit Sub
                        End If

                        myWithdrawYear = " " & myWithdrawYear & " "
                        If InStr(1, myWithdrawYear, "CREATE", 1) > 0 Or InStr(1, myWithdrawYear, "DELETE", 1) > 0 Or InStr(1, myWithdrawYear, "DROP", 1) > 0 Or InStr(1, myWithdrawYear, "INSERT", 1) > 1 Or InStr(1, myWithdrawYear, "TRACK", 1) > 1 Or InStr(1, myWithdrawYear, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_WithdrawYear.Focus()
                            Exit Sub
                        End If
                        myWithdrawYear = TrimX(myWithdrawYear)
                        'check unwanted characters
                        c = 0
                        counter56 = 0
                        For iloop = 1 To Len(myWithdrawYear.ToString)
                            strcurrentchar = Mid(myWithdrawYear, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter56 = 1
                                End If
                            End If
                        Next
                        If counter56 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_WithdrawYear.Focus()
                            Exit Sub
                        End If
                    Else
                        myWithdrawYear = 0
                    End If


                    'Server validation for  : SP Technical Committee
                    Dim mySPCommittee As Object = Nothing
                    If txt_Cat_SPTCSC.Text <> "" Then
                        mySPCommittee = TrimAll(txt_Cat_SPTCSC.Text)
                        mySPCommittee = RemoveQuotes(mySPCommittee)
                        If mySPCommittee.Length > 250 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_SPTCSC.Focus()
                            Exit Sub
                        End If
                        mySPCommittee = " " & mySPCommittee & " "
                        If InStr(1, mySPCommittee, "CREATE", 1) > 0 Or InStr(1, mySPCommittee, "DELETE", 1) > 0 Or InStr(1, mySPCommittee, "DROP", 1) > 0 Or InStr(1, mySPCommittee, "INSERT", 1) > 1 Or InStr(1, mySPCommittee, "TRACK", 1) > 1 Or InStr(1, mySPCommittee, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_SPTCSC.Focus()
                            Exit Sub
                        End If
                        mySPCommittee = TrimAll(mySPCommittee)
                        'check unwanted characters
                        c = 0
                        counter57 = 0
                        For iloop = 1 To Len(mySPCommittee.ToString)
                            strcurrentchar = Mid(mySPCommittee, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter57 = 1
                                End If
                            End If
                        Next
                        If counter57 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_SPTCSC.Focus()
                            Exit Sub
                        End If
                    Else
                        mySPCommittee = ""
                    End If

                    'Server validation for  : txt_Cat_SPUpdates
                    Dim mySPUpdates As Object = Nothing
                    If txt_Cat_SPUpdates.Text <> "" Then
                        mySPUpdates = TrimAll(txt_Cat_SPUpdates.Text)
                        mySPUpdates = RemoveQuotes(mySPUpdates)
                        If mySPUpdates.Length > 250 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_SPUpdates.Focus()
                            Exit Sub
                        End If
                        mySPUpdates = " " & mySPUpdates & " "
                        If InStr(1, mySPUpdates, "CREATE", 1) > 0 Or InStr(1, mySPUpdates, "DELETE", 1) > 0 Or InStr(1, mySPUpdates, "DROP", 1) > 0 Or InStr(1, mySPUpdates, "INSERT", 1) > 1 Or InStr(1, mySPUpdates, "TRACK", 1) > 1 Or InStr(1, mySPUpdates, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_SPUpdates.Focus()
                            Exit Sub
                        End If
                        mySPUpdates = TrimAll(mySPUpdates)
                        'check unwanted characters
                        c = 0
                        counter58 = 0
                        For iloop = 1 To Len(mySPUpdates.ToString)
                            strcurrentchar = Mid(mySPUpdates, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter58 = 1
                                End If
                            End If
                        Next
                        If counter58 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_SPUpdates.Focus()
                            Exit Sub
                        End If
                    Else
                        mySPUpdates = ""
                    End If

                    'Server validation for  : txt_Cat_SPAmmendments
                    Dim mySPAmmendments As Object = Nothing
                    If txt_Cat_SPAmmendments.Text <> "" Then
                        mySPAmmendments = TrimAll(txt_Cat_SPAmmendments.Text)
                        mySPAmmendments = RemoveQuotes(mySPAmmendments)
                        If mySPAmmendments.Length > 250 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_SPAmmendments.Focus()
                            Exit Sub
                        End If
                        mySPAmmendments = " " & mySPAmmendments & " "
                        If InStr(1, mySPAmmendments, "CREATE", 1) > 0 Or InStr(1, mySPAmmendments, "DELETE", 1) > 0 Or InStr(1, mySPAmmendments, "DROP", 1) > 0 Or InStr(1, mySPAmmendments, "INSERT", 1) > 1 Or InStr(1, mySPAmmendments, "TRACK", 1) > 1 Or InStr(1, mySPAmmendments, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_SPAmmendments.Focus()
                            Exit Sub
                        End If
                        mySPAmmendments = TrimAll(mySPAmmendments)
                        'check unwanted characters
                        c = 0
                        counter59 = 0
                        For iloop = 1 To Len(mySPAmmendments.ToString)
                            strcurrentchar = Mid(mySPAmmendments, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter59 = 1
                                End If
                            End If
                        Next
                        If counter59 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_SPAmmendments.Focus()
                            Exit Sub
                        End If
                    Else
                        mySPAmmendments = ""
                    End If

                    'Server validation for  : txt_Cat_SPAmmendments
                    Dim mySPIssueBody As Object = Nothing
                    If txt_Cat_SPIssueBody.Text <> "" Then
                        mySPIssueBody = TrimAll(txt_Cat_SPIssueBody.Text)
                        mySPIssueBody = RemoveQuotes(mySPIssueBody)
                        If mySPAmmendments.Length > 350 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_SPIssueBody.Focus()
                            Exit Sub
                        End If
                        mySPIssueBody = " " & mySPIssueBody & " "
                        If InStr(1, mySPIssueBody, "CREATE", 1) > 0 Or InStr(1, mySPIssueBody, "DELETE", 1) > 0 Or InStr(1, mySPIssueBody, "DROP", 1) > 0 Or InStr(1, mySPIssueBody, "INSERT", 1) > 1 Or InStr(1, mySPIssueBody, "TRACK", 1) > 1 Or InStr(1, mySPIssueBody, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_SPIssueBody.Focus()
                            Exit Sub
                        End If
                        mySPIssueBody = TrimAll(mySPIssueBody)
                        'check unwanted characters
                        c = 0
                        counter60 = 0
                        For iloop = 1 To Len(mySPIssueBody.ToString)
                            strcurrentchar = Mid(mySPIssueBody, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter60 = 1
                                End If
                            End If
                        Next
                        If counter60 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_SPIssueBody.Focus()
                            Exit Sub
                        End If
                    Else
                        mySPIssueBody = ""
                    End If

                    'Server validation for  : txt_Cat_Producer            
                    Dim myProducer As Object = Nothing
                    If txt_Cat_Producer.Text <> "" Then
                        myProducer = TrimAll(txt_Cat_Producer.Text)
                        myProducer = RemoveQuotes(myProducer)
                        If myProducer.Length > 250 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Producer.Focus()
                            Exit Sub
                        End If
                    Else
                        myProducer = ""
                    End If

                    'Server validation for  : txt_Cat_Designer            
                    Dim myDesigner As Object = Nothing
                    If txt_Cat_Designer.Text <> "" Then
                        myDesigner = TrimAll(txt_Cat_Designer.Text)
                        myDesigner = RemoveQuotes(myDesigner)
                        If myDesigner.Length > 150 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Designer.Focus()
                            Exit Sub
                        End If
                    Else
                        myDesigner = ""
                    End If

                    'Server validation for  : txt_Cat_Manufacturer						            
                    Dim myManufacturer As Object = Nothing
                    If txt_Cat_Manufacturer.Text <> "" Then
                        myManufacturer = TrimAll(txt_Cat_Manufacturer.Text)
                        myManufacturer = RemoveQuotes(myManufacturer)
                        If myManufacturer.Length > 250 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Manufacturer.Focus()
                            Exit Sub
                        End If
                    Else
                        myManufacturer = ""
                    End If

                    'Server validation for  : txt_Cat_Creater									            
                    Dim myCreator As Object = Nothing
                    If txt_Cat_Creater.Text <> "" Then
                        myCreator = TrimAll(txt_Cat_Creater.Text)
                        myCreator = RemoveQuotes(myCreator)
                        If myCreator.Length > 150 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Creater.Focus()
                            Exit Sub
                        End If
                    Else
                        myCreator = ""
                    End If

                    'Server validation for  : txt_Cat_Materials											            
                    Dim myMaterials As Object = Nothing
                    If txt_Cat_Materials.Text <> "" Then
                        myMaterials = TrimAll(txt_Cat_Materials.Text)
                        myMaterials = RemoveQuotes(myMaterials)
                        If myMaterials.Length > 50 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Materials.Focus()
                            Exit Sub
                        End If
                    Else
                        myMaterials = ""
                    End If


                    'Server validation for  : txt_Cat_WrokCategory													            
                    Dim myWorkCategory As Object = Nothing
                    If txt_Cat_WrokCategory.Text <> "" Then
                        myWorkCategory = TrimAll(txt_Cat_WrokCategory.Text)
                        myWorkCategory = RemoveQuotes(myWorkCategory)
                        If myWorkCategory.Length > 50 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_WrokCategory.Focus()
                            Exit Sub
                        End If
                    Else
                        myWorkCategory = ""
                    End If

                    'Server validation for  : txt_Cat_RelatedWork																			            
                    Dim myRelatedWork As Object = Nothing
                    If txt_Cat_RelatedWork.Text <> "" Then
                        myRelatedWork = TrimAll(txt_Cat_RelatedWork.Text)
                        myRelatedWork = RemoveQuotes(myRelatedWork)
                        If myRelatedWork.Length > 250 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_RelatedWork.Focus()
                            Exit Sub
                        End If
                    Else
                        myRelatedWork = ""
                    End If

                    'ser rver validation for  : txt_Cat_Source																										            
                    Dim mySource As Object = Nothing
                    If txt_Cat_Source.Text <> "" Then
                        mySource = TrimAll(txt_Cat_Source.Text)
                        mySource = RemoveQuotes(mySource)
                        If mySource.Length > 250 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Source.Focus()
                            Exit Sub
                        End If
                    Else
                        mySource = ""
                    End If

                    'ser rver validation for  : txt_Cat_Photographer																																            
                    Dim myPhotographer As Object = Nothing
                    If txt_Cat_Photographer.Text <> "" Then
                        myPhotographer = TrimAll(txt_Cat_Photographer.Text)
                        myPhotographer = RemoveQuotes(myPhotographer)
                        If myPhotographer.Length > 250 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Photographer.Focus()
                            Exit Sub
                        End If
                    Else
                        myPhotographer = ""
                    End If

                    'ser rver validation for  : txt_Cat_Nationality																																	            
                    Dim myNationality As Object = Nothing
                    If txt_Cat_Nationality.Text <> "" Then
                        myNationality = TrimAll(txt_Cat_Nationality.Text)
                        myNationality = RemoveQuotes(myNationality)
                        If myNationality.Length > 50 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Nationality.Focus()
                            Exit Sub
                        End If
                    Else
                        myNationality = ""
                    End If

                    'ser rver validation for  : txt_Cat_Techniq																																	            
                    Dim myTechniq As Object = Nothing
                    If txt_Cat_Techniq.Text <> "" Then
                        myTechniq = TrimAll(txt_Cat_Techniq.Text)
                        myTechniq = RemoveQuotes(myTechniq)
                        If myTechniq.Length > 150 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_Techniq.Focus()
                            Exit Sub
                        End If
                    Else
                        myTechniq = ""
                    End If

                    'ser rver validation for  : txt_Cat_WorkType																																			            
                    Dim myWorkType As Object = Nothing
                    If txt_Cat_WorkType.Text <> "" Then
                        myWorkType = TrimAll(txt_Cat_WorkType.Text)
                        myWorkType = RemoveQuotes(myWorkType)
                        If myWorkType.Length > 50 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_WorkType.Focus()
                            Exit Sub
                        End If
                    Else
                        myWorkType = ""
                    End If

                    'ser rver validation for  : txt_Cat_RoleofCreator																																					            
                    Dim myRoleofCreator As Object = Nothing
                    If txt_Cat_RoleofCreator.Text <> "" Then
                        myRoleofCreator = TrimAll(txt_Cat_RoleofCreator.Text)
                        myRoleofCreator = RemoveQuotes(myRoleofCreator)
                        If myRoleofCreator.Length > 50 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_RoleofCreator.Focus()
                            Exit Sub
                        End If
                    Else
                        myRoleofCreator = ""
                    End If

                    'Server validation for  : SP Re-txt_Cat_ProductionYear		
                    Dim myProductionYear As Integer = Nothing
                    If txt_Cat_ProductionYear.Text <> "" Then
                        myProductionYear = TrimX(txt_Cat_ProductionYear.Text)
                        myProductionYear = RemoveQuotes(myProductionYear)
                        If Not Len(myProductionYear.ToString) = 4 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ProductionYear.Focus()
                            Exit Sub
                        End If

                        myProductionYear = " " & myProductionYear & " "
                        If InStr(1, myProductionYear, "CREATE", 1) > 0 Or InStr(1, myProductionYear, "DELETE", 1) > 0 Or InStr(1, myProductionYear, "DROP", 1) > 0 Or InStr(1, myProductionYear, "INSERT", 1) > 1 Or InStr(1, myProductionYear, "TRACK", 1) > 1 Or InStr(1, myProductionYear, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ProductionYear.Focus()
                            Exit Sub
                        End If
                        myProductionYear = TrimX(myProductionYear)
                        'check unwanted characters
                        c = 0
                        counter56 = 0
                        For iloop = 1 To Len(myProductionYear.ToString)
                            strcurrentchar = Mid(myProductionYear, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter56 = 1
                                End If
                            End If
                        Next
                        If counter56 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ProductionYear.Focus()
                            Exit Sub
                        End If
                    Else
                        myProductionYear = 0
                    End If



                    'validation for CHAIRMAN
                    Dim CHAIRMAN As Object = Nothing
                    If txt_Cat_Chairman.Text <> "" Then
                        CHAIRMAN = TrimAll(txt_Cat_Chairman.Text)
                        CHAIRMAN = RemoveQuotes(CHAIRMAN)
                        If CHAIRMAN.Length > 250 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Cat_Chairman.Focus()
                            Exit Sub
                        End If
                        CHAIRMAN = " " & CHAIRMAN & " "
                        If InStr(1, CHAIRMAN, "CREATE", 1) > 0 Or InStr(1, CHAIRMAN, "DELETE", 1) > 0 Or InStr(1, CHAIRMAN, "DROP", 1) > 0 Or InStr(1, CHAIRMAN, "INSERT", 1) > 1 Or InStr(1, CHAIRMAN, "TRACK", 1) > 1 Or InStr(1, CHAIRMAN, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Cat_Chairman.Focus()
                            Exit Sub
                        End If
                        CHAIRMAN = TrimAll(CHAIRMAN)
                        'check unwanted characters
                        c = 0
                        counter71 = 0
                        For iloop = 1 To Len(CHAIRMAN)
                            strcurrentchar = Mid(CHAIRMAN, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter71 = 1
                                End If
                            End If
                        Next
                        If counter71 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Cat_Chairman.Focus()
                            Exit Sub
                        End If
                    Else
                        CHAIRMAN = ""
                    End If


                    'validation for GOVERNMENT
                    Dim GOVERNMENT As Object = Nothing
                    If DDL_Government.Text <> "" Then
                        GOVERNMENT = DDL_Government.SelectedValue
                        GOVERNMENT = RemoveQuotes(GOVERNMENT)
                        If GOVERNMENT.Length > 50 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Government.Focus()
                            Exit Sub
                        End If
                        GOVERNMENT = " " & GOVERNMENT & " "
                        If InStr(1, GOVERNMENT, "CREATE", 1) > 0 Or InStr(1, GOVERNMENT, "DELETE", 1) > 0 Or InStr(1, GOVERNMENT, "DROP", 1) > 0 Or InStr(1, GOVERNMENT, "INSERT", 1) > 1 Or InStr(1, GOVERNMENT, "TRACK", 1) > 1 Or InStr(1, GOVERNMENT, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Government.Focus()
                            Exit Sub
                        End If
                        GOVERNMENT = TrimAll(GOVERNMENT)
                        'check unwanted characters
                        c = 0
                        counter72 = 0
                        For iloop = 1 To Len(GOVERNMENT)
                            strcurrentchar = Mid(GOVERNMENT, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter72 = 1
                                End If
                            End If
                        Next
                        If counter72 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            DDL_Government.Focus()
                            Exit Sub
                        End If
                    Else
                        GOVERNMENT = ""
                    End If


                    'validation for ACT_NO
                    Dim ACT_NO As Object = Nothing
                    If txt_Cat_ActNo.Text <> "" Then
                        ACT_NO = TrimAll(txt_Cat_ActNo.Text)
                        ACT_NO = RemoveQuotes(ACT_NO)
                        If ACT_NO.Length > 150 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Cat_ActNo.Focus()
                            Exit Sub
                        End If
                        ACT_NO = " " & ACT_NO & " "
                        If InStr(1, ACT_NO, "CREATE", 1) > 0 Or InStr(1, ACT_NO, "DELETE", 1) > 0 Or InStr(1, ACT_NO, "DROP", 1) > 0 Or InStr(1, ACT_NO, "INSERT", 1) > 1 Or InStr(1, ACT_NO, "TRACK", 1) > 1 Or InStr(1, ACT_NO, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Cat_ActNo.Focus()
                            Exit Sub
                        End If
                        ACT_NO = TrimAll(ACT_NO)
                        'check unwanted characters
                        c = 0
                        counter73 = 0
                        For iloop = 1 To Len(ACT_NO)
                            strcurrentchar = Mid(ACT_NO, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter73 = 1
                                End If
                            End If
                        Next
                        If counter73 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Cat_ActNo.Focus()
                            Exit Sub
                        End If
                    Else
                        ACT_NO = ""
                    End If

                    'Server validation for  : ACT_YEAR		
                    Dim ACT_YEAR As Integer = Nothing
                    If txt_Cat_ActYear.Text <> "" Then
                        ACT_YEAR = TrimX(txt_Cat_ActYear.Text)
                        ACT_YEAR = RemoveQuotes(ACT_YEAR)
                        If Not Len(ACT_YEAR.ToString) = 4 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            txt_Cat_ActYear.Focus()
                            Exit Sub
                        End If

                        ACT_YEAR = " " & ACT_YEAR & " "
                        If InStr(1, ACT_YEAR, "CREATE", 1) > 0 Or InStr(1, ACT_YEAR, "DELETE", 1) > 0 Or InStr(1, ACT_YEAR, "DROP", 1) > 0 Or InStr(1, ACT_YEAR, "INSERT", 1) > 1 Or InStr(1, ACT_YEAR, "TRACK", 1) > 1 Or InStr(1, ACT_YEAR, "TRACE", 1) > 1 Then
                            Label6.Text = " Do Not use Reserve Words... "
                            Label15.Text = ""
                            Me.txt_Cat_ActYear.Focus()
                            Exit Sub
                        End If
                        ACT_YEAR = TrimX(ACT_YEAR)
                        'check unwanted characters
                        c = 0
                        counter56 = 0
                        For iloop = 1 To Len(ACT_YEAR.ToString)
                            strcurrentchar = Mid(ACT_YEAR, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#^*+|?%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter56 = 1
                                End If
                            End If
                        Next
                        If counter56 = 1 Then
                            Label6.Text = " Do Not use un-wanted Characters... "
                            Label15.Text = ""
                            Me.txt_Cat_ActYear.Focus()
                            Exit Sub
                        End If
                    Else
                        ACT_YEAR = 0
                    End If




                    'upload library photo
                    Dim arrContent2 As Byte()
                    Dim intLength2Photo As Integer = 0
                    If FileUpload1.FileName = "" Then
                        '    ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Please Select Proper file... ');", True)
                        '    Me.FileUpload12.Focus()
                        '    Exit Sub
                    Else
                        Dim fileName As String = FileUpload1.PostedFile.FileName
                        Dim ext As String = fileName.Substring(fileName.LastIndexOf("."))
                        ext = ext.ToLower
                        Dim imgType = FileUpload1.PostedFile.ContentType

                        If ext = ".jpg" Then

                        ElseIf ext = ".bmp" Then

                        ElseIf ext = ".gif" Then

                        ElseIf ext = "jpg" Then

                        ElseIf ext = "bmp" Then

                        ElseIf ext = "gif" Then

                        Else
                            ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Please Select Only gif, bmp, or jpg format files supported... ');", True)
                            Me.FileUpload1.Focus()
                            Exit Sub
                        End If
                        intLength2Photo = Convert.ToInt32(FileUpload1.PostedFile.InputStream.Length)
                        ReDim arrContent2(intLength2Photo)
                        FileUpload1.PostedFile.InputStream.Read(arrContent2, 0, intLength2Photo)

                        If intLength2Photo > 6000 Then
                            Label6.Text = "Error: Photo Size is Bigger than 6 KB"
                            Label15.Text = ""
                            Exit Sub
                        End If
                        Image1.ImageUrl = FileUpload1.PostedFile.FileName '"~/Images/1.png"
                    End If



                    'upload content file
                    Dim arrContent3 As Byte()
                    Dim FileType As String = Nothing
                    Dim FileExtension As String = Nothing
                    Dim intLength3 As Integer = 0
                    If FileUpload2.FileName = "" Then
                        '    ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Please Select Proper file... ');", True)
                        '    Me.FileUpload12.Focus()
                        '    Exit Sub
                    Else
                        Dim ContfileName As String = FileUpload2.PostedFile.FileName
                        FileExtension = ContfileName.Substring(ContfileName.LastIndexOf("."))
                        FileExtension = FileExtension.ToLower
                        FileType = FileUpload2.PostedFile.ContentType

                        intLength3 = Convert.ToInt32(FileUpload2.PostedFile.InputStream.Length)
                        ReDim arrContent3(intLength3)
                        FileUpload2.PostedFile.InputStream.Read(arrContent3, 0, intLength3)

                        If intLength3 > 90000 Then
                            Label6.Text = "Error: Photo Size is Bigger than 90 KB"
                            Label15.Text = ""
                            Exit Sub
                        End If
                    End If





                    Dim myUserCode As Object = Nothing
                    myUserCode = Session.Item("LoggedUser")

                    Dim myDateModified As Object = Nothing
                    myDateModified = Now.Date
                    myDateModified = Convert.ToDateTime(myDateModified, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                    Dim myIP As Object = Nothing
                    myIP = Request.UserHostAddress.Trim

                    'check title for duplicacy
                    Dim str3 As Object = Nothing
                    Dim flag3 As Object = Nothing
                    If myAuthor1 = String.Empty And myAuthor2 = String.Empty And myAuthor3 = String.Empty Then
                        str3 = "select CAT_NO from CATS_AUTHORS_VIEW where (TITLE= N'" & myTitle & "') "
                    ElseIf myAuthor1 <> String.Empty And myAuthor2 = String.Empty And myAuthor3 = String.Empty Then
                        str3 = "select CAT_NO from CATS_AUTHORS_VIEW where (TITLE = N'" & myTitle & "' and AUTHOR1='" & myAuthor1 & "')"
                    ElseIf myAuthor1 <> String.Empty And myAuthor2 <> String.Empty And myAuthor3 = String.Empty Then
                        str3 = "select CAT_NO from CATS_AUTHORS_VIEW where (TITLE = N'" & myTitle & "' and AUTHOR1='" & myAuthor1 & "' and AUTHOR2='" & myAuthor2 & "')"
                    ElseIf myAuthor1 <> String.Empty And myAuthor2 <> String.Empty And myAuthor3 <> String.Empty Then
                        str3 = "select CAT_NO from CATS_AUTHORS_VIEW where (TITLE = N'" & myTitle & "' and AUTHOR1='" & myAuthor1 & "' and AUTHOR2='" & myAuthor2 & "' and AUTHOR3='" & myAuthor3 & "')"
                    End If
                    If myEdition <> String.Empty Then
                        str3 = str3 & " AND (EDITION= N'" & myEdition & "') "
                    End If

                    Dim PUBNAMEX As Object = Nothing
                    If Pub_ComboBox.Text <> "" Then
                        PUBNAMEX = Pub_ComboBox.SelectedItem.ToString
                    Else
                        PUBNAMEX = ""
                    End If
                    If PUBNAMEX <> String.Empty Then
                        str3 = str3 & " AND (PUB_NAME= N'" & PUBNAMEX & "') "
                    End If
                    If myPubYear <> 0 Then
                        str3 = str3 & " AND (YEAR_OF_PUB= '" & myPubYear & "') "
                    End If

                    str3 = str3 & " AND (CAT_NO <> '" & Trim(Label7.Text) & "')"


                    Dim cmd3 As New SqlCommand(str3, SqlConn)
                    SqlConn.Open()
                    flag3 = cmd3.ExecuteScalar
                    SqlConn.Close()
                    If flag3 <> Nothing Then
                        Label6.Text = "This TITLE Already Exists ! "
                        Label15.Text = ""
                        Me.txt_Cat_ISBN.Focus()
                        Exit Sub
                    End If

                    '****************************************************************************************************
                    'GET HOLDINGS VARIABLE
                    'txt_Hold_AccSereis
                    Dim counter85, counter86, counter87, counter88, counter89, counter90, counter91, counter92, counter93, counter94, counter95, counter96, counter97, counter98, counter99 As Integer
                    Dim counter100, counter101, counter102, counter103, counter104, counter105, counter106, counter107, counter108, counter109, counter110, counter111, counter112, counter113 As Integer

                    'validation for cat_no
                    Dim HOLD_ID As Integer = Nothing
                    Dim HOLD_LIB_CODE As Object = Nothing
                    Dim ACCESSION_NO As Object = Nothing
                    Dim ACCESSION_DATE As Object = Nothing
                    Dim FORMAT_CODE As Object = Nothing
                    Dim SHOW As Object = Nothing
                    Dim ISSUABLE As Object = Nothing
                    Dim VOL_NO As Object = Nothing
                    Dim VOL_YEAR As Integer = Nothing
                    Dim VOL_EDITORS As Object = Nothing
                    Dim VOL_TITLE As Object = Nothing
                    Dim COPY_ISBN As Object = Nothing
                    Dim CLASS_NO As Object = Nothing
                    Dim BOOK_NO As Object = Nothing
                    Dim PAGINATION As Object = Nothing
                    Dim SIZE As Object = Nothing
                    Dim ILLUSTRATION As Object = Nothing
                    Dim COLLECTION_TYPE As Object = Nothing
                    Dim BIND_CODE As Object = Nothing
                    Dim SEC_CODE As Object = Nothing
                    Dim ACC_MAT_CODE As Object = Nothing
                    Dim REMARKS As Object = Nothing
                    Dim PHYSICAL_LOCATION As Object = Nothing
                    Dim REFERENCE_NO As Object = Nothing
                    Dim RECORDING_MEDIUM As Object = Nothing
                    Dim RECORDING_CATEGORY As Object = Nothing
                    Dim RECORDING_FORM As Object = Nothing
                    Dim RECORDING_FORMAT As Object = Nothing
                    Dim RECORDING_SPEED As Object = Nothing
                    Dim RECORDING_STORAGE_TECH As Object = Nothing
                    Dim RECORDING_PLAY_DURATION As Object = Nothing
                    Dim VIDEO_TYPEOFVISUALS As Object = Nothing
                    Dim CARTOGRAPHIC_SCALE As Object = Nothing
                    Dim CARTOGRAPHIC_PROJECTION As Object = Nothing
                    Dim CARTOGRAPHIC_COORDINATES As Object = Nothing
                    Dim CARTOGRAPHIC_LOCATION As Object = Nothing
                    Dim CARTOGRAPHIC_GEOGRAPHIC_LOCATION As Object = Nothing
                    Dim CARTOGRAPHIC_MEDIUM As Object = Nothing
                    Dim CARTOGRAPHIC_DATAGATHERING_DATE As Object = Nothing
                    Dim CARTOGRAPHIC_CREATION_DATE As Object = Nothing
                    Dim CARTOGRAPHIC_COMPILATION_DATE As Object = Nothing
                    Dim CARTOGRAPHIC_INSPECTION_DATE As Object = Nothing
                    Dim VIDEO_COLOR As Object = Nothing
                    Dim PLAYBACK_CHANNELS As Object = Nothing
                    Dim TAPE_WIDTH As Object = Nothing
                    Dim TAPE_CONFIGURATION As Object = Nothing
                    Dim KIND_OF_DISK As Object = Nothing
                    Dim KIND_OF_CUTTING As Object = Nothing
                    Dim ENCODING_STANDARD As Object = Nothing
                    Dim CAPTURE_TECHNIQUE As Object = Nothing
                    Dim PHOTO_NO As Object = Nothing
                    Dim PHOTO_ALBUM_NO As Object = Nothing
                    Dim PHOTO_OCASION As Object = Nothing
                    Dim IMAGE_VIEW_TYPE As Object = Nothing
                    Dim VIEW_DATE As Object = Nothing
                    Dim THEME As Object = Nothing
                    Dim STYLE As Object = Nothing
                    Dim CULTURE As Object = Nothing
                    Dim CURRENT_SITE As Object = Nothing
                    Dim CREATION_SITE As Object = Nothing
                    Dim YARNCOUNT As Object = Nothing
                    Dim MATERIAL_TYPE As Object = Nothing
                    Dim TECHNIQUE As Object = Nothing
                    Dim TECH_DETAILS As Object = Nothing
                    Dim INSCRIPTIONS As Object = Nothing
                    Dim DESCRIPTION As Object = Nothing
                    Dim GLOBE_TYPE As Object = Nothing
                    Dim ALTER_DATE As Object = Nothing

                    If Table2.Visible = True Then
                        If Me.Label_HoldID.Text <> "" Then
                            HOLD_ID = Convert.ToInt16(TrimX(Label_HoldID.Text))
                            HOLD_ID = RemoveQuotes(HOLD_ID)
                            If Not IsNumeric(HOLD_ID) = True Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                Exit Sub
                            End If
                            If Len(HOLD_ID) > 5 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                Exit Sub
                            End If
                            HOLD_ID = " " & HOLD_ID & " "
                            If InStr(1, HOLD_ID, "CREATE", 1) > 0 Or InStr(1, HOLD_ID, "DELETE", 1) > 0 Or InStr(1, HOLD_ID, "DROP", 1) > 0 Or InStr(1, HOLD_ID, "INSERT", 1) > 1 Or InStr(1, HOLD_ID, "TRACK", 1) > 1 Or InStr(1, HOLD_ID, "TRACE", 1) > 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                Exit Sub
                            End If
                            HOLD_ID = TrimX(HOLD_ID)
                            'check unwanted characters
                            c = 0
                            counter85 = 0
                            For iloop = 1 To Len(HOLD_ID.ToString)
                                strcurrentchar = Mid(HOLD_ID, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter85 = 1
                                    End If
                                End If
                            Next
                            If counter85 = 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                Exit Sub
                            End If


                            'validation for holding Library
                            HOLD_LIB_CODE = DDL_Library.SelectedValue
                            If Not String.IsNullOrEmpty(HOLD_LIB_CODE) Then
                                HOLD_LIB_CODE = RemoveQuotes(HOLD_LIB_CODE)
                                If HOLD_LIB_CODE.Length > 11 Then 'maximum length
                                    Label6.Text = " Data must be of Proper Length.. "
                                    Label15.Text = ""
                                    DDL_Library.Focus()
                                    Exit Sub
                                End If

                                HOLD_LIB_CODE = " " & HOLD_LIB_CODE & " "
                                If InStr(1, HOLD_LIB_CODE, "CREATE", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "DELETE", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "DROP", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "INSERT", 1) > 1 Or InStr(1, HOLD_LIB_CODE, "TRACK", 1) > 1 Or InStr(1, HOLD_LIB_CODE, "TRACE", 1) > 1 Then
                                    Label6.Text = " Input  is not Valid!"
                                    Label15.Text = ""
                                    DDL_Library.Focus()
                                    Exit Sub
                                End If
                                HOLD_LIB_CODE = TrimX(HOLD_LIB_CODE)
                                'check unwanted characters
                                c = 0
                                counter104 = 0
                                For iloop = 1 To Len(HOLD_LIB_CODE)
                                    strcurrentchar = Mid(HOLD_LIB_CODE, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter104 = 1
                                        End If
                                    End If
                                Next
                                If counter104 = 1 Then
                                    Label6.Text = " Input  is not Valid!"
                                    Label15.Text = ""
                                    DDL_Library.Focus()
                                    Exit Sub
                                End If
                            Else
                                HOLD_LIB_CODE = LibCode
                            End If


                            'Server Validation for accession no

                            If txt_Hold_AccNo.Text <> "" Then
                                ACCESSION_NO = TrimX(UCase(txt_Hold_AccNo.Text))
                                ACCESSION_NO = RemoveQuotes(ACCESSION_NO)
                                If ACCESSION_NO.Length > 30 Then 'maximum length
                                    Label6.Text = "Error: Input is not Valid !"
                                    Label15.Text = ""
                                    txt_Hold_AccNo.Focus()
                                    Exit Sub
                                End If

                                ACCESSION_NO = " " & ACCESSION_NO & " "
                                If InStr(1, ACCESSION_NO, "CREATE", 1) > 0 Or InStr(1, ACCESSION_NO, "DELETE", 1) > 0 Or InStr(1, ACCESSION_NO, "DROP", 1) > 0 Or InStr(1, ACCESSION_NO, "INSERT", 1) > 1 Or InStr(1, ACCESSION_NO, "TRACK", 1) > 1 Or InStr(1, ACCESSION_NO, "TRACE", 1) > 1 Then
                                    Label6.Text = "Error: Input is not Valid !"
                                    Label15.Text = ""
                                    Me.txt_Hold_AccNo.Focus()
                                    Exit Sub
                                End If
                                ACCESSION_NO = TrimX(ACCESSION_NO)
                                'check unwanted characters
                                c = 0
                                counter86 = 0
                                For iloop = 1 To Len(ACCESSION_NO.ToString)
                                    strcurrentchar = Mid(ACCESSION_NO, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("'~!@#$^*+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter86 = 1
                                        End If
                                    End If
                                Next
                                If counter86 = 1 Then
                                    Label6.Text = "Error: Accession No  is not Valid !"
                                    Label15.Text = ""
                                    Me.txt_Hold_AccNo.Focus()
                                    Exit Sub
                                End If

                                'check duplicate acc no
                                Dim str As Object = Nothing
                                Dim flag As Object = Nothing
                                str = "SELECT HOLD_ID FROM HOLDINGS WHERE (ACCESSION_NO = '" & Trim(ACCESSION_NO) & "')  AND (LIB_CODE = '" & Trim(HOLD_LIB_CODE) & "') AND (HOLD_ID <>'" & Trim(HOLD_ID) & "')"
                                Dim cmd1 As New SqlCommand(str, SqlConn)
                                SqlConn.Open()
                                flag = cmd1.ExecuteScalar
                                If flag <> Nothing Then
                                    Label6.Text = "This Accession No Already Exists ! "
                                    Label15.Text = ""
                                    Me.txt_Hold_AccNo.Focus()
                                    Exit Sub
                                End If
                                SqlConn.Close()
                            Else
                                Label6.Text = "Error: Accession No  is Required !"
                                Label15.Text = ""
                                Me.txt_Hold_AccNo.Focus()
                                Exit Sub
                            End If

                            'search accession date
                            'Dim ACCESSION_DATE As Object = Nothing
                            If txt_Hold_AccDate.Text <> "" Then
                                ACCESSION_DATE = TrimX(txt_Hold_AccDate.Text)
                                ACCESSION_DATE = RemoveQuotes(ACCESSION_DATE)
                                ACCESSION_DATE = Convert.ToDateTime(ACCESSION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                                If Len(ACCESSION_DATE) > 12 Then
                                    Label6.Text = " Input is not Valid..."
                                    Label15.Text = ""
                                    Me.txt_Hold_AccDate.Focus()
                                    Exit Sub
                                End If
                                ACCESSION_DATE = " " & ACCESSION_DATE & " "
                                If InStr(1, ACCESSION_DATE, "CREATE", 1) > 0 Or InStr(1, ACCESSION_DATE, "DELETE", 1) > 0 Or InStr(1, ACCESSION_DATE, "DROP", 1) > 0 Or InStr(1, ACCESSION_DATE, "INSERT", 1) > 1 Or InStr(1, ACCESSION_DATE, "TRACK", 1) > 1 Or InStr(1, ACCESSION_DATE, "TRACE", 1) > 1 Then
                                    Label6.Text = "  Input is not Valid... "
                                    Label15.Text = ""
                                    Me.txt_Hold_AccDate.Focus()
                                    Exit Sub
                                End If
                                ACCESSION_DATE = TrimX(ACCESSION_DATE)
                                'check unwanted characters
                                c = 0
                                counter87 = 0
                                For iloop = 1 To Len(ACCESSION_DATE)
                                    strcurrentchar = Mid(ACCESSION_DATE, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter87 = 1
                                        End If
                                    End If
                                Next
                                If counter87 = 1 Then
                                    Label6.Text = "data is not Valid... "
                                    Label15.Text = ""
                                    Me.txt_Hold_AccDate.Focus()
                                    Exit Sub
                                End If
                            Else
                                ACCESSION_DATE = Now.Date
                                ACCESSION_DATE = Convert.ToDateTime(ACCESSION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us
                            End If

                            'validation for Format
                            'Dim FORMAT_CODE As Object = Nothing
                            If TR_FORMAT_CODE.Visible = True Then
                                FORMAT_CODE = DDL_Format.SelectedValue
                                If Not String.IsNullOrEmpty(FORMAT_CODE) Then
                                    FORMAT_CODE = RemoveQuotes(FORMAT_CODE)
                                    If FORMAT_CODE.Length > 3 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        DDL_Format.Focus()
                                        Exit Sub
                                    End If

                                    FORMAT_CODE = " " & FORMAT_CODE & " "
                                    If InStr(1, FORMAT_CODE, "CREATE", 1) > 0 Or InStr(1, FORMAT_CODE, "DELETE", 1) > 0 Or InStr(1, FORMAT_CODE, "DROP", 1) > 0 Or InStr(1, FORMAT_CODE, "INSERT", 1) > 1 Or InStr(1, FORMAT_CODE, "TRACK", 1) > 1 Or InStr(1, FORMAT_CODE, "TRACE", 1) > 1 Then
                                        ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                                        DDL_Format.Focus()
                                        Exit Sub
                                    End If
                                    FORMAT_CODE = TrimX(FORMAT_CODE)
                                    'check unwanted characters
                                    c = 0
                                    counter88 = 0
                                    For iloop = 1 To Len(FORMAT_CODE)
                                        strcurrentchar = Mid(FORMAT_CODE, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter88 = 1
                                            End If
                                        End If
                                    Next
                                    If counter88 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        DDL_Format.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    FORMAT_CODE = "PT"
                                End If
                            Else
                                FORMAT_CODE = "PT"
                            End If

                            'validation for SHOW
                            'Dim SHOW As Object = Nothing
                            SHOW = DDL_Show.SelectedValue
                            If Not String.IsNullOrEmpty(SHOW) Then
                                SHOW = RemoveQuotes(SHOW)
                                If SHOW.Length > 2 Then 'maximum length
                                    Label6.Text = " Data must be of Proper Length.. "
                                    Label15.Text = ""
                                    DDL_Show.Focus()
                                    Exit Sub
                                End If

                                SHOW = " " & SHOW & " "
                                If InStr(1, SHOW, "CREATE", 1) > 0 Or InStr(1, SHOW, "DELETE", 1) > 0 Or InStr(1, SHOW, "DROP", 1) > 0 Or InStr(1, SHOW, "INSERT", 1) > 1 Or InStr(1, SHOW, "TRACK", 1) > 1 Or InStr(1, SHOW, "TRACE", 1) > 1 Then
                                    DDL_Show.Focus()
                                    Exit Sub
                                End If
                                SHOW = TrimX(SHOW)
                                'check unwanted characters
                                c = 0
                                counter89 = 0
                                For iloop = 1 To Len(SHOW)
                                    strcurrentchar = Mid(SHOW, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter89 = 1
                                        End If
                                    End If
                                Next
                                If counter89 = 1 Then
                                    Label6.Text = " Input  is not Valid!"
                                    Label15.Text = ""
                                    DDL_Show.Focus()
                                    Exit Sub
                                End If
                            Else
                                SHOW = "Y"
                            End If

                            'validation for ISSUABLE
                            'Dim ISSUABLE As Object = Nothing
                            ISSUABLE = DDL_Issuable.SelectedValue
                            If Not String.IsNullOrEmpty(ISSUABLE) Then
                                ISSUABLE = RemoveQuotes(ISSUABLE)
                                If ISSUABLE.Length > 2 Then 'maximum length
                                    Label6.Text = " Data must be of Proper Length.. "
                                    Label15.Text = ""
                                    DDL_Issuable.Focus()
                                    Exit Sub
                                End If

                                ISSUABLE = " " & ISSUABLE & " "
                                If InStr(1, ISSUABLE, "CREATE", 1) > 0 Or InStr(1, ISSUABLE, "DELETE", 1) > 0 Or InStr(1, ISSUABLE, "DROP", 1) > 0 Or InStr(1, ISSUABLE, "INSERT", 1) > 1 Or InStr(1, ISSUABLE, "TRACK", 1) > 1 Or InStr(1, ISSUABLE, "TRACE", 1) > 1 Then
                                    DDL_Issuable.Focus()
                                    Exit Sub
                                End If
                                ISSUABLE = TrimX(ISSUABLE)
                                'check unwanted characters
                                c = 0
                                counter90 = 0
                                For iloop = 1 To Len(ISSUABLE)
                                    strcurrentchar = Mid(ISSUABLE, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter90 = 1
                                        End If
                                    End If
                                Next
                                If counter90 = 1 Then
                                    Label6.Text = " Input  is not Valid!"
                                    Label15.Text = ""
                                    DDL_Issuable.Focus()
                                    Exit Sub
                                End If
                            Else
                                ISSUABLE = "Y"
                            End If

                            'validation for VOL_NO
                            ' Dim VOL_NO As Object = Nothing
                            If TR_VOL_NO.Visible = True Then
                                VOL_NO = Trim(txt_Hold_VolNo.Text)
                                If Not String.IsNullOrEmpty(VOL_NO) Then
                                    VOL_NO = RemoveQuotes(VOL_NO)
                                    If VOL_NO.Length > 30 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_VolNo.Focus()
                                        Exit Sub
                                    End If

                                    VOL_NO = " " & VOL_NO & " "
                                    If InStr(1, VOL_NO, "CREATE", 1) > 0 Or InStr(1, VOL_NO, "DELETE", 1) > 0 Or InStr(1, VOL_NO, "DROP", 1) > 0 Or InStr(1, VOL_NO, "INSERT", 1) > 1 Or InStr(1, VOL_NO, "TRACK", 1) > 1 Or InStr(1, VOL_NO, "TRACE", 1) > 1 Then
                                        txt_Hold_VolNo.Focus()
                                        Exit Sub
                                    End If
                                    VOL_NO = TrimAll(VOL_NO)
                                    'check unwanted characters
                                    c = 0
                                    counter91 = 0
                                    For iloop = 1 To Len(VOL_NO)
                                        strcurrentchar = Mid(VOL_NO, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter91 = 1
                                            End If
                                        End If
                                    Next
                                    If counter91 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        txt_Hold_VolNo.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    VOL_NO = ""
                                End If
                            Else
                                VOL_NO = ""
                            End If

                            'validation for cat_no
                            'Dim VOL_YEAR As Integer = Nothing
                            If TR_VOL_NO.Visible = True Then
                                If Me.txt_Hold_VolYear.Text <> "" Then
                                    VOL_YEAR = Convert.ToInt16(TrimX(txt_Hold_VolYear.Text))
                                    VOL_YEAR = RemoveQuotes(VOL_YEAR)
                                    If Not IsNumeric(VOL_YEAR) = True Then
                                        Label6.Text = "Error: Input is not Valid !"
                                        Label15.Text = ""
                                        txt_Hold_VolYear.Focus()
                                        Exit Sub
                                    End If
                                    If Len(VOL_YEAR) > 5 Then
                                        Label6.Text = "Error: Input is not Valid !"
                                        Label15.Text = ""
                                        txt_Hold_VolYear.Focus()
                                        Exit Sub
                                    End If
                                    VOL_YEAR = " " & VOL_YEAR & " "
                                    If InStr(1, VOL_YEAR, "CREATE", 1) > 0 Or InStr(1, VOL_YEAR, "DELETE", 1) > 0 Or InStr(1, VOL_YEAR, "DROP", 1) > 0 Or InStr(1, VOL_YEAR, "INSERT", 1) > 1 Or InStr(1, VOL_YEAR, "TRACK", 1) > 1 Or InStr(1, VOL_YEAR, "TRACE", 1) > 1 Then
                                        Label6.Text = "Error: Input is not Valid !"
                                        Label15.Text = ""
                                        txt_Hold_VolYear.Focus()
                                        Exit Sub
                                    End If
                                    VOL_YEAR = TrimX(VOL_YEAR)
                                    'check unwanted characters
                                    c = 0
                                    counter92 = 0
                                    For iloop = 1 To Len(VOL_YEAR.ToString)
                                        strcurrentchar = Mid(VOL_YEAR, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter92 = 1
                                            End If
                                        End If
                                    Next
                                    If counter92 = 1 Then
                                        Label6.Text = "Error: Input is not Valid !"
                                        Label15.Text = ""
                                        txt_Hold_VolYear.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    VOL_YEAR = 0
                                End If
                            Else
                                VOL_YEAR = 0
                            End If

                            'validation for VOL_EDITORS
                            ' Dim VOL_EDITORS As Object = Nothing
                            If TR_VOL_EDITORS.Visible = True Then
                                VOL_EDITORS = TrimAll(txt_Hold_VolEditors.Text)
                                If Not String.IsNullOrEmpty(VOL_EDITORS) Then
                                    VOL_EDITORS = RemoveQuotes(VOL_EDITORS)
                                    If VOL_EDITORS.Length > 501 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_VolEditors.Focus()
                                        Exit Sub
                                    End If

                                    VOL_EDITORS = " " & VOL_EDITORS & " "
                                    If InStr(1, VOL_EDITORS, "CREATE", 1) > 0 Or InStr(1, VOL_EDITORS, "DELETE", 1) > 0 Or InStr(1, VOL_EDITORS, "DROP", 1) > 0 Or InStr(1, VOL_EDITORS, "INSERT", 1) > 1 Or InStr(1, VOL_EDITORS, "TRACK", 1) > 1 Or InStr(1, VOL_EDITORS, "TRACE", 1) > 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        txt_Hold_VolEditors.Focus()
                                        Exit Sub
                                    End If
                                    VOL_EDITORS = TrimAll(VOL_EDITORS)
                                    'check unwanted characters
                                    c = 0
                                    counter94 = 0
                                    For iloop = 1 To Len(VOL_EDITORS)
                                        strcurrentchar = Mid(VOL_EDITORS, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter94 = 1
                                            End If
                                        End If
                                    Next
                                    If counter94 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        txt_Hold_VolEditors.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    VOL_EDITORS = ""
                                End If
                            Else
                                VOL_EDITORS = ""
                            End If

                            'validation for VOL_TITLE
                            'Dim VOL_TITLE As Object = Nothing
                            If TR_VOL_TITLE.Visible = True Then
                                VOL_TITLE = TrimAll(txt_Hold_VolTitle.Text)
                                If Not String.IsNullOrEmpty(VOL_TITLE) Then
                                    VOL_TITLE = RemoveQuotes(VOL_TITLE)
                                    If VOL_TITLE.Length > 501 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_VolTitle.Focus()
                                        Exit Sub
                                    End If

                                    VOL_TITLE = " " & VOL_TITLE & " "
                                    If InStr(1, VOL_TITLE, "CREATE", 1) > 0 Or InStr(1, VOL_TITLE, "DELETE", 1) > 0 Or InStr(1, VOL_TITLE, "DROP", 1) > 0 Or InStr(1, VOL_TITLE, "INSERT", 1) > 1 Or InStr(1, VOL_TITLE, "TRACK", 1) > 1 Or InStr(1, VOL_TITLE, "TRACE", 1) > 1 Then
                                        txt_Hold_VolTitle.Focus()
                                        Exit Sub
                                    End If
                                    VOL_TITLE = TrimAll(VOL_TITLE)
                                    'check unwanted characters
                                    c = 0
                                    counter95 = 0
                                    For iloop = 1 To Len(VOL_TITLE)
                                        strcurrentchar = Mid(VOL_TITLE, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter95 = 1
                                            End If
                                        End If
                                    Next
                                    If counter95 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        txt_Hold_VolTitle.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    VOL_TITLE = ""
                                End If
                            Else
                                VOL_TITLE = ""
                            End If

                            'validation for VOL_ISBN
                            'Dim COPY_ISBN As Object = Nothing
                            If TR_VOL_NO.Visible = True Then
                                COPY_ISBN = TrimX(txt_Hold_CopyISBN.Text)
                                If Not String.IsNullOrEmpty(COPY_ISBN) Then
                                    COPY_ISBN = RemoveQuotes(COPY_ISBN)
                                    If COPY_ISBN.Length > 30 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_CopyISBN.Focus()
                                        Exit Sub
                                    End If

                                    COPY_ISBN = " " & COPY_ISBN & " "
                                    If InStr(1, COPY_ISBN, "CREATE", 1) > 0 Or InStr(1, COPY_ISBN, "DELETE", 1) > 0 Or InStr(1, COPY_ISBN, "DROP", 1) > 0 Or InStr(1, COPY_ISBN, "INSERT", 1) > 1 Or InStr(1, COPY_ISBN, "TRACK", 1) > 1 Or InStr(1, COPY_ISBN, "TRACE", 1) > 1 Then
                                        ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                                        Label6.Text = "Do not use reserved Words!"
                                        Label15.Text = ""
                                        txt_Hold_CopyISBN.Focus()
                                        Exit Sub
                                    End If
                                    COPY_ISBN = TrimX(COPY_ISBN)
                                    'check unwanted characters
                                    c = 0
                                    counter96 = 0
                                    For iloop = 1 To Len(COPY_ISBN)
                                        strcurrentchar = Mid(COPY_ISBN, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter96 = 1
                                            End If
                                        End If
                                    Next
                                    If counter96 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        txt_Hold_CopyISBN.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    COPY_ISBN = ""
                                End If
                            Else
                                COPY_ISBN = ""
                            End If

                            'validation for CLASS NO
                            ' Dim CLASS_NO As Object = Nothing
                            If TR_CLASS_NO.Visible = True Then
                                CLASS_NO = TrimX(txt_Hold_ClassNo.Text)
                                If Not String.IsNullOrEmpty(CLASS_NO) Then
                                    CLASS_NO = RemoveQuotes(CLASS_NO)
                                    If CLASS_NO.Length > 150 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_ClassNo.Focus()
                                        Exit Sub
                                    End If

                                    CLASS_NO = " " & CLASS_NO & " "
                                    If InStr(1, CLASS_NO, "CREATE", 1) > 0 Or InStr(1, CLASS_NO, "DELETE", 1) > 0 Or InStr(1, CLASS_NO, "DROP", 1) > 0 Or InStr(1, CLASS_NO, "INSERT", 1) > 1 Or InStr(1, CLASS_NO, "TRACK", 1) > 1 Or InStr(1, CLASS_NO, "TRACE", 1) > 1 Then
                                        Label6.Text = "Do not use reserved Words!"
                                        Label15.Text = ""
                                        txt_Hold_ClassNo.Focus()
                                        Exit Sub
                                    End If
                                    CLASS_NO = TrimX(CLASS_NO)
                                    'check unwanted characters
                                    c = 0
                                    counter97 = 0
                                    For iloop = 1 To Len(CLASS_NO)
                                        strcurrentchar = Mid(CLASS_NO, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter97 = 1
                                            End If
                                        End If
                                    Next
                                    If counter97 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        txt_Hold_ClassNo.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CLASS_NO = ""
                                End If
                            Else
                                CLASS_NO = ""
                            End If

                            'validation for CLASS NO
                            'Dim BOOK_NO As Object = Nothing
                            If TR_CLASS_NO.Visible = True Then
                                BOOK_NO = TrimAll(UCase(txt_Hold_BookNo.Text))
                                If Not String.IsNullOrEmpty(BOOK_NO) Then
                                    BOOK_NO = RemoveQuotes(BOOK_NO)
                                    If BOOK_NO.Length > 50 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_BookNo.Focus()
                                        Exit Sub
                                    End If

                                    BOOK_NO = " " & BOOK_NO & " "
                                    If InStr(1, BOOK_NO, "CREATE", 1) > 0 Or InStr(1, BOOK_NO, "DELETE", 1) > 0 Or InStr(1, BOOK_NO, "DROP", 1) > 0 Or InStr(1, BOOK_NO, "INSERT", 1) > 1 Or InStr(1, BOOK_NO, "TRACK", 1) > 1 Or InStr(1, BOOK_NO, "TRACE", 1) > 1 Then
                                        Label6.Text = "Do not use reserved Words!"
                                        Label15.Text = ""
                                        txt_Hold_BookNo.Focus()
                                        Exit Sub
                                    End If
                                    BOOK_NO = TrimAll(BOOK_NO)
                                    'check unwanted characters
                                    c = 0
                                    counter98 = 0
                                    For iloop = 1 To Len(BOOK_NO)
                                        strcurrentchar = Mid(BOOK_NO, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter98 = 1
                                            End If
                                        End If
                                    Next
                                    If counter98 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        txt_Hold_BookNo.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    BOOK_NO = ""
                                End If
                            Else
                                BOOK_NO = ""
                            End If

                            'validation for PAGES
                            'Dim PAGINATION As Object = Nothing
                            If TR_PAGINATION.Visible = True Then
                                PAGINATION = TrimAll(txt_Hold_Pages.Text)
                                If Not String.IsNullOrEmpty(PAGINATION) Then
                                    PAGINATION = RemoveQuotes(PAGINATION)
                                    If CLASS_NO.Length > 50 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_Pages.Focus()
                                        Exit Sub
                                    End If

                                    PAGINATION = " " & PAGINATION & " "
                                    If InStr(1, PAGINATION, "CREATE", 1) > 0 Or InStr(1, PAGINATION, "DELETE", 1) > 0 Or InStr(1, PAGINATION, "DROP", 1) > 0 Or InStr(1, PAGINATION, "INSERT", 1) > 1 Or InStr(1, PAGINATION, "TRACK", 1) > 1 Or InStr(1, PAGINATION, "TRACE", 1) > 1 Then
                                        Label6.Text = "Do not use reserved Words!"
                                        Label15.Text = ""
                                        txt_Hold_Pages.Focus()
                                        Exit Sub
                                    End If
                                    PAGINATION = TrimAll(PAGINATION)
                                    'check unwanted characters
                                    c = 0
                                    counter99 = 0
                                    For iloop = 1 To Len(PAGINATION)
                                        strcurrentchar = Mid(PAGINATION, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter99 = 1
                                            End If
                                        End If
                                    Next
                                    If counter99 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        txt_Hold_Pages.Focus()
                                        Exit Sub
                                    End If
                                    If InStr(PAGINATION, "p.") = 0 Then
                                        PAGINATION = PAGINATION + "p."
                                    End If
                                    If InStr(PAGINATION, "..") <> 0 Then
                                        PAGINATION = PAGINATION + "."
                                    End If
                                    If InStr(PAGINATION, "pp.") <> 0 Then
                                        PAGINATION = PAGINATION + "p."
                                    End If
                                    If InStr(PAGINATION, "p.p.") <> 0 Then
                                        PAGINATION = PAGINATION + "p."
                                    End If
                                Else
                                    PAGINATION = ""
                                End If
                            Else
                                PAGINATION = ""
                            End If

                            'validation for SIZE
                            ' Dim SIZE As Object = Nothing
                            If TR_SIZE.Visible = True Then
                                SIZE = TrimAll(txt_Hold_Size.Text)
                                If Not String.IsNullOrEmpty(SIZE) Then
                                    SIZE = RemoveQuotes(SIZE)
                                    If SIZE.Length > 50 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_Size.Focus()
                                        Exit Sub
                                    End If

                                    SIZE = " " & SIZE & " "
                                    If InStr(1, SIZE, "CREATE", 1) > 0 Or InStr(1, SIZE, "DELETE", 1) > 0 Or InStr(1, SIZE, "DROP", 1) > 0 Or InStr(1, SIZE, "INSERT", 1) > 1 Or InStr(1, SIZE, "TRACK", 1) > 1 Or InStr(1, SIZE, "TRACE", 1) > 1 Then
                                        Label6.Text = "Do not use reserved Words!"
                                        Label15.Text = ""
                                        txt_Hold_Size.Focus()
                                        Exit Sub
                                    End If
                                    SIZE = TrimAll(SIZE)
                                    'check unwanted characters
                                    c = 0
                                    counter100 = 0
                                    For iloop = 1 To Len(SIZE)
                                        strcurrentchar = Mid(SIZE, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter100 = 1
                                            End If
                                        End If
                                    Next
                                    If counter100 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        txt_Hold_Size.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    SIZE = ""
                                End If
                            Else
                                SIZE = ""
                            End If

                            ' Dim ILLUSTRATION As Object = Nothing
                            If TR_ILLUSTRATION.Visible = True Then
                                If CB_Illus.Checked = True Then
                                    ILLUSTRATION = "Y"
                                Else
                                    ILLUSTRATION = "N"
                                End If
                            Else
                                ILLUSTRATION = "N"
                            End If

                            'validation for COLLECTION TYPE
                            ' Dim COLLECTION_TYPE As Object = Nothing
                            If TR_COLLECTION_TYPE.Visible = True Then
                                COLLECTION_TYPE = DDL_CollectionType.SelectedValue
                                If Not String.IsNullOrEmpty(COLLECTION_TYPE) Then
                                    COLLECTION_TYPE = RemoveQuotes(COLLECTION_TYPE)
                                    If COLLECTION_TYPE.Length > 2 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        DDL_CollectionType.Focus()
                                        Exit Sub
                                    End If

                                    COLLECTION_TYPE = " " & COLLECTION_TYPE & " "
                                    If InStr(1, COLLECTION_TYPE, "CREATE", 1) > 0 Or InStr(1, COLLECTION_TYPE, "DELETE", 1) > 0 Or InStr(1, COLLECTION_TYPE, "DROP", 1) > 0 Or InStr(1, COLLECTION_TYPE, "INSERT", 1) > 1 Or InStr(1, COLLECTION_TYPE, "TRACK", 1) > 1 Or InStr(1, COLLECTION_TYPE, "TRACE", 1) > 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label1.Text = ""
                                        DDL_CollectionType.Focus()
                                        Exit Sub
                                    End If
                                    COLLECTION_TYPE = TrimX(COLLECTION_TYPE)
                                    'check unwanted characters
                                    c = 0
                                    counter101 = 0
                                    For iloop = 1 To Len(COLLECTION_TYPE)
                                        strcurrentchar = Mid(COLLECTION_TYPE, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter101 = 1
                                            End If
                                        End If
                                    Next
                                    If counter101 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        DDL_CollectionType.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    COLLECTION_TYPE = "C"
                                End If
                            Else
                                COLLECTION_TYPE = "C"
                            End If

                            ''validation for STATUS
                            'Dim STA_CODE As Object = Nothing
                            'If TR_STA_CODE.Visible = True Then
                            '    If DDL_Status.Text <> "" Then
                            '        STA_CODE = DDL_Status.SelectedValue
                            '            'If STA_CODE = "2" Then
                            '            'STA_CODE = "1"
                            '            'End If
                            '        Else
                            '            STA_CODE = "1"
                            '        End If
                            '    Else
                            '        STA_CODE = "1"
                            '    End If


                            'validation for BINDING TYPE
                            ' Dim BIND_CODE As Object = Nothing
                            If TR_BIND_CODE.Visible = True Then
                                BIND_CODE = DDL_Binding.SelectedValue
                                If Not String.IsNullOrEmpty(BIND_CODE) Then
                                    BIND_CODE = RemoveQuotes(BIND_CODE)
                                    If BIND_CODE.Length > 11 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        DDL_Binding.Focus()
                                        Exit Sub
                                    End If

                                    BIND_CODE = " " & BIND_CODE & " "
                                    If InStr(1, BIND_CODE, "CREATE", 1) > 0 Or InStr(1, BIND_CODE, "DELETE", 1) > 0 Or InStr(1, BIND_CODE, "DROP", 1) > 0 Or InStr(1, BIND_CODE, "INSERT", 1) > 1 Or InStr(1, BIND_CODE, "TRACK", 1) > 1 Or InStr(1, BIND_CODE, "TRACE", 1) > 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        DDL_Binding.Focus()
                                        Exit Sub
                                    End If
                                    BIND_CODE = TrimX(BIND_CODE)
                                    'check unwanted characters
                                    c = 0
                                    counter102 = 0
                                    For iloop = 1 To Len(BIND_CODE)
                                        strcurrentchar = Mid(BIND_CODE, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter102 = 1
                                            End If
                                        End If
                                    Next
                                    If counter102 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        DDL_Binding.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    BIND_CODE = "U"
                                End If
                            Else
                                BIND_CODE = "U"
                            End If

                            'validation for SECTION
                            ' Dim SEC_CODE As Object = Nothing
                            If TR_SEC_CODE.Visible = True Then
                                SEC_CODE = DDL_Section.SelectedValue
                                If Not String.IsNullOrEmpty(SEC_CODE) Then
                                    SEC_CODE = RemoveQuotes(SEC_CODE)
                                    If SEC_CODE.Length > 11 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        DDL_Section.Focus()
                                        Exit Sub
                                    End If

                                    SEC_CODE = " " & SEC_CODE & " "
                                    If InStr(1, SEC_CODE, "CREATE", 1) > 0 Or InStr(1, SEC_CODE, "DELETE", 1) > 0 Or InStr(1, SEC_CODE, "DROP", 1) > 0 Or InStr(1, SEC_CODE, "INSERT", 1) > 1 Or InStr(1, SEC_CODE, "TRACK", 1) > 1 Or InStr(1, SEC_CODE, "TRACE", 1) > 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        DDL_Section.Focus()
                                        Exit Sub
                                    End If
                                    SEC_CODE = TrimX(SEC_CODE)
                                    'check unwanted characters
                                    c = 0
                                    counter103 = 0
                                    For iloop = 1 To Len(SEC_CODE)
                                        strcurrentchar = Mid(SEC_CODE, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter103 = 1
                                            End If
                                        End If
                                    Next
                                    If counter103 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        DDL_Section.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    SEC_CODE = ""
                                End If
                            Else
                                SEC_CODE = ""
                            End If

                            'validation for accompanying materials
                            ' Dim ACC_MAT_CODE As Object = Nothing
                            If TR_ACC_MAT_CODE.Visible = True Then
                                ACC_MAT_CODE = DDL_AccMaterials.SelectedValue
                                If Not String.IsNullOrEmpty(ACC_MAT_CODE) Then
                                    ACC_MAT_CODE = RemoveQuotes(ACC_MAT_CODE)
                                    If ACC_MAT_CODE.Length > 11 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label1.Text = ""
                                        DDL_AccMaterials.Focus()
                                        Exit Sub
                                    End If

                                    ACC_MAT_CODE = " " & ACC_MAT_CODE & " "
                                    If InStr(1, ACC_MAT_CODE, "CREATE", 1) > 0 Or InStr(1, ACC_MAT_CODE, "DELETE", 1) > 0 Or InStr(1, ACC_MAT_CODE, "DROP", 1) > 0 Or InStr(1, ACC_MAT_CODE, "INSERT", 1) > 1 Or InStr(1, ACC_MAT_CODE, "TRACK", 1) > 1 Or InStr(1, ACC_MAT_CODE, "TRACE", 1) > 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label1.Text = ""
                                        DDL_AccMaterials.Focus()
                                        Exit Sub
                                    End If
                                    ACC_MAT_CODE = TrimX(ACC_MAT_CODE)
                                    'check unwanted characters
                                    c = 0
                                    counter105 = 0
                                    For iloop = 1 To Len(ACC_MAT_CODE)
                                        strcurrentchar = Mid(ACC_MAT_CODE, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter105 = 1
                                            End If
                                        End If
                                    Next
                                    If counter105 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        DDL_AccMaterials.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    ACC_MAT_CODE = ""
                                End If
                            Else
                                ACC_MAT_CODE = ""
                            End If

                            'validation for REMARKS
                            'Dim REMARKS As Object = Nothing
                            If TR_Remarks.Visible = True Then
                                REMARKS = TrimAll(txt_Hold_Remarks.Text)
                                If Not String.IsNullOrEmpty(REMARKS) Then
                                    REMARKS = RemoveQuotes(REMARKS)
                                    If REMARKS.Length > 251 Then 'maximum length
                                        Label6.Text = "Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_Remarks.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    REMARKS = ""
                                End If
                            Else
                                REMARKS = ""
                            End If

                            'validation for Physical Location
                            ' Dim PHYSICAL_LOCATION As Object = Nothing
                            If TR_PHYSICAL_LOCATION.Visible = True Then
                                PHYSICAL_LOCATION = TrimAll(txt_Hold_Location.Text)
                                If Not String.IsNullOrEmpty(PHYSICAL_LOCATION) Then
                                    PHYSICAL_LOCATION = RemoveQuotes(PHYSICAL_LOCATION)
                                    If PHYSICAL_LOCATION.Length > 50 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_Location.Focus()
                                        Exit Sub
                                    End If

                                    PHYSICAL_LOCATION = " " & PHYSICAL_LOCATION & " "
                                    If InStr(1, PHYSICAL_LOCATION, "CREATE", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "DELETE", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "DROP", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "INSERT", 1) > 1 Or InStr(1, PHYSICAL_LOCATION, "TRACK", 1) > 1 Or InStr(1, PHYSICAL_LOCATION, "TRACE", 1) > 1 Then
                                        Label6.Text = "Do not use reserved Words!"
                                        Label15.Text = ""
                                        txt_Hold_Location.Focus()
                                        Exit Sub
                                    End If
                                    PHYSICAL_LOCATION = TrimAll(PHYSICAL_LOCATION)
                                    'check unwanted characters
                                    c = 0
                                    counter106 = 0
                                    For iloop = 1 To Len(PHYSICAL_LOCATION)
                                        strcurrentchar = Mid(PHYSICAL_LOCATION, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter106 = 1
                                            End If
                                        End If
                                    Next
                                    If counter106 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        txt_Hold_Location.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    PHYSICAL_LOCATION = ""
                                End If
                            Else
                                PHYSICAL_LOCATION = ""
                            End If

                            'validation for REFERENCE NO
                            'Dim REFERENCE_NO As Object = Nothing
                            If TR_REFERENCE_NO.Visible = True Then
                                REFERENCE_NO = TrimAll(txt_Hold_ReferenceNo.Text)
                                If Not String.IsNullOrEmpty(REFERENCE_NO) Then
                                    REFERENCE_NO = RemoveQuotes(REFERENCE_NO)
                                    If REFERENCE_NO.Length > 50 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_ReferenceNo.Focus()
                                        Exit Sub
                                    End If

                                    REFERENCE_NO = " " & REFERENCE_NO & " "
                                    If InStr(1, REFERENCE_NO, "CREATE", 1) > 0 Or InStr(1, REFERENCE_NO, "DELETE", 1) > 0 Or InStr(1, REFERENCE_NO, "DROP", 1) > 0 Or InStr(1, REFERENCE_NO, "INSERT", 1) > 1 Or InStr(1, REFERENCE_NO, "TRACK", 1) > 1 Or InStr(1, REFERENCE_NO, "TRACE", 1) > 1 Then
                                        Label6.Text = "Do not use reserved Words!"
                                        Label15.Text = ""
                                        txt_Hold_ReferenceNo.Focus()
                                        Exit Sub
                                    End If
                                    REFERENCE_NO = TrimAll(REFERENCE_NO)
                                    'check unwanted characters
                                    c = 0
                                    counter107 = 0
                                    For iloop = 1 To Len(REFERENCE_NO)
                                        strcurrentchar = Mid(REFERENCE_NO, iloop, 1)
                                        If c = 0 Then
                                            If Not InStr("'""", strcurrentchar) <= 0 Then
                                                c = c + 1
                                                counter107 = 1
                                            End If
                                        End If
                                    Next
                                    If counter107 = 1 Then
                                        Label6.Text = " Input  is not Valid!"
                                        Label15.Text = ""
                                        txt_Hold_ReferenceNo.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    REFERENCE_NO = ""
                                End If
                            Else
                                REFERENCE_NO = ""
                            End If

                            'validation for RECODING_MEDIUM
                            'Dim RECORDING_MEDIUM As Object = Nothing
                            If TR_MEDIUM.Visible = True Then
                                RECORDING_MEDIUM = TrimAll(txt_Hold_RecordingMedium.Text)
                                If Not String.IsNullOrEmpty(RECORDING_MEDIUM) Then
                                    RECORDING_MEDIUM = RemoveQuotes(RECORDING_MEDIUM)
                                    If RECORDING_MEDIUM.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_RecordingMedium.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    RECORDING_MEDIUM = ""
                                End If
                            Else
                                RECORDING_MEDIUM = ""
                            End If

                            'validation for RECODING_MEDIUM
                            ' Dim RECORDING_CATEGORY As Object = Nothing
                            If TR_RECORDING_CATEGORY.Visible = True Then
                                RECORDING_CATEGORY = TrimAll(txt_Hold_RecordingCategory.Text)
                                If Not String.IsNullOrEmpty(RECORDING_CATEGORY) Then
                                    RECORDING_CATEGORY = RemoveQuotes(RECORDING_CATEGORY)
                                    If RECORDING_CATEGORY.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_RecordingCategory.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    RECORDING_CATEGORY = ""
                                End If
                            Else
                                RECORDING_CATEGORY = ""
                            End If

                            'validation for RECORDING_FORM
                            'Dim RECORDING_FORM As Object = Nothing
                            If TR_RECORDING_FORM.Visible = True Then
                                RECORDING_FORM = TrimAll(txt_Hold_RecordingForm.Text)
                                If Not String.IsNullOrEmpty(RECORDING_FORM) Then
                                    RECORDING_FORM = RemoveQuotes(RECORDING_FORM)
                                    If RECORDING_FORM.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_RecordingForm.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    RECORDING_FORM = ""
                                End If
                            Else
                                RECORDING_FORM = ""
                            End If

                            'validation for RECORDING_FORMAT
                            'Dim RECORDING_FORMAT As Object = Nothing
                            If TR_RECORDING_FORMAT.Visible = True Then
                                RECORDING_FORMAT = TrimAll(txt_Hold_RecordingFormat.Text)
                                If Not String.IsNullOrEmpty(RECORDING_FORMAT) Then
                                    RECORDING_FORMAT = RemoveQuotes(RECORDING_FORMAT)
                                    If RECORDING_FORMAT.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_RecordingFormat.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    RECORDING_FORMAT = ""
                                End If
                            Else
                                RECORDING_FORMAT = ""
                            End If

                            'validation for RECORDING_SPEED
                            'Dim RECORDING_SPEED As Object = Nothing
                            If TR_RECORDING_SPEED.Visible = True Then
                                RECORDING_SPEED = TrimAll(txt_Hold_RecordingSpeed.Text)
                                If Not String.IsNullOrEmpty(RECORDING_SPEED) Then
                                    RECORDING_SPEED = RemoveQuotes(RECORDING_SPEED)
                                    If RECORDING_SPEED.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_RecordingSpeed.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    RECORDING_SPEED = ""
                                End If
                            Else
                                RECORDING_SPEED = ""
                            End If

                            'validation for RECORDING_STORAGE_TECH
                            ' Dim RECORDING_STORAGE_TECH As Object = Nothing
                            If TR_RECORDING_STORAGE_TECH.Visible = True Then
                                RECORDING_STORAGE_TECH = TrimAll(txt_Hold_RecordingStorageTech.Text)
                                If Not String.IsNullOrEmpty(RECORDING_STORAGE_TECH) Then
                                    RECORDING_STORAGE_TECH = RemoveQuotes(RECORDING_STORAGE_TECH)
                                    If RECORDING_STORAGE_TECH.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_RecordingStorageTech.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    RECORDING_STORAGE_TECH = ""
                                End If
                            Else
                                RECORDING_STORAGE_TECH = ""
                            End If

                            'validation for RECORDING_PLAY_DURATION
                            'Dim RECORDING_PLAY_DURATION As Object = Nothing
                            If TR_RECORDING_PLAY_DURATION.Visible = True Then
                                RECORDING_PLAY_DURATION = TrimAll(txt_Hold_RecordingDuration.Text)
                                If Not String.IsNullOrEmpty(RECORDING_PLAY_DURATION) Then
                                    RECORDING_PLAY_DURATION = RemoveQuotes(RECORDING_PLAY_DURATION)
                                    If RECORDING_PLAY_DURATION.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_RecordingDuration.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    RECORDING_PLAY_DURATION = ""
                                End If
                            Else
                                RECORDING_PLAY_DURATION = ""
                            End If

                            'validation for TYPE OF VISUALS
                            'Dim VIDEO_TYPEOFVISUALS As Object = Nothing
                            If TR_VIDEO_TYPEOFVISUAL.Visible = True Then
                                VIDEO_TYPEOFVISUALS = TrimAll(txt_Hold_TypeOfVisuals.Text)
                                If Not String.IsNullOrEmpty(VIDEO_TYPEOFVISUALS) Then
                                    VIDEO_TYPEOFVISUALS = RemoveQuotes(VIDEO_TYPEOFVISUALS)
                                    If VIDEO_TYPEOFVISUALS.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_TypeOfVisuals.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    VIDEO_TYPEOFVISUALS = ""
                                End If
                            Else
                                VIDEO_TYPEOFVISUALS = ""
                            End If

                            'validation for CARTOGRAPHIC_SCALE
                            ' Dim CARTOGRAPHIC_SCALE As Object = Nothing
                            If TR_CARTOGRAPHIC_SCALE.Visible = True Then
                                CARTOGRAPHIC_SCALE = TrimAll(txt_Hold_Scale.Text)
                                If Not String.IsNullOrEmpty(CARTOGRAPHIC_SCALE) Then
                                    CARTOGRAPHIC_SCALE = RemoveQuotes(CARTOGRAPHIC_SCALE)
                                    If CARTOGRAPHIC_SCALE.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_Scale.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CARTOGRAPHIC_SCALE = ""
                                End If
                            Else
                                CARTOGRAPHIC_SCALE = ""
                            End If

                            'validation for CARTOGRAPHIC_PROJECTION
                            ' Dim CARTOGRAPHIC_PROJECTION As Object = Nothing
                            If TR_CARTOGRAPHIC_PROJECTION.Visible = True Then
                                CARTOGRAPHIC_PROJECTION = TrimAll(txt_Hold_Projection.Text)
                                If Not String.IsNullOrEmpty(CARTOGRAPHIC_PROJECTION) Then
                                    CARTOGRAPHIC_PROJECTION = RemoveQuotes(CARTOGRAPHIC_PROJECTION)
                                    If CARTOGRAPHIC_PROJECTION.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_Projection.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CARTOGRAPHIC_PROJECTION = ""
                                End If
                            Else
                                CARTOGRAPHIC_PROJECTION = ""
                            End If

                            'validation for CARTOGRAPHIC_COORDINATES
                            ' Dim CARTOGRAPHIC_COORDINATES As Object = Nothing
                            If TR_CARTOGRAPHIC_COORDINATES.Visible = True Then
                                CARTOGRAPHIC_COORDINATES = TrimAll(txt_Hold_Coordinates.Text)
                                If Not String.IsNullOrEmpty(CARTOGRAPHIC_COORDINATES) Then
                                    CARTOGRAPHIC_COORDINATES = RemoveQuotes(CARTOGRAPHIC_COORDINATES)
                                    If CARTOGRAPHIC_COORDINATES.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_Coordinates.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CARTOGRAPHIC_COORDINATES = ""
                                End If
                            Else
                                CARTOGRAPHIC_COORDINATES = ""
                            End If

                            'validation for CARTOGRAPHIC_GEOGRAPHIC_LOCATION
                            ' Dim CARTOGRAPHIC_GEOGRAPHIC_LOCATION As Object = Nothing
                            If TR_CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Visible = True Then
                                CARTOGRAPHIC_COORDINATES = TrimAll(txt_Hold_GeographicLocation.Text)
                                If Not String.IsNullOrEmpty(CARTOGRAPHIC_GEOGRAPHIC_LOCATION) Then
                                    CARTOGRAPHIC_GEOGRAPHIC_LOCATION = RemoveQuotes(CARTOGRAPHIC_GEOGRAPHIC_LOCATION)
                                    If CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Length > 51 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        txt_Hold_GeographicLocation.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CARTOGRAPHIC_GEOGRAPHIC_LOCATION = ""
                                End If
                            Else
                                CARTOGRAPHIC_GEOGRAPHIC_LOCATION = ""
                            End If

                            'validation for CARTOGRAPHIC_MEDIUM
                            'Dim CARTOGRAPHIC_MEDIUM As Object = Nothing
                            If TR_CARTOGRAPHIC_MEDIUM.Visible = True Then
                                CARTOGRAPHIC_MEDIUM = Trim(DDL_GeographicMedium.SelectedValue)
                                If Not String.IsNullOrEmpty(CARTOGRAPHIC_MEDIUM) Then
                                    CARTOGRAPHIC_MEDIUM = RemoveQuotes(CARTOGRAPHIC_MEDIUM)
                                    If CARTOGRAPHIC_MEDIUM.Length > 2 Then 'maximum length
                                        Label6.Text = " Data must be of Proper Length.. "
                                        Label15.Text = ""
                                        DDL_GeographicMedium.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CARTOGRAPHIC_MEDIUM = ""
                                End If
                            Else
                                CARTOGRAPHIC_MEDIUM = ""
                            End If

                            'search CARTOGRAPHIC_DATAGATHERING_DATE
                            'Dim CARTOGRAPHIC_DATAGATHERING_DATE As Object = Nothing
                            If TR_CARTOGRAPHIC_DATAGATHERING_DATE.Visible = True Then
                                If txt_Hold_DataGatheringDate.Text <> "" Then
                                    CARTOGRAPHIC_DATAGATHERING_DATE = TrimX(txt_Hold_DataGatheringDate.Text)
                                    CARTOGRAPHIC_DATAGATHERING_DATE = RemoveQuotes(CARTOGRAPHIC_DATAGATHERING_DATE)
                                    CARTOGRAPHIC_DATAGATHERING_DATE = Convert.ToDateTime(CARTOGRAPHIC_DATAGATHERING_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                                    If Len(CARTOGRAPHIC_DATAGATHERING_DATE) > 12 Then
                                        Label6.Text = " Input is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_DataGatheringDate.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CARTOGRAPHIC_DATAGATHERING_DATE = ""
                                End If
                            Else
                                CARTOGRAPHIC_DATAGATHERING_DATE = ""
                            End If

                            'search CARTOGRAPHIC_CREATION_DATE
                            ' Dim CARTOGRAPHIC_CREATION_DATE As Object = Nothing
                            If TR_CREATION_DATE.Visible = True Then
                                If txt_Hold_CreationDate.Text <> "" Then
                                    CARTOGRAPHIC_CREATION_DATE = TrimX(txt_Hold_CreationDate.Text)
                                    CARTOGRAPHIC_CREATION_DATE = RemoveQuotes(CARTOGRAPHIC_CREATION_DATE)
                                    CARTOGRAPHIC_CREATION_DATE = Convert.ToDateTime(CARTOGRAPHIC_CREATION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                                    If Len(CARTOGRAPHIC_CREATION_DATE) > 12 Then
                                        Label6.Text = " Input is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_CreationDate.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CARTOGRAPHIC_CREATION_DATE = ""
                                End If
                            Else
                                CARTOGRAPHIC_CREATION_DATE = ""
                            End If

                            'search CARTOGRAPHIC_COMPILATION_DATE
                            'Dim CARTOGRAPHIC_COMPILATION_DATE As Object = Nothing
                            If TR_CARTOGRAPHIC_COMPILATION_DATE.Visible = True Then
                                If txt_Hold_CompilationDate.Text <> "" Then
                                    CARTOGRAPHIC_COMPILATION_DATE = TrimX(txt_Hold_CompilationDate.Text)
                                    CARTOGRAPHIC_COMPILATION_DATE = RemoveQuotes(CARTOGRAPHIC_COMPILATION_DATE)
                                    CARTOGRAPHIC_COMPILATION_DATE = Convert.ToDateTime(CARTOGRAPHIC_COMPILATION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                                    If Len(CARTOGRAPHIC_COMPILATION_DATE) > 12 Then
                                        Label6.Text = " Input is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_CompilationDate.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CARTOGRAPHIC_COMPILATION_DATE = ""
                                End If
                            Else
                                CARTOGRAPHIC_COMPILATION_DATE = ""
                            End If

                            ' 'validation for  CARTOGRAPHIC_INSPECTION_DATE
                            'Dim CARTOGRAPHIC_INSPECTION_DATE As Object = Nothing
                            If TR_CARTOGRAPHIC_INSPECTION_DATE.Visible = True Then
                                If txt_Hold_InspectionDate.Text <> "" Then
                                    CARTOGRAPHIC_INSPECTION_DATE = TrimX(txt_Hold_InspectionDate.Text)
                                    CARTOGRAPHIC_INSPECTION_DATE = RemoveQuotes(CARTOGRAPHIC_INSPECTION_DATE)
                                    CARTOGRAPHIC_INSPECTION_DATE = Convert.ToDateTime(CARTOGRAPHIC_INSPECTION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                                    If Len(CARTOGRAPHIC_INSPECTION_DATE) > 12 Then
                                        Label6.Text = " Input is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_InspectionDate.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CARTOGRAPHIC_INSPECTION_DATE = ""
                                End If
                            Else
                                CARTOGRAPHIC_INSPECTION_DATE = ""
                            End If

                            'validation for  VIDEO_COLOR
                            ' Dim VIDEO_COLOR As Object = Nothing
                            If TR_VIDEO_COLOR.Visible = True Then
                                If txt_Hold_Color.Text <> "" Then
                                    VIDEO_COLOR = TrimAll(txt_Hold_Color.Text)
                                    VIDEO_COLOR = RemoveQuotes(VIDEO_COLOR)

                                    If Len(VIDEO_COLOR) > 50 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_Color.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    VIDEO_COLOR = ""
                                End If
                            Else
                                VIDEO_COLOR = ""
                            End If

                            'validation for  PLAYBACK_CHANNELS
                            ' Dim PLAYBACK_CHANNELS As Object = Nothing
                            If TR_PLAYBACK_CHANNELS.Visible = True Then
                                If txt_Hold_PlayBackChannel.Text <> "" Then
                                    PLAYBACK_CHANNELS = TrimAll(txt_Hold_PlayBackChannel.Text)
                                    PLAYBACK_CHANNELS = RemoveQuotes(PLAYBACK_CHANNELS)
                                    If Len(PLAYBACK_CHANNELS) > 50 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_PlayBackChannel.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    PLAYBACK_CHANNELS = ""
                                End If
                            Else
                                PLAYBACK_CHANNELS = ""
                            End If

                            'validation for  TAPE_WIDTH
                            ' Dim TAPE_WIDTH As Object = Nothing
                            If TR_TAPE_WIDTH.Visible = True Then
                                If txt_Hold_PlayBackChannel.Text <> "" Then
                                    TAPE_WIDTH = TrimAll(txt_Hold_PlayBackChannel.Text)
                                    TAPE_WIDTH = RemoveQuotes(TAPE_WIDTH)
                                    If Len(TAPE_WIDTH) > 50 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_PlayBackChannel.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    TAPE_WIDTH = ""
                                End If
                            Else
                                TAPE_WIDTH = ""
                            End If

                            'validation for  TAPE_CONFIGURATION
                            ' Dim TAPE_CONFIGURATION As Object = Nothing
                            If TR_TAPE_CONFIGURATION.Visible = True Then
                                If txt_Hold_TapeConfiguration.Text <> "" Then
                                    TAPE_CONFIGURATION = TrimAll(txt_Hold_TapeConfiguration.Text)
                                    TAPE_CONFIGURATION = RemoveQuotes(TAPE_CONFIGURATION)
                                    If Len(TAPE_CONFIGURATION) > 50 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_TapeConfiguration.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    TAPE_CONFIGURATION = ""
                                End If
                            Else
                                TAPE_CONFIGURATION = ""
                            End If

                            'validation for  KIND_OF_DISK
                            ' Dim KIND_OF_DISK As Object = Nothing
                            If TR_KIND_OF_DISK.Visible = True Then
                                If txt_Hold_KindofDisk.Text <> "" Then
                                    KIND_OF_DISK = TrimAll(txt_Hold_KindofDisk.Text)
                                    KIND_OF_DISK = RemoveQuotes(KIND_OF_DISK)
                                    If Len(KIND_OF_DISK) > 50 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_KindofDisk.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    KIND_OF_DISK = ""
                                End If
                            Else
                                KIND_OF_DISK = ""
                            End If

                            'validation for  KIND_OF_CUTTING
                            'Dim KIND_OF_CUTTING As Object = Nothing
                            If TR_KIND_OF_CUTTING.Visible = True Then
                                If txt_Hold_KindofCutting.Text <> "" Then
                                    KIND_OF_CUTTING = TrimAll(txt_Hold_KindofCutting.Text)
                                    KIND_OF_CUTTING = RemoveQuotes(KIND_OF_CUTTING)
                                    If Len(KIND_OF_DISK) > 50 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_KindofCutting.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    KIND_OF_CUTTING = ""
                                End If
                            Else
                                KIND_OF_CUTTING = ""
                            End If


                            'validation for  ENCODING_STANDARD
                            'Dim ENCODING_STANDARD As Object = Nothing
                            If TR_ENCODING_STANDARD.Visible = True Then
                                If txt_Hold_EncodingStandard.Text <> "" Then
                                    ENCODING_STANDARD = TrimAll(txt_Hold_EncodingStandard.Text)
                                    ENCODING_STANDARD = RemoveQuotes(ENCODING_STANDARD)
                                    If Len(KIND_OF_DISK) > 50 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_EncodingStandard.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    ENCODING_STANDARD = ""
                                End If
                            Else
                                ENCODING_STANDARD = ""
                            End If

                            'validation for  CAPTURE_TECHNIQUE
                            'Dim CAPTURE_TECHNIQUE As Object = Nothing
                            If TR_CAPTURE_TECHNIQUE.Visible = True Then
                                If txt_Hold_CaptureTechnique.Text <> "" Then
                                    CAPTURE_TECHNIQUE = TrimAll(txt_Hold_CaptureTechnique.Text)
                                    CAPTURE_TECHNIQUE = RemoveQuotes(CAPTURE_TECHNIQUE)
                                    If Len(CAPTURE_TECHNIQUE) > 50 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_CaptureTechnique.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CAPTURE_TECHNIQUE = ""
                                End If
                            Else
                                CAPTURE_TECHNIQUE = ""
                            End If

                            'validation for  PHOTO_NO
                            ' Dim PHOTO_NO As Object = Nothing
                            If TR_PHOTO_NO.Visible = True Then
                                If txt_Hold_PhotoNo.Text <> "" Then
                                    PHOTO_NO = TrimAll(txt_Hold_PhotoNo.Text)
                                    PHOTO_NO = RemoveQuotes(PHOTO_NO)
                                    If Len(PHOTO_NO) > 50 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_PhotoNo.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    PHOTO_NO = ""
                                End If
                            Else
                                PHOTO_NO = ""
                            End If


                            'validation for  PHOTO_ALBUM_NO
                            ' Dim PHOTO_ALBUM_NO As Object = Nothing
                            If TR_PHOTO_ALBUM_NO.Visible = True Then
                                If txt_Hold_PhotoAlbumNo.Text <> "" Then
                                    PHOTO_ALBUM_NO = TrimAll(txt_Hold_PhotoAlbumNo.Text)
                                    PHOTO_ALBUM_NO = RemoveQuotes(PHOTO_ALBUM_NO)
                                    If Len(PHOTO_ALBUM_NO) > 150 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_PhotoAlbumNo.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    PHOTO_ALBUM_NO = ""
                                End If
                            Else
                                PHOTO_ALBUM_NO = ""
                            End If

                            'validation for  PHOTO_OCASION
                            ' Dim PHOTO_OCASION As Object = Nothing
                            If TR_PHOTO_OCASION.Visible = True Then
                                If txt_Hold_Ocasion.Text <> "" Then
                                    PHOTO_OCASION = TrimAll(txt_Hold_Ocasion.Text)
                                    PHOTO_OCASION = RemoveQuotes(PHOTO_OCASION)
                                    If Len(PHOTO_OCASION) > 150 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_Ocasion.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    PHOTO_OCASION = ""
                                End If
                            Else
                                PHOTO_OCASION = ""
                            End If

                            'validation for  IMAGE_VIEW_TYPE
                            ' Dim IMAGE_VIEW_TYPE As Object = Nothing
                            If TR_IMAGE_VIEW_TYPE.Visible = True Then
                                If txt_Hold_ImageViewType.Text <> "" Then
                                    IMAGE_VIEW_TYPE = TrimAll(txt_Hold_ImageViewType.Text)
                                    IMAGE_VIEW_TYPE = RemoveQuotes(IMAGE_VIEW_TYPE)
                                    If Len(IMAGE_VIEW_TYPE) > 50 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_ImageViewType.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    IMAGE_VIEW_TYPE = ""
                                End If
                            Else
                                IMAGE_VIEW_TYPE = ""
                            End If

                            'search VIEW_DATE
                            'Dim VIEW_DATE As Object = Nothing
                            If TR_VIEW_DATE.Visible = True Then
                                If txt_Hold_ViewDate.Text <> "" Then
                                    VIEW_DATE = TrimX(txt_Hold_ViewDate.Text)
                                    VIEW_DATE = RemoveQuotes(VIEW_DATE)
                                    VIEW_DATE = Convert.ToDateTime(VIEW_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                                    If Len(VIEW_DATE) > 12 Then
                                        Label6.Text = " Input is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_ViewDate.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    VIEW_DATE = ""
                                End If
                            Else
                                VIEW_DATE = ""
                            End If

                            'validation for  THEME
                            'Dim THEME As Object = Nothing
                            If TR_THEME.Visible = True Then
                                If txt_Hold_Theme.Text <> "" Then
                                    THEME = TrimAll(txt_Hold_Theme.Text)
                                    THEME = RemoveQuotes(THEME)
                                    If Len(THEME) > 150 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_Theme.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    THEME = ""
                                End If
                            Else
                                THEME = ""
                            End If

                            'validation for  STYLE
                            'Dim STYLE As Object = Nothing
                            If TR_STYLE.Visible = True Then
                                If txt_Hold_Style.Text <> "" Then
                                    STYLE = TrimAll(txt_Hold_Style.Text)
                                    STYLE = RemoveQuotes(STYLE)
                                    If Len(STYLE) > 150 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_Style.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    STYLE = ""
                                End If
                            Else
                                STYLE = ""
                            End If

                            'validation for  CULTURE
                            'Dim CULTURE As Object = Nothing
                            If TR_CULTURE.Visible = True Then
                                If txt_Hold_Culture.Text <> "" Then
                                    CULTURE = TrimAll(txt_Hold_Culture.Text)
                                    CULTURE = RemoveQuotes(CULTURE)
                                    If Len(CULTURE) > 150 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_Culture.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CULTURE = ""
                                End If
                            Else
                                CULTURE = ""
                            End If

                            'validation for  CURRENT_SITE
                            'Dim CURRENT_SITE As Object = Nothing
                            If TR_CULTURE.Visible = True Then
                                If txt_Hold_CurrentSite.Text <> "" Then
                                    CURRENT_SITE = TrimAll(txt_Hold_CurrentSite.Text)
                                    CURRENT_SITE = RemoveQuotes(CURRENT_SITE)
                                    If Len(CURRENT_SITE) > 150 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_CurrentSite.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CURRENT_SITE = ""
                                End If
                            Else
                                CURRENT_SITE = ""
                            End If

                            'validation for  CREATION_SITE
                            ' Dim CREATION_SITE As Object = Nothing
                            If TR_CREATION_SITE.Visible = True Then
                                If txt_Hold_CreationSite.Text <> "" Then
                                    CREATION_SITE = TrimAll(txt_Hold_CreationSite.Text)
                                    CREATION_SITE = RemoveQuotes(CREATION_SITE)
                                    If Len(CREATION_SITE) > 150 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_CreationSite.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    CREATION_SITE = ""
                                End If
                            Else
                                CREATION_SITE = ""
                            End If

                            'validation for  YARNCOUNT
                            'Dim YARNCOUNT As Object = Nothing
                            If TR_YARNCOUNT.Visible = True Then
                                If txt_Hold_YarnCount.Text <> "" Then
                                    YARNCOUNT = TrimAll(txt_Hold_YarnCount.Text)
                                    YARNCOUNT = RemoveQuotes(YARNCOUNT)
                                    If Len(YARNCOUNT) > 150 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_YarnCount.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    YARNCOUNT = ""
                                End If
                            Else
                                YARNCOUNT = ""
                            End If

                            'validation for  MATERIAL_TYPE
                            'Dim MATERIAL_TYPE As Object = Nothing
                            If TR_MATERIAL_TYPE.Visible = True Then
                                If txt_Hold_MaterialsType.Text <> "" Then
                                    MATERIAL_TYPE = TrimAll(txt_Hold_MaterialsType.Text)
                                    MATERIAL_TYPE = RemoveQuotes(MATERIAL_TYPE)
                                    If Len(MATERIAL_TYPE) > 150 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_MaterialsType.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    MATERIAL_TYPE = ""
                                End If
                            Else
                                MATERIAL_TYPE = ""
                            End If

                            'validation for  TECHNIQUE
                            'Dim TECHNIQUE As Object = Nothing
                            If TR_TECHNIQUE.Visible = True Then
                                If txt_Hold_Technique.Text <> "" Then
                                    TECHNIQUE = TrimAll(txt_Hold_Technique.Text)
                                    TECHNIQUE = RemoveQuotes(TECHNIQUE)
                                    If Len(TECHNIQUE) > 150 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_Technique.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    TECHNIQUE = ""
                                End If
                            Else
                                TECHNIQUE = ""
                            End If

                            'validation for  TECH_DETAILS
                            'Dim TECH_DETAILS As Object = Nothing
                            If TR_TECH_DETAILS.Visible = True Then
                                If txt_Hold_TechDetails.Text <> "" Then
                                    TECH_DETAILS = TrimAll(txt_Hold_TechDetails.Text)
                                    TECH_DETAILS = RemoveQuotes(TECH_DETAILS)
                                    If Len(TECH_DETAILS) > 250 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_TechDetails.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    TECH_DETAILS = ""
                                End If
                            Else
                                TECH_DETAILS = ""
                            End If

                            'validation for  INSCRIPTIONS
                            'Dim INSCRIPTIONS As Object = Nothing
                            If TR_INSCRIPTIONS.Visible = True Then
                                If txt_Hold_Inscription.Text <> "" Then
                                    INSCRIPTIONS = TrimAll(txt_Hold_Inscription.Text)
                                    INSCRIPTIONS = RemoveQuotes(INSCRIPTIONS)
                                    If Len(INSCRIPTIONS) > 150 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_Inscription.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    INSCRIPTIONS = ""
                                End If
                            Else
                                INSCRIPTIONS = ""
                            End If

                            'validation for  DESCRIPTION
                            ' Dim DESCRIPTION As Object = Nothing
                            If TR_DESCRIPTION.Visible = True Then
                                If txt_Hold_Description.Text <> "" Then
                                    DESCRIPTION = TrimAll(txt_Hold_Description.Text)
                                    DESCRIPTION = RemoveQuotes(DESCRIPTION)
                                    If Len(DESCRIPTION) > 250 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_Description.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    DESCRIPTION = ""
                                End If
                            Else
                                DESCRIPTION = ""
                            End If

                            'validation for  GLOBE_TYPE
                            'Dim GLOBE_TYPE As Object = Nothing
                            If TR_GLOBE_TYPE.Visible = True Then
                                If txt_Hold_GlobeType.Text <> "" Then
                                    GLOBE_TYPE = TrimAll(txt_Hold_GlobeType.Text)
                                    GLOBE_TYPE = RemoveQuotes(GLOBE_TYPE)
                                    If Len(GLOBE_TYPE) > 50 Then
                                        Label6.Text = " Input Length is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_GlobeType.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    GLOBE_TYPE = ""
                                End If
                            Else
                                GLOBE_TYPE = ""
                            End If

                            'search ALTER_DATE
                            ' Dim ALTER_DATE As Object = Nothing
                            If TR_ALTER_DATE.Visible = True Then
                                If txt_Hold_AlterDate.Text <> "" Then
                                    ALTER_DATE = TrimX(txt_Hold_AlterDate.Text)
                                    ALTER_DATE = RemoveQuotes(ALTER_DATE)
                                    ALTER_DATE = Convert.ToDateTime(ALTER_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                                    If Len(ALTER_DATE) > 12 Then
                                        Label6.Text = " Input is not Valid..."
                                        Label15.Text = ""
                                        Me.txt_Hold_AlterDate.Focus()
                                        Exit Sub
                                    End If
                                Else
                                    ALTER_DATE = ""
                                End If
                            Else
                                ALTER_DATE = ""
                            End If




                        End If
                    End If

                    '****************************************************************************************************
                    'GET ACQ DATA
                    Dim VEND_ID As Integer = Nothing
                    Dim ACQMODE_CODE As Object = Nothing
                    Dim CUR_CODE As Object = Nothing
                    Dim ITEM_PRICE As Object = Nothing
                    Dim CONVERSION_RATE As Object = Nothing
                    Dim ITEM_RUPEES As Object = Nothing
                    Dim OTHER_CHARGES As Object = Nothing

                    If Table4.Visible = True Then
                        Dim counter157, counter158, counter159, counter160, counter161, counter162, counter163 As Integer

                        'ACQ Data
                        'validation for Currency code
                        'Dim ACQMODE_CODE As Object = Nothing
                        ACQMODE_CODE = DDL_AcqModes.SelectedValue
                        If Not String.IsNullOrEmpty(ACQMODE_CODE) Then
                            ACQMODE_CODE = RemoveQuotes(ACQMODE_CODE)
                            If ACQMODE_CODE.Length > 2 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_AcqModes.Focus()
                                Exit Sub
                            End If
                            ACQMODE_CODE = " " & ACQMODE_CODE & " "
                            If InStr(1, ACQMODE_CODE, "CREATE", 1) > 0 Or InStr(1, ACQMODE_CODE, "DELETE", 1) > 0 Or InStr(1, ACQMODE_CODE, "DROP", 1) > 0 Or InStr(1, ACQMODE_CODE, "INSERT", 1) > 1 Or InStr(1, ACQMODE_CODE, "TRACK", 1) > 1 Or InStr(1, ACQMODE_CODE, "TRACE", 1) > 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_AcqModes.Focus()
                                Exit Sub
                            End If
                            ACQMODE_CODE = TrimX(ACQMODE_CODE)
                            'check unwanted characters
                            c = 0
                            counter157 = 0
                            For iloop = 1 To Len(ACQMODE_CODE)
                                strcurrentchar = Mid(ACQMODE_CODE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter157 = 1
                                    End If
                                End If
                            Next
                            If counter157 = 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_AcqModes.Focus()
                                Exit Sub
                            End If
                        Else
                            ACQMODE_CODE = "P"
                        End If

                        'validation for Currency code
                        'Dim CUR_CODE As Object = Nothing
                        CUR_CODE = DDL_Currencies.SelectedValue
                        If Not String.IsNullOrEmpty(CUR_CODE) Then
                            CUR_CODE = RemoveQuotes(CUR_CODE)
                            If CUR_CODE.Length > 4 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_Currencies.Focus()
                                Exit Sub
                            End If
                            CUR_CODE = " " & CUR_CODE & " "
                            If InStr(1, CUR_CODE, "CREATE", 1) > 0 Or InStr(1, CUR_CODE, "DELETE", 1) > 0 Or InStr(1, CUR_CODE, "DROP", 1) > 0 Or InStr(1, CUR_CODE, "INSERT", 1) > 1 Or InStr(1, CUR_CODE, "TRACK", 1) > 1 Or InStr(1, CUR_CODE, "TRACE", 1) > 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_Currencies.Focus()
                                Exit Sub
                            End If
                            CUR_CODE = TrimX(CUR_CODE)
                            'check unwanted characters
                            c = 0
                            counter158 = 0
                            For iloop = 1 To Len(CUR_CODE)
                                strcurrentchar = Mid(CUR_CODE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter158 = 1
                                    End If
                                End If
                            Next
                            If counter158 = 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                DDL_Currencies.Focus()
                                Exit Sub
                            End If
                        Else
                            CUR_CODE = "INR"
                        End If

                        'validation for Currency code
                        'Dim ITEM_PRICE As Object = Nothing
                        ITEM_PRICE = TrimX(txt_Acq_ItemPrice.Text)
                        If Not String.IsNullOrEmpty(ITEM_PRICE) Then
                            ITEM_PRICE = RemoveQuotes(ITEM_PRICE)
                            If ITEM_PRICE.Length > 10 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                txt_Acq_ItemPrice.Focus()
                                Exit Sub
                            End If
                            ITEM_PRICE = " " & ITEM_PRICE & " "
                            If InStr(1, ITEM_PRICE, "CREATE", 1) > 0 Or InStr(1, ITEM_PRICE, "DELETE", 1) > 0 Or InStr(1, ITEM_PRICE, "DROP", 1) > 0 Or InStr(1, ITEM_PRICE, "INSERT", 1) > 1 Or InStr(1, ITEM_PRICE, "TRACK", 1) > 1 Or InStr(1, ITEM_PRICE, "TRACE", 1) > 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                txt_Acq_ItemPrice.Focus()
                                Exit Sub
                            End If
                            ITEM_PRICE = TrimX(ITEM_PRICE)
                            'check unwanted characters
                            c = 0
                            counter159 = 0
                            For iloop = 1 To Len(ITEM_PRICE)
                                strcurrentchar = Mid(ITEM_PRICE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter159 = 1
                                    End If
                                End If
                            Next
                            If counter159 = 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                txt_Acq_ItemPrice.Focus()
                                Exit Sub
                            End If
                        Else
                            ITEM_PRICE = Nothing
                        End If

                        'Server Validation for CONVERSION_RATE
                        'Dim CONVERSION_RATE As Object = Nothing
                        If txt_Acq_ConversionRate.Text <> "" Then
                            CONVERSION_RATE = TrimX(txt_Acq_ConversionRate.Text)
                            CONVERSION_RATE = RemoveQuotes(CONVERSION_RATE)
                            If CONVERSION_RATE.ToString.Length > 15 Then
                                Label6.Text = "Plz Enter Data with Proper Length!"
                                Label15.Text = ""
                                txt_Acq_ConversionRate.Focus()
                                Exit Sub
                            End If
                            CONVERSION_RATE = " " & CONVERSION_RATE & " "
                            If InStr(1, CONVERSION_RATE, "CREATE", 1) > 0 Or InStr(1, CONVERSION_RATE, "DELETE", 1) > 0 Or InStr(1, CONVERSION_RATE, "DROP", 1) > 0 Or InStr(1, CONVERSION_RATE, "INSERT", 1) > 1 Or InStr(1, CONVERSION_RATE, "TRACK", 1) > 1 Or InStr(1, CONVERSION_RATE, "TRACE", 1) > 1 Then
                                Label6.Text = "Do Not Use Reserve Words!"
                                Label15.Text = ""
                                txt_Acq_ConversionRate.Focus()
                                Exit Sub
                            End If
                            CONVERSION_RATE = TrimX(CONVERSION_RATE)
                            c = 0
                            counter160 = 0
                            For iloop = 1 To Len(CONVERSION_RATE.ToString)
                                strcurrentchar = Mid(CONVERSION_RATE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter160 = 1
                                    End If
                                End If
                            Next
                            If counter160 = 1 Then
                                Label6.Text = "Do Not Use Un-Wanted Characters!"
                                Label15.Text = ""
                                txt_Acq_ConversionRate.Focus()
                                Exit Sub
                            End If
                        Else
                            CONVERSION_RATE = 0
                        End If

                        'Server Validation for ITEM_RUPEES
                        'Dim ITEM_RUPEES As Object = Nothing
                        If txt_Acq_ItemRupees.Text <> "" Then
                            ITEM_RUPEES = TrimX(txt_Acq_ItemRupees.Text)
                            ITEM_RUPEES = RemoveQuotes(ITEM_RUPEES)
                            If ITEM_RUPEES.ToString.Length > 15 Then
                                Label6.Text = "Plz Enter Data with Proper Length!"
                                Label15.Text = ""
                                txt_Acq_ItemRupees.Focus()
                                Exit Sub
                            End If
                            ITEM_RUPEES = " " & ITEM_RUPEES & " "
                            If InStr(1, ITEM_RUPEES, "CREATE", 1) > 0 Or InStr(1, ITEM_RUPEES, "DELETE", 1) > 0 Or InStr(1, ITEM_RUPEES, "DROP", 1) > 0 Or InStr(1, ITEM_RUPEES, "INSERT", 1) > 1 Or InStr(1, ITEM_RUPEES, "TRACK", 1) > 1 Or InStr(1, ITEM_RUPEES, "TRACE", 1) > 1 Then
                                Label6.Text = "Do Not Use Reserve Words!"
                                Label15.Text = ""
                                txt_Acq_ItemRupees.Focus()
                                Exit Sub
                            End If
                            ITEM_RUPEES = TrimX(ITEM_RUPEES)
                            c = 0
                            counter161 = 0
                            For iloop = 1 To Len(ITEM_RUPEES)
                                strcurrentchar = Mid(ITEM_RUPEES, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter161 = 1
                                    End If
                                End If
                            Next
                            If counter161 = 1 Then
                                Label6.Text = "Do Not Use Un-Wanted Characters!"
                                Label15.Text = ""
                                txt_Acq_ItemRupees.Focus()
                                Exit Sub
                            End If
                        Else
                            ITEM_RUPEES = 0
                        End If

                        If CUR_CODE = "INR" Then
                            ITEM_RUPEES = ITEM_PRICE
                        End If

                        'Server Validation for OTHER_CHARGES
                        'Dim OTHER_CHARGES As Object = Nothing
                        If txt_Acq_OtherCharges.Text <> "" Then
                            OTHER_CHARGES = TrimX(txt_Acq_OtherCharges.Text)
                            OTHER_CHARGES = RemoveQuotes(OTHER_CHARGES)
                            If OTHER_CHARGES.ToString.Length > 15 Then
                                Label6.Text = "Plz Enter Data with Proper Length!"
                                Label15.Text = ""
                                txt_Acq_OtherCharges.Focus()
                                Exit Sub
                            End If
                            OTHER_CHARGES = " " & OTHER_CHARGES & " "
                            If InStr(1, OTHER_CHARGES, "CREATE", 1) > 0 Or InStr(1, OTHER_CHARGES, "DELETE", 1) > 0 Or InStr(1, OTHER_CHARGES, "DROP", 1) > 0 Or InStr(1, OTHER_CHARGES, "INSERT", 1) > 1 Or InStr(1, OTHER_CHARGES, "TRACK", 1) > 1 Or InStr(1, OTHER_CHARGES, "TRACE", 1) > 1 Then
                                Label6.Text = "Do Not Use Reserve Words!"
                                Label15.Text = ""
                                txt_Acq_OtherCharges.Focus()
                                Exit Sub
                            End If
                            OTHER_CHARGES = TrimX(OTHER_CHARGES)
                            c = 0
                            counter162 = 0
                            For iloop = 1 To Len(OTHER_CHARGES.ToString)
                                strcurrentchar = Mid(OTHER_CHARGES, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter162 = 1
                                    End If
                                End If
                            Next
                            If counter162 = 1 Then
                                Label6.Text = "Do Not Use Un-Wanted Characters!"
                                Label15.Text = ""
                                txt_Acq_OtherCharges.Focus()
                                Exit Sub
                            End If
                        Else
                            OTHER_CHARGES = 0
                        End If

                        'Server Validation for VENDOR
                        ' Dim VEND_ID As Integer = Nothing
                        If DDL_Vendors.Text <> "" Then
                            VEND_ID = DDL_Vendors.SelectedValue
                            VEND_ID = RemoveQuotes(VEND_ID)

                            If IsNumeric(VEND_ID) = False Then
                                Label6.Text = "Plz Select Vendor from Drop-Down!"
                                Label15.Text = ""
                                DDL_Vendors.Focus()
                                Exit Sub
                            End If
                            If VEND_ID.ToString.Length > 5 Then
                                Label6.Text = "Plz Enter Data with Proper Length!"
                                Label15.Text = ""
                                DDL_Vendors.Focus()
                                Exit Sub
                            End If
                            VEND_ID = " " & VEND_ID & " "
                            If InStr(1, VEND_ID, "CREATE", 1) > 0 Or InStr(1, VEND_ID, "DELETE", 1) > 0 Or InStr(1, VEND_ID, "DROP", 1) > 0 Or InStr(1, VEND_ID, "INSERT", 1) > 1 Or InStr(1, VEND_ID, "TRACK", 1) > 1 Or InStr(1, VEND_ID, "TRACE", 1) > 1 Then
                                Label6.Text = "Do Not Use Reserve Words!"
                                Label15.Text = ""
                                DDL_Vendors.Focus()
                                Exit Sub
                            End If
                            VEND_ID = TrimX(VEND_ID)

                            c = 0
                            counter163 = 0
                            For iloop = 1 To Len(VEND_ID.ToString)
                                strcurrentchar = Mid(VEND_ID, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'~!@#$^&*=+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter163 = 1
                                    End If
                                End If
                            Next
                            If counter163 = 1 Then
                                Label6.Text = "Do Not Use Un-Wanted Characters!"
                                Label15.Text = ""
                                DDL_Vendors.Focus()
                                Exit Sub
                            End If
                        Else
                            VEND_ID = 0
                        End If

                        ''validation for VOL_NO
                        'Dim VOL_NO As Object = Nothing
                        'If TR_VOL_NO.Visible = True Then
                        '    VOL_NO = Trim(txt_Hold_VolNo.Text)
                        '    If Not String.IsNullOrEmpty(VOL_NO) Then
                        '        VOL_NO = RemoveQuotes(VOL_NO)
                        '        If VOL_NO.Length > 30 Then 'maximum length
                        '            Label6.Text = " Data must be of Proper Length.. "
                        '            Label15.Text = ""
                        '            txt_Hold_VolNo.Focus()
                        '            Exit Sub
                        '        End If

                        '        VOL_NO = " " & VOL_NO & " "
                        '        If InStr(1, VOL_NO, "CREATE", 1) > 0 Or InStr(1, VOL_NO, "DELETE", 1) > 0 Or InStr(1, VOL_NO, "DROP", 1) > 0 Or InStr(1, VOL_NO, "INSERT", 1) > 1 Or InStr(1, VOL_NO, "TRACK", 1) > 1 Or InStr(1, VOL_NO, "TRACE", 1) > 1 Then
                        '            txt_Hold_VolNo.Focus()
                        '            Exit Sub
                        '        End If
                        '        VOL_NO = TrimAll(VOL_NO)
                        '        'check unwanted characters
                        '        c = 0
                        '        counter91 = 0
                        '        For iloop = 1 To Len(VOL_NO)
                        '            strcurrentchar = Mid(VOL_NO, iloop, 1)
                        '            If c = 0 Then
                        '                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                        '                    c = c + 1
                        '                    counter91 = 1
                        '                End If
                        '            End If
                        '        Next
                        '        If counter91 = 1 Then
                        '            Label6.Text = " Input  is not Valid!"
                        '            Label15.Text = ""
                        '            txt_Hold_VolNo.Focus()
                        '            Exit Sub
                        '        End If
                        '    Else
                        '        VOL_NO = ""
                        '    End If
                        'Else
                        '    VOL_NO = ""
                        'End If

                    End If

                    '*****************************************************************************************************

                    'UPDATE THE CAT RECORD  
                    'If Label7.Text <> "" Then
                    SQL = "SELECT * FROM CATS WHERE (CAT_NO='" & Trim(Label7.Text) & "')"
                    If SqlConn.State = 0 Then
                        SqlConn.Open()
                    End If

                    ' thisTransaction = SqlConn.BeginTransaction()
                    ' da.SelectCommand.Transaction = thisTransaction
                    da = New SqlDataAdapter(SQL, SqlConn)
                    cb = New SqlCommandBuilder(da)
                    da.Fill(ds, "CATS")


                    If ds.Tables("CATS").Rows.Count <> 0 Then
                        With ds.Tables("CATS")
                            If Not String.IsNullOrEmpty(myLangCode) Then
                                .Rows(0)("LANG_CODE") = myLangCode.Trim
                            Else
                                .Rows(0)("LANG_CODE") = "ENG"
                            End If

                            If Not String.IsNullOrEmpty(myBibLevel) Then
                                .Rows(0)("BIB_CODE") = myBibLevel.Trim
                            Else
                                .Rows(0)("BIB_CODE") = "M"
                            End If
                            If Not String.IsNullOrEmpty(myMatType) Then
                                .Rows(0)("MAT_CODE") = myMatType.Trim
                            Else
                                .Rows(0)("MAT_CODE") = "B"
                            End If
                            If Not String.IsNullOrEmpty(myDocType) Then
                                .Rows(0)("DOC_TYPE_CODE") = myDocType.Trim
                            Else
                                .Rows(0)("DOC_TYPE_CODE") = "BK"
                            End If

                            If TR_ISBN.Visible = True Then
                                If Not String.IsNullOrEmpty(myISBN) Then
                                    .Rows(0)("STANDARD_NO") = myISBN.Trim
                                Else
                                    .Rows(0)("STANDARD_NO") = System.DBNull.Value
                                End If
                            End If

                            If Not String.IsNullOrEmpty(myTitle) Then
                                .Rows(0)("TITLE") = myTitle.Trim
                            Else
                                .Rows(0)("TITLE") = "No Title"
                            End If

                            If TR_SUBTITLE.Visible = True Then
                                If Not String.IsNullOrEmpty(mySubTitle) Then
                                    .Rows(0)("SUB_TITLE") = mySubTitle.Trim
                                Else
                                    .Rows(0)("SUB_TITLE") = System.DBNull.Value
                                End If
                            End If

                            If TR_VARTITLE.Visible = True Then
                                If Not String.IsNullOrEmpty(myVarTitle) Then
                                    .Rows(0)("VAR_TITLE") = myVarTitle.Trim
                                Else
                                    .Rows(0)("VAR_TITLE") = System.DBNull.Value
                                End If
                            End If

                            If TR_Author.Visible = True Then
                                If Not String.IsNullOrEmpty(myAuthor1) Then
                                    .Rows(0)("AUTHOR1") = myAuthor1.Trim
                                Else
                                    .Rows(0)("AUTHOR1") = System.DBNull.Value
                                End If
                            End If

                            If TR_Author.Visible = True Then
                                If Not String.IsNullOrEmpty(myAuthor2) Then
                                    .Rows(0)("AUTHOR2") = myAuthor2.Trim
                                Else
                                    .Rows(0)("AUTHOR2") = System.DBNull.Value
                                End If
                            End If

                            If TR_Author.Visible = True Then
                                If Not String.IsNullOrEmpty(myAuthor3) Then
                                    .Rows(0)("AUTHOR3") = myAuthor3.Trim
                                Else
                                    .Rows(0)("AUTHOR3") = System.DBNull.Value
                                End If
                            End If

                            If TR_CorpAuthor.Visible = True Then
                                If Not String.IsNullOrEmpty(myCorpAuthor) Then
                                    .Rows(0)("CORPORATE_AUTHOR") = myCorpAuthor.Trim
                                Else
                                    .Rows(0)("CORPORATE_AUTHOR") = System.DBNull.Value
                                End If
                            End If

                            If TR_Editor.Visible = True Then
                                If Not String.IsNullOrEmpty(myEditor) Then
                                    .Rows(0)("EDITOR") = myEditor.Trim
                                Else
                                    .Rows(0)("EDITOR") = System.DBNull.Value
                                End If
                            End If

                            If TR_Translator.Visible = True Then
                                If Not String.IsNullOrEmpty(myTr) Then
                                    .Rows(0)("TRANSLATOR") = myTr.Trim
                                Else
                                    .Rows(0)("TRANSLATOR") = System.DBNull.Value
                                End If
                            End If

                            If TR_ILLUSTRATION.Visible = True Then
                                If Not String.IsNullOrEmpty(myIllus) Then
                                    .Rows(0)("ILLUSTRATOR") = myIllus.Trim
                                Else
                                    .Rows(0)("ILLUSTRATOR") = System.DBNull.Value
                                End If
                            End If

                            If TR_Compiler.Visible = True Then
                                If Not String.IsNullOrEmpty(myCompiler) Then
                                    .Rows(0)("COMPILER") = myCompiler.Trim
                                Else
                                    .Rows(0)("COMPILER") = System.DBNull.Value
                                End If
                            End If

                            If TR_Edition.Visible = True Then
                                If Not String.IsNullOrEmpty(myEdition) Then
                                    .Rows(0)("EDITION") = myEdition.Trim
                                Else
                                    .Rows(0)("EDITION") = System.DBNull.Value
                                End If
                            End If

                            If TR_Place.Visible = True Then
                                If Not String.IsNullOrEmpty(myPubPlace) Then
                                    .Rows(0)("PLACE_OF_PUB") = myPubPlace.Trim
                                Else
                                    .Rows(0)("PLACE_OF_PUB") = System.DBNull.Value
                                End If
                            End If

                            If TR_Publisher.Visible = True Then
                                If Not String.IsNullOrEmpty(myPubID) Or myPubID <> 0 Then
                                    .Rows(0)("PUB_ID") = myPubID
                                Else
                                    .Rows(0)("PUB_ID") = System.DBNull.Value
                                End If
                            End If

                            If TR_Year.Visible = True Then
                                If Not String.IsNullOrEmpty(myPubYear) Then
                                    .Rows(0)("YEAR_OF_PUB") = myPubYear
                                Else
                                    .Rows(0)("YEAR_OF_PUB") = Now.Date.Year
                                End If
                            End If

                            If TR_Series.Visible = True Then
                                If Not String.IsNullOrEmpty(mySeries) Then
                                    .Rows(0)("SERIES_TITLE") = mySeries.Trim
                                Else
                                    .Rows(0)("SERIES_TITLE") = System.DBNull.Value
                                End If
                            End If

                            If TR_SeriesEditor.Visible = True Then
                                If Not String.IsNullOrEmpty(mySeriesEditor) Then
                                    .Rows(0)("SERIES_EDITOR") = mySeriesEditor.Trim
                                Else
                                    .Rows(0)("SERIES_EDITOR") = System.DBNull.Value
                                End If
                            End If

                            If TR_Note.Visible = True Then
                                If Not String.IsNullOrEmpty(myNote) Then
                                    .Rows(0)("NOTE") = myNote.Trim
                                Else
                                    .Rows(0)("NOTE") = System.DBNull.Value
                                End If
                            End If

                            If TR_Remarks.Visible = True Then
                                If Not String.IsNullOrEmpty(myRemarks) Then
                                    .Rows(0)("REMARKS") = myRemarks.Trim
                                Else
                                    .Rows(0)("REMARKS") = System.DBNull.Value
                                End If
                            End If

                            If TR_Subject.Visible = True Then
                                If mySubId = 0 Then
                                    .Rows(0)("SUB_ID") = System.DBNull.Value
                                Else
                                    If Not String.IsNullOrEmpty(mySubId) Then 'Or mySubId <> 0 Then
                                        .Rows(0)("SUB_ID") = mySubId
                                    Else
                                        .Rows(0)("SUB_ID") = System.DBNull.Value
                                    End If
                                End If
                            End If

                            If TR_Keyword.Visible = True Then
                                If Not String.IsNullOrEmpty(myKeywords) Then
                                    .Rows(0)("KEYWORDS") = UCase(myKeywords.Trim)
                                Else
                                    .Rows(0)("KEYWORDS") = System.DBNull.Value
                                End If
                            End If

                            If TR_Absract.Visible = True Then
                                If Not String.IsNullOrEmpty(myAbstract) Then
                                    .Rows(0)("ABSTRACT") = myAbstract.Trim
                                Else
                                    .Rows(0)("ABSTRACT") = System.DBNull.Value
                                End If
                            End If

                            If TR_LANG.Visible = True Then
                                If Not String.IsNullOrEmpty(myYesNo) Then
                                    .Rows(0)("MULTI_VOL") = myYesNo.Trim
                                Else
                                    .Rows(0)("MULTI_VOL") = "N"
                                End If
                            End If

                            If TR_LANG.Visible = True Then
                                If TotalVol <> 0 Then
                                    .Rows(0)("TOTAL_VOL") = TotalVol
                                Else
                                    .Rows(0)("TOTAL_VOL") = System.DBNull.Value
                                End If
                            End If

                            If TR_SPNo.Visible = True Then
                                If Not String.IsNullOrEmpty(mySPNo) Then
                                    .Rows(0)("SP_NO") = mySPNo.Trim
                                Else
                                    .Rows(0)("SP_NO") = System.DBNull.Value
                                End If
                            End If

                            If TR_SPRevision.Visible = True Then
                                If Not String.IsNullOrEmpty(mySPRev) Then
                                    .Rows(0)("SP_VERSION") = mySPRev.Trim
                                Else
                                    .Rows(0)("SP_VERSION") = System.DBNull.Value
                                End If
                            End If

                            If TR_ReportNo.Visible = True Then
                                If Not String.IsNullOrEmpty(myReportNo) Then
                                    .Rows(0)("REPORT_NO") = myReportNo.Trim
                                Else
                                    .Rows(0)("REPORT_NO") = System.DBNull.Value
                                End If
                            End If

                            If TR_ManualNo.Visible = True Then
                                If Not String.IsNullOrEmpty(myManualNo) Then
                                    .Rows(0)("MANUAL_NO") = myManualNo.Trim
                                Else
                                    .Rows(0)("MANUAL_NO") = System.DBNull.Value
                                End If
                            End If

                            If TR_ManualRev.Visible = True Then
                                If Not String.IsNullOrEmpty(myManualVer) Then
                                    .Rows(0)("MANUAL_VER") = myManualVer.Trim
                                Else
                                    .Rows(0)("MANUAL_VER") = System.DBNull.Value
                                End If
                            End If

                            If TR_ReferenceNo.Visible = True Then
                                If Not String.IsNullOrEmpty(myRefNo) Then
                                    .Rows(0)("REFERENCE_NO") = myRefNo.Trim
                                Else
                                    .Rows(0)("REFERENCE_NO") = System.DBNull.Value
                                End If
                            End If

                            If TR_URL.Visible = True Then
                                If Not String.IsNullOrEmpty(myURL) Then
                                    .Rows(0)("URL") = myURL.Trim
                                Else
                                    .Rows(0)("URL") = System.DBNull.Value
                                End If
                            End If

                            If TR_PatentInventor.Visible = True Then
                                If Not String.IsNullOrEmpty(myPatentInventor) Then
                                    .Rows(0)("PATENT_INVENTOR") = myPatentInventor.Trim
                                Else
                                    .Rows(0)("PATENT_INVENTOR") = System.DBNull.Value
                                End If
                            End If

                            If TR_Patentee.Visible = True Then
                                If Not String.IsNullOrEmpty(myPatentee) Then
                                    .Rows(0)("PATENTEE") = myPatentee.Trim
                                Else
                                    .Rows(0)("PATENTEE") = System.DBNull.Value
                                End If
                            End If

                            If TR_PatentNo.Visible = True Then
                                If Not String.IsNullOrEmpty(myPatentNo) Then
                                    .Rows(0)("PATENT_NO") = myPatentNo.Trim
                                Else
                                    .Rows(0)("PATENT_NO") = System.DBNull.Value
                                End If
                            End If

                            If TR_Reprint.Visible = True Then
                                If Not String.IsNullOrEmpty(myReprint) Then
                                    .Rows(0)("REPRINTS") = myReprint.Trim
                                Else
                                    .Rows(0)("REPRINTS") = System.DBNull.Value
                                End If
                            End If

                            If TR_Place.Visible = True Then
                                If Not String.IsNullOrEmpty(myConCode) Then
                                    .Rows(0)("CON_CODE") = myConCode.Trim
                                Else
                                    .Rows(0)("CON_CODE") = System.DBNull.Value
                                End If
                            End If

                            If TR_ConfName.Visible = True Then
                                If Not String.IsNullOrEmpty(myConfName) Then
                                    .Rows(0)("CONF_NAME") = myConfName.Trim
                                Else
                                    .Rows(0)("CONF_NAME") = System.DBNull.Value
                                End If
                            End If

                            If TR_ConfDetails.Visible = True Then
                                If Not String.IsNullOrEmpty(myConfSDate) Then
                                    .Rows(0)("CONF_FROM") = myConfSDate.Trim
                                Else
                                    .Rows(0)("CONF_FROM") = System.DBNull.Value
                                End If
                            End If

                            If TR_ConfDetails.Visible = True Then
                                If Not String.IsNullOrEmpty(myConfEDate) Then
                                    .Rows(0)("CONF_TO") = myConfEDate.Trim
                                Else
                                    .Rows(0)("CONF_TO") = System.DBNull.Value
                                End If
                            End If

                            If TR_ConfDetails.Visible = True Then
                                If Not String.IsNullOrEmpty(myConfPlace) Then
                                    .Rows(0)("CONF_PLACE") = myConfPlace.Trim
                                Else
                                    .Rows(0)("CONF_PLACE") = System.DBNull.Value
                                End If
                            End If

                            If TR_TranslatedFrom.Visible = True Then
                                If Not String.IsNullOrEmpty(myTrFrom) Then
                                    .Rows(0)("TR_FROM") = myTrFrom.Trim
                                Else
                                    .Rows(0)("TR_FROM") = System.DBNull.Value
                                End If
                            End If

                            If TR_RevisedBy.Visible = True Then
                                If Not String.IsNullOrEmpty(myRevisedBy) Then
                                    .Rows(0)("REVISED_BY") = myRevisedBy.Trim
                                Else
                                    .Rows(0)("REVISED_BY") = System.DBNull.Value
                                End If
                            End If

                            If TR_Commentator.Visible = True Then
                                If Not String.IsNullOrEmpty(myCommentator) Then
                                    .Rows(0)("COMMENTATORS") = myCommentator.Trim
                                Else
                                    .Rows(0)("COMMENTATORS") = System.DBNull.Value
                                End If
                            End If

                            If TR_ScholarName.Visible = True Then
                                If Not String.IsNullOrEmpty(myScholarName) Then
                                    .Rows(0)("SCHOLAR_NAME") = myScholarName.Trim
                                Else
                                    .Rows(0)("SCHOLAR_NAME") = System.DBNull.Value
                                End If
                            End If

                            If TR_ScholarDepartment.Visible = True Then
                                If Not String.IsNullOrEmpty(myScholarDept) Then
                                    .Rows(0)("SCHOLAR_DEPT") = myScholarDept.Trim
                                Else
                                    .Rows(0)("SCHOLAR_DEPT") = System.DBNull.Value
                                End If
                            End If

                            If TR_GuideName.Visible = True Then
                                If Not String.IsNullOrEmpty(myGuideName) Then
                                    .Rows(0)("GUIDE_NAME") = myGuideName.Trim
                                Else
                                    .Rows(0)("GUIDE_NAME") = System.DBNull.Value
                                End If
                            End If

                            If TR_GuideDepartment.Visible = True Then
                                If Not String.IsNullOrEmpty(myGuideDept) Then
                                    .Rows(0)("GUIDE_DEPT") = myGuideDept.Trim
                                Else
                                    .Rows(0)("GUIDE_DEPT") = System.DBNull.Value
                                End If
                            End If

                            If TR_DegreeName.Visible = True Then
                                If Not String.IsNullOrEmpty(myDegreeName) Then
                                    .Rows(0)("DEGREE_NAME") = myDegreeName.Trim
                                Else
                                    .Rows(0)("DEGREE_NAME") = System.DBNull.Value
                                End If
                            End If

                            If TR_Comments.Visible = True Then
                                If Not String.IsNullOrEmpty(myComments) Then
                                    .Rows(0)("COMMENTS") = myComments.Trim
                                Else
                                    .Rows(0)("COMMENTS") = System.DBNull.Value
                                End If
                            End If

                            If TR_SPRevision.Visible = True Then
                                If myReaffirmYear = 0 Then
                                    .Rows(0)("SP_REAFFIRM_YEAR") = System.DBNull.Value
                                Else
                                    If Not String.IsNullOrEmpty(myReaffirmYear) Then
                                        .Rows(0)("SP_REAFFIRM_YEAR") = myReaffirmYear
                                    Else
                                        .Rows(0)("SP_REAFFIRM_YEAR") = System.DBNull.Value
                                    End If
                                End If
                            End If

                            If TR_SP_TCSC.Visible = True Then
                                If Not String.IsNullOrEmpty(mySPCommittee) Then
                                    .Rows(0)("SP_TCSC") = mySPCommittee.Trim
                                Else
                                    .Rows(0)("SP_TCSC") = System.DBNull.Value
                                End If
                            End If

                            If TR_SP_UPDATES.Visible = True Then
                                If Not String.IsNullOrEmpty(mySPUpdates) Then
                                    .Rows(0)("SP_UPDATES") = mySPUpdates.Trim
                                Else
                                    .Rows(0)("SP_UPDATES") = System.DBNull.Value
                                End If
                            End If

                            If TR_SPRevision.Visible = True Then
                                If myWithdrawYear = 0 Then
                                    .Rows(0)("SP_WITHDRAW_YEAR") = System.DBNull.Value
                                Else
                                    If Not String.IsNullOrEmpty(myWithdrawYear) Then
                                        .Rows(0)("SP_WITHDRAW_YEAR") = myWithdrawYear
                                    Else
                                        .Rows(0)("SP_WITHDRAW_YEAR") = System.DBNull.Value
                                    End If
                                End If
                            End If

                            If TR_SP_AMMENDMENTS.Visible = True Then
                                If Not String.IsNullOrEmpty(mySPAmmendments) Then
                                    .Rows(0)("SP_AMMENDMENTS") = mySPAmmendments.Trim
                                Else
                                    .Rows(0)("SP_AMMENDMENTS") = System.DBNull.Value
                                End If
                            End If

                            If TR_SP_ISSUE_BODY.Visible = True Then
                                If Not String.IsNullOrEmpty(mySPIssueBody) Then
                                    .Rows(0)("SP_ISSUE_BODY") = mySPIssueBody.Trim
                                Else
                                    .Rows(0)("SP_ISSUE_BODY") = System.DBNull.Value
                                End If
                            End If

                            If TR_Producer.Visible = True Then
                                If Not String.IsNullOrEmpty(myProducer) Then
                                    .Rows(0)("PRODUCER") = myProducer.Trim
                                Else
                                    .Rows(0)("PRODUCER") = System.DBNull.Value
                                End If
                            End If

                            If TR_Designer.Visible = True Then
                                If Not String.IsNullOrEmpty(myDesigner) Then
                                    .Rows(0)("DESIGNER") = myDesigner.Trim
                                Else
                                    .Rows(0)("DESIGNER") = System.DBNull.Value
                                End If
                            End If

                            If TR_Manufacturer.Visible = True Then
                                If Not String.IsNullOrEmpty(myManufacturer) Then
                                    .Rows(0)("MANUFACTURER") = myManufacturer.Trim
                                Else
                                    .Rows(0)("MANUFACTURER") = System.DBNull.Value
                                End If
                            End If

                            If TR_Creator.Visible = True Then
                                If Not String.IsNullOrEmpty(myCreator) Then
                                    .Rows(0)("CREATOR") = myCreator.Trim
                                Else
                                    .Rows(0)("CREATOR") = System.DBNull.Value
                                End If
                            End If

                            If TR_Materials.Visible = True Then
                                If Not String.IsNullOrEmpty(myMaterials) Then
                                    .Rows(0)("MATERIALS") = myMaterials.Trim
                                Else
                                    .Rows(0)("MATERIALS") = System.DBNull.Value
                                End If
                            End If

                            If TR_Work.Visible = True Then
                                If Not String.IsNullOrEmpty(myWorkCategory) Then
                                    .Rows(0)("WORK_CATEGORY") = myWorkCategory.Trim
                                Else
                                    .Rows(0)("WORK_CATEGORY") = System.DBNull.Value
                                End If
                            End If

                            If TR_RelatedWork.Visible = True Then
                                If Not String.IsNullOrEmpty(myRelatedWork) Then
                                    .Rows(0)("RELATED_WORK") = myRelatedWork.Trim
                                Else
                                    .Rows(0)("RELATED_WORK") = System.DBNull.Value
                                End If
                            End If

                            If TR_Source.Visible = True Then
                                If Not String.IsNullOrEmpty(mySource) Then
                                    .Rows(0)("SOURCE") = mySource.Trim
                                Else
                                    .Rows(0)("SOURCE") = System.DBNull.Value
                                End If
                            End If

                            If TR_Photographer.Visible = True Then
                                If Not String.IsNullOrEmpty(myPhotographer) Then
                                    .Rows(0)("PHOTOGRAPHER") = myPhotographer.Trim
                                Else
                                    .Rows(0)("PHOTOGRAPHER") = System.DBNull.Value
                                End If
                            End If

                            If TR_Nationality.Visible = True Then
                                If Not String.IsNullOrEmpty(myNationality) Then
                                    .Rows(0)("NATIONALITY") = myNationality.Trim
                                Else
                                    .Rows(0)("NATIONALITY") = System.DBNull.Value
                                End If
                            End If

                            If TR_Materials.Visible = True Then
                                If Not String.IsNullOrEmpty(myTechniq) Then
                                    .Rows(0)("TECHNIQ") = myTechniq.Trim
                                Else
                                    .Rows(0)("TECHNIQ") = System.DBNull.Value
                                End If
                            End If

                            If TR_Work.Visible = True Then
                                If Not String.IsNullOrEmpty(myWorkType) Then
                                    .Rows(0)("WORK_TYPE") = myWorkType.Trim
                                Else
                                    .Rows(0)("WORK_TYPE") = System.DBNull.Value
                                End If
                            End If

                            If TR_Creator.Visible = True Then
                                If Not String.IsNullOrEmpty(myRoleofCreator) Then
                                    .Rows(0)("ROLE_OF_CREATOR") = myRoleofCreator.Trim
                                Else
                                    .Rows(0)("ROLE_OF_CREATOR") = System.DBNull.Value
                                End If
                            End If

                            If TR_Producer.Visible = True Then
                                If myProductionYear = 0 Then
                                    .Rows(0)("PRODUCTION_YEAR") = System.DBNull.Value
                                Else
                                    If Not String.IsNullOrEmpty(myProductionYear) Then
                                        .Rows(0)("PRODUCTION_YEAR") = myProductionYear
                                    Else
                                        .Rows(0)("PRODUCTION_YEAR") = System.DBNull.Value
                                    End If
                                End If
                            End If

                            If TR_ACT.Visible = True Then
                                If ACT_YEAR = 0 Then
                                    .Rows(0)("ACT_YEAR") = System.DBNull.Value
                                Else
                                    If Not String.IsNullOrEmpty(ACT_YEAR) Then
                                        .Rows(0)("ACT_YEAR") = ACT_YEAR
                                    Else
                                        .Rows(0)("ACT_YEAR") = System.DBNull.Value
                                    End If
                                End If
                            End If

                            If TR_CHAIRMAN.Visible = True Then
                                If Not String.IsNullOrEmpty(CHAIRMAN) Then
                                    .Rows(0)("CHAIRMAN") = CHAIRMAN.Trim
                                Else
                                    .Rows(0)("CHAIRMAN") = System.DBNull.Value
                                End If
                            End If

                            If TR_ACT.Visible = True Then
                                If Not String.IsNullOrEmpty(ACT_NO) Then
                                    .Rows(0)("ACT_NO") = ACT_NO.Trim
                                Else
                                    .Rows(0)("ACT_NO") = System.DBNull.Value
                                End If
                            End If

                            If TR_GOVERNMENT.Visible = True Then
                                If Not String.IsNullOrEmpty(GOVERNMENT) Then
                                    .Rows(0)("GOVERNMENT") = GOVERNMENT.Trim
                                Else
                                    .Rows(0)("GOVERNMENT") = System.DBNull.Value
                                End If
                            End If

                            If TR_PHOTO.Visible = True Then
                                If FileUpload1.FileName <> "" Then
                                    .Rows(0)("PHOTO") = arrContent2
                                Else
                                    If CheckBox1.Checked = True Then
                                        .Rows(0)("PHOTO") = System.DBNull.Value
                                    End If
                                End If
                            End If

                            If TR_CONTENTS.Visible = True Then
                                If FileUpload2.FileName <> "" Then
                                    .Rows(0)("CONT_FILE") = arrContent3
                                Else
                                    If CheckBox3.Checked = True Then
                                        .Rows(0)("CONT_FILE") = System.DBNull.Value
                                    End If
                                End If


                                If Not String.IsNullOrEmpty(FileExtension) Then
                                    .Rows(0)("CONT_FILE_TYPE") = FileExtension.Trim
                                Else
                                    .Rows(0)("CONT_FILE_TYPE") = System.DBNull.Value
                                End If
                            End If


                            .Rows(0)("LIB_CODE") = LibCode
                            .Rows(0)("UPDATED_BY") = Session.Item("LoggedUser")
                            .Rows(0)("DATE_MODIFIED") = Now.Date
                            .Rows(0)("IP") = Request.UserHostAddress.Trim
                        End With
                        thisTransaction = SqlConn.BeginTransaction()
                        da.SelectCommand.Transaction = thisTransaction
                        da.Update(ds, "CATS")

                        '**************************************************************************************
                        'UPDATE ACQ
                        Dim intAcqID As Integer = Nothing
                        If Table4.Visible = True Then
                            If Label_ACQID.Text <> "" Then 'update
                                If Label_ProcessStatus.Text <> "" Then
                                    If Label_ProcessStatus.Text = "Direct Accessioned" Then
                                        Dim da3 As SqlDataAdapter
                                        Dim cb3 As SqlCommandBuilder
                                        Dim ds3 As New DataSet
                                        Dim SQL3 As String = Nothing

                                        SQL3 = "SELECT * FROM ACQUISITIONS WHERE (ACQ_ID='" & Trim(Label_ACQID.Text) & "')"
                                        da3 = New SqlDataAdapter(SQL3, SqlConn)
                                        da3.SelectCommand.Transaction = thisTransaction
                                        cb3 = New SqlCommandBuilder(da3)
                                        da3.Fill(ds3, "ACQ")

                                        If ds3.Tables("ACQ").Rows.Count <> 0 Then
                                            If Not String.IsNullOrEmpty(ACQMODE_CODE) Then
                                                ds3.Tables("ACQ").Rows(0)("ACQMODE_CODE") = ACQMODE_CODE.Trim
                                            Else
                                                ds3.Tables("ACQ").Rows(0)("ACQMODE_CODE") = System.DBNull.Value
                                            End If

                                            If Not String.IsNullOrEmpty(CUR_CODE) Then
                                                ds3.Tables("ACQ").Rows(0)("CUR_CODE") = CUR_CODE.Trim
                                            Else
                                                ds3.Tables("ACQ").Rows(0)("CUR_CODE") = System.DBNull.Value
                                            End If

                                            If ITEM_PRICE <> 0 Then
                                                ds3.Tables("ACQ").Rows(0)("ITEM_PRICE") = ITEM_PRICE.Trim
                                            Else
                                                ds3.Tables("ACQ").Rows(0)("ITEM_PRICE") = System.DBNull.Value
                                            End If

                                            If CONVERSION_RATE <> 0 Then
                                                ds3.Tables("ACQ").Rows(0)("CONVERSION_RATE") = CONVERSION_RATE
                                            Else
                                                ds3.Tables("ACQ").Rows(0)("CONVERSION_RATE") = System.DBNull.Value
                                            End If

                                            If ITEM_RUPEES <> 0 Then
                                                ds3.Tables("ACQ").Rows(0)("ITEM_RUPEES") = ITEM_RUPEES.Trim
                                            Else
                                                ds3.Tables("ACQ").Rows(0)("ITEM_RUPEES") = System.DBNull.Value
                                            End If

                                            If OTHER_CHARGES <> 0 Then
                                                ds3.Tables("ACQ").Rows(0)("OTHER_CHARGES") = OTHER_CHARGES.ToString
                                            Else
                                                ds3.Tables("ACQ").Rows(0)("OTHER_CHARGES") = System.DBNull.Value
                                            End If

                                            If VEND_ID <> 0 Then
                                                ds3.Tables("ACQ").Rows(0)("VEND_ID") = VEND_ID
                                            Else
                                                ds3.Tables("ACQ").Rows(0)("VEND_ID") = System.DBNull.Value
                                            End If

                                            If Not String.IsNullOrEmpty(VOL_NO) Then
                                                ds3.Tables("ACQ").Rows(0)("VOL_NO") = VOL_NO
                                            Else
                                                ds3.Tables("ACQ").Rows(0)("VOL_NO") = System.DBNull.Value
                                            End If

                                            ds3.Tables("ACQ").Rows(0)("UPDATED_BY") = UserCode.Trim
                                            ds3.Tables("ACQ").Rows(0)("DATE_MODIFIED") = Now.Date
                                            ds3.Tables("ACQ").Rows(0)("IP") = Request.UserHostAddress.Trim

                                            'thisTransaction = SqlConn.BeginTransaction()
                                            'da2.SelectCommand.Transaction = thisTransaction
                                            da3.Update(ds3, "ACQ")
                                        End If
                                    End If 'direct accessioned
                                End If 'process status not blank
                            Else    ' add new acq record

                                Dim DATE_ADDED As Object = Nothing
                                DATE_ADDED = Now.Date
                                DATE_ADDED = Convert.ToDateTime(DATE_ADDED, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                                Dim objCommand1 As New SqlCommand
                                objCommand1.Connection = SqlConn
                                objCommand1.Transaction = thisTransaction
                                objCommand1.CommandType = CommandType.Text
                                objCommand1.CommandText = "INSERT INTO ACQUISITIONS (CAT_NO, LIB_CODE, USER_CODE, DATE_ADDED, ACQMODE_CODE, CUR_CODE, ITEM_PRICE, CONVERSION_RATE, ITEM_RUPEES, OTHER_CHARGES, VEND_ID, IP, PROCESS_STATUS, VOL_NO, COPY_PROPOSED, COPY_APPROVED, COPY_ORDERED, COPY_RECEIVED, COPY_ACCESSIONED) " & _
                                                         " VALUES (@CAT_NO, @LIB_CODE, @USER_CODE, @DATE_ADDED, @ACQMODE_CODE, @CUR_CODE, @ITEM_PRICE, @CONVERSION_RATE, @ITEM_RUPEES, @OTHER_CHARGES, @VEND_ID, @IP, @PROCESS_STATUS, @VOL_NO, @COPY_PROPOSED, @COPY_APPROVED, @COPY_ORDERED, @COPY_RECEIVED, @COPY_ACCESSIONED); " & _
                                                         " SELECT SCOPE_IDENTITY()"

                                objCommand1.Parameters.Add("@CAT_NO", SqlDbType.Int)
                                objCommand1.Parameters("@CAT_NO").Value = Label7.Text

                                objCommand1.Parameters.Add("@LIB_CODE", SqlDbType.NVarChar)
                                If LibCode = "" Then
                                    objCommand1.Parameters("@LIB_CODE").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@LIB_CODE").Value = LibCode
                                End If

                                objCommand1.Parameters.Add("@USER_CODE", SqlDbType.NVarChar)
                                If myUserCode = "" Then
                                    objCommand1.Parameters("@USER_CODE").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@USER_CODE").Value = myUserCode
                                End If

                                objCommand1.Parameters.Add("@DATE_ADDED", SqlDbType.DateTime)
                                If DATE_ADDED = "" Then
                                    objCommand1.Parameters("@DATE_ADDED").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@DATE_ADDED").Value = DATE_ADDED
                                End If

                                objCommand1.Parameters.Add("@ACQMODE_CODE", SqlDbType.NVarChar)
                                If ACQMODE_CODE = "" Then
                                    objCommand1.Parameters("@ACQMODE_CODE").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@ACQMODE_CODE").Value = ACQMODE_CODE
                                End If

                                objCommand1.Parameters.Add("@CUR_CODE", SqlDbType.NVarChar)
                                If CUR_CODE = "" Then
                                    objCommand1.Parameters("@CUR_CODE").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@CUR_CODE").Value = CUR_CODE
                                End If

                                objCommand1.Parameters.Add("@ITEM_PRICE", SqlDbType.Decimal)
                                If ITEM_PRICE = 0 Then
                                    objCommand1.Parameters("@ITEM_PRICE").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@ITEM_PRICE").Value = ITEM_PRICE
                                End If

                                objCommand1.Parameters.Add("@CONVERSION_RATE", SqlDbType.Decimal)
                                If CONVERSION_RATE = 0 Then
                                    objCommand1.Parameters("@CONVERSION_RATE").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@CONVERSION_RATE").Value = CONVERSION_RATE
                                End If

                                objCommand1.Parameters.Add("@ITEM_RUPEES", SqlDbType.Decimal)
                                If ITEM_RUPEES = 0 Then
                                    objCommand1.Parameters("@ITEM_RUPEES").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@ITEM_RUPEES").Value = ITEM_RUPEES
                                End If

                                objCommand1.Parameters.Add("@OTHER_CHARGES", SqlDbType.Decimal)
                                If OTHER_CHARGES = 0 Then
                                    objCommand1.Parameters("@OTHER_CHARGES").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@OTHER_CHARGES").Value = OTHER_CHARGES
                                End If

                                objCommand1.Parameters.Add("@VOL_NO", SqlDbType.VarChar)
                                If VOL_NO = "" Then
                                    objCommand1.Parameters("@VOL_NO").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@VOL_NO").Value = VOL_NO
                                End If

                                objCommand1.Parameters.Add("@VEND_ID", SqlDbType.Int)
                                If VEND_ID = 0 Then
                                    objCommand1.Parameters("@VEND_ID").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@VEND_ID").Value = VEND_ID
                                End If

                                objCommand1.Parameters.Add("@COPY_PROPOSED", SqlDbType.Int)
                                objCommand1.Parameters("@COPY_PROPOSED").Value = 1

                                objCommand1.Parameters.Add("@COPY_APPROVED", SqlDbType.Int)
                                objCommand1.Parameters("@COPY_APPROVED").Value = 1

                                objCommand1.Parameters.Add("@COPY_ORDERED", SqlDbType.Int)
                                objCommand1.Parameters("@COPY_ORDERED").Value = 1

                                objCommand1.Parameters.Add("@COPY_RECEIVED", SqlDbType.Int)
                                objCommand1.Parameters("@COPY_RECEIVED").Value = 1

                                objCommand1.Parameters.Add("@COPY_ACCESSIONED", SqlDbType.Int)
                                objCommand1.Parameters("@COPY_ACCESSIONED").Value = 1

                                objCommand1.Parameters.Add("@PROCESS_STATUS", SqlDbType.VarChar)
                                objCommand1.Parameters("@PROCESS_STATUS").Value = "Direct Accessioned"

                                objCommand1.Parameters.Add("@IP", SqlDbType.VarChar)
                                If myIP = "" Then
                                    objCommand1.Parameters("@IP").Value = System.DBNull.Value
                                Else
                                    objCommand1.Parameters("@IP").Value = myIP
                                End If

                                Dim drAcq As SqlDataReader
                                drAcq = objCommand1.ExecuteReader()
                                If drAcq.Read Then
                                    intAcqID = drAcq.GetValue(0)
                                End If
                                drAcq.Close()

                            End If

                        End If

                        '**************************************************************************************
                        'UPDATE HOLDINGS

                        If Table2.Visible = True Then
                            If Label_HoldID.Text <> "" Then

                                Dim da2 As SqlDataAdapter
                                Dim cb2 As SqlCommandBuilder
                                Dim ds2 As New DataSet
                                Dim SQL2 As String = Nothing

                                SQL2 = "SELECT * FROM HOLDINGS WHERE (HOLD_ID='" & Trim(HOLD_ID) & "')"
                                da2 = New SqlDataAdapter(SQL2, SqlConn)
                                da2.SelectCommand.Transaction = thisTransaction
                                cb2 = New SqlCommandBuilder(da2)
                                da2.Fill(ds2, "HOLD")

                                If ds2.Tables("HOLD").Rows.Count <> 0 Then
                                    If Not String.IsNullOrEmpty(ACCESSION_NO) Then
                                        ds2.Tables("HOLD").Rows(0)("ACCESSION_NO") = ACCESSION_NO.Trim
                                    Else
                                        ds2.Tables("HOLD").Rows(0)("ACCESSION_NO") = System.DBNull.Value
                                    End If

                                    If Not String.IsNullOrEmpty(ACCESSION_DATE) Then
                                        ds2.Tables("HOLD").Rows(0)("ACCESSION_DATE") = ACCESSION_DATE.ToString.Trim
                                    Else
                                        ds2.Tables("HOLD").Rows(0)("ACCESSION_DATE") = System.DBNull.Value
                                    End If

                                    If Table4.Visible = True Then
                                        If intAcqID <> 0 Then
                                            ds2.Tables("HOLD").Rows(0)("ACQ_ID") = intAcqID
                                        End If
                                    End If

                                    If TR_FORMAT_CODE.Visible = True Then
                                        If Not String.IsNullOrEmpty(FORMAT_CODE) Then
                                            ds2.Tables("HOLD").Rows(0)("FORMAT_CODE") = FORMAT_CODE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("FORMAT_CODE") = System.DBNull.Value
                                        End If
                                    End If

                                    If Not String.IsNullOrEmpty(SHOW) Then
                                        ds2.Tables("HOLD").Rows(0)("SHOW") = SHOW.Trim
                                    Else
                                        ds2.Tables("HOLD").Rows(0)("SHOW") = System.DBNull.Value
                                    End If

                                    If Not String.IsNullOrEmpty(ISSUABLE) Then
                                        ds2.Tables("HOLD").Rows(0)("ISSUEABLE") = ISSUABLE.Trim
                                    Else
                                        ds2.Tables("HOLD").Rows(0)("ISSUEABLE") = System.DBNull.Value
                                    End If

                                    If TR_VOL_NO.Visible = True Then
                                        If Not String.IsNullOrEmpty(VOL_NO) Then
                                            ds2.Tables("HOLD").Rows(0)("VOL_NO") = VOL_NO.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("VOL_NO") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_VOL_NO.Visible = True Then
                                        If VOL_YEAR = 0 Then
                                            ds2.Tables("HOLD").Rows(0)("VOL_YEAR") = System.DBNull.Value
                                        Else
                                            If Not String.IsNullOrEmpty(VOL_YEAR) Then
                                                ds2.Tables("HOLD").Rows(0)("VOL_YEAR") = VOL_YEAR
                                            Else
                                                ds2.Tables("HOLD").Rows(0)("VOL_YEAR") = System.DBNull.Value
                                            End If
                                        End If
                                    End If

                                    If TR_VOL_EDITORS.Visible = True Then
                                        If Not String.IsNullOrEmpty(VOL_EDITORS) Then
                                            ds2.Tables("HOLD").Rows(0)("VOL_EDITORS") = VOL_EDITORS.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("VOL_EDITORS") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_VOL_TITLE.Visible = True Then
                                        If Not String.IsNullOrEmpty(VOL_TITLE) Then
                                            ds2.Tables("HOLD").Rows(0)("VOL_TITLE") = VOL_TITLE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("VOL_TITLE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_VOL_NO.Visible = True Then
                                        If Not String.IsNullOrEmpty(COPY_ISBN) Then
                                            ds2.Tables("HOLD").Rows(0)("COPY_ISBN") = COPY_ISBN.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("COPY_ISBN") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CLASS_NO.Visible = True Then
                                        If Not String.IsNullOrEmpty(CLASS_NO) Then
                                            ds2.Tables("HOLD").Rows(0)("CLASS_NO") = CLASS_NO.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CLASS_NO") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CLASS_NO.Visible = True Then
                                        If Not String.IsNullOrEmpty(BOOK_NO) Then
                                            ds2.Tables("HOLD").Rows(0)("BOOK_NO") = BOOK_NO.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("BOOK_NO") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_PAGINATION.Visible = True Then
                                        If Not String.IsNullOrEmpty(PAGINATION) Then
                                            ds2.Tables("HOLD").Rows(0)("PAGINATION") = PAGINATION.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("PAGINATION") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_SIZE.Visible = True Then
                                        If Not String.IsNullOrEmpty(SIZE) Then
                                            ds2.Tables("HOLD").Rows(0)("SIZE") = SIZE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("SIZE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_ILLUSTRATION.Visible = True Then
                                        If Not String.IsNullOrEmpty(ILLUSTRATION) Then
                                            ds2.Tables("HOLD").Rows(0)("ILLUSTRATION") = ILLUSTRATION.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("ILLUSTRATION") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_COLLECTION_TYPE.Visible = True Then
                                        If Not String.IsNullOrEmpty(COLLECTION_TYPE) Then
                                            ds2.Tables("HOLD").Rows(0)("COLLECTION_TYPE") = COLLECTION_TYPE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("COLLECTION_TYPE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_BIND_CODE.Visible = True Then
                                        If Not String.IsNullOrEmpty(BIND_CODE) Then
                                            ds2.Tables("HOLD").Rows(0)("BIND_CODE") = BIND_CODE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("BIND_CODE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_SEC_CODE.Visible = True Then
                                        If Not String.IsNullOrEmpty(SEC_CODE) Then
                                            ds2.Tables("HOLD").Rows(0)("SEC_CODE") = SEC_CODE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("SEC_CODE") = System.DBNull.Value
                                        End If
                                    End If

                                    If Not String.IsNullOrEmpty(HOLD_LIB_CODE) Then
                                        ds2.Tables("HOLD").Rows(0)("LIB_CODE") = HOLD_LIB_CODE.Trim
                                    Else
                                        ds2.Tables("HOLD").Rows(0)("LIB_CODE") = HOLD_LIB_CODE.Trim
                                    End If

                                    If TR_ACC_MAT_CODE.Visible = True Then
                                        If Not String.IsNullOrEmpty(ACC_MAT_CODE) Then
                                            ds2.Tables("HOLD").Rows(0)("ACC_MAT_CODE") = ACC_MAT_CODE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("ACC_MAT_CODE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_Remarks.Visible = True Then
                                        If Not String.IsNullOrEmpty(REMARKS) Then
                                            ds2.Tables("HOLD").Rows(0)("REMARKS") = REMARKS.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("REMARKS") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_PHYSICAL_LOCATION.Visible = True Then
                                        If Not String.IsNullOrEmpty(PHYSICAL_LOCATION) Then
                                            ds2.Tables("HOLD").Rows(0)("PHYSICAL_LOCATION") = PHYSICAL_LOCATION.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("PHYSICAL_LOCATION") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_REFERENCE_NO.Visible = True Then
                                        If Not String.IsNullOrEmpty(REFERENCE_NO) Then
                                            ds2.Tables("HOLD").Rows(0)("REFERENCE_NO") = REFERENCE_NO.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("REFERENCE_NO") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_MEDIUM.Visible = True Then
                                        If Not String.IsNullOrEmpty(RECORDING_MEDIUM) Then
                                            ds2.Tables("HOLD").Rows(0)("MEDIUM") = RECORDING_MEDIUM.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("MEDIUM") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_RECORDING_CATEGORY.Visible = True Then
                                        If Not String.IsNullOrEmpty(RECORDING_CATEGORY) Then
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_CATEGORY") = RECORDING_CATEGORY.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_CATEGORY") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_RECORDING_FORM.Visible = True Then
                                        If Not String.IsNullOrEmpty(RECORDING_FORM) Then
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_FORM") = RECORDING_FORM.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_FORM") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_RECORDING_FORMAT.Visible = True Then
                                        If Not String.IsNullOrEmpty(RECORDING_FORMAT) Then
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_FORMAT") = RECORDING_FORMAT.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_FORMAT") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_RECORDING_SPEED.Visible = True Then
                                        If Not String.IsNullOrEmpty(RECORDING_SPEED) Then
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_SPEED") = RECORDING_SPEED.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_SPEED") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_RECORDING_STORAGE_TECH.Visible = True Then
                                        If Not String.IsNullOrEmpty(RECORDING_STORAGE_TECH) Then
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_STORAGE_TECH") = RECORDING_STORAGE_TECH.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_STORAGE_TECH") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_RECORDING_PLAY_DURATION.Visible = True Then
                                        If Not String.IsNullOrEmpty(RECORDING_PLAY_DURATION) Then
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_PLAY_DURATION") = RECORDING_PLAY_DURATION.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("RECORDING_PLAY_DURATION") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_VIDEO_TYPEOFVISUAL.Visible = True Then
                                        If Not String.IsNullOrEmpty(VIDEO_TYPEOFVISUALS) Then
                                            ds2.Tables("HOLD").Rows(0)("VIDEO_TYPEOFVISUALS") = VIDEO_TYPEOFVISUALS.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("VIDEO_TYPEOFVISUALS") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CARTOGRAPHIC_SCALE.Visible = True Then
                                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_SCALE) Then
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_SCALE") = CARTOGRAPHIC_SCALE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_SCALE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CARTOGRAPHIC_PROJECTION.Visible = True Then
                                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_PROJECTION) Then
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_PROJECTION") = CARTOGRAPHIC_PROJECTION.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_PROJECTION") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CARTOGRAPHIC_COORDINATES.Visible = True Then
                                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_COORDINATES) Then
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_COORDINATES") = CARTOGRAPHIC_COORDINATES.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_COORDINATES") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Visible = True Then
                                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_GEOGRAPHIC_LOCATION) Then
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_GEOGRAPHIC_LOCATION") = CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_GEOGRAPHIC_LOCATION") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CARTOGRAPHIC_MEDIUM.Visible = True Then
                                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_MEDIUM) Then
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_MEDIUM") = CARTOGRAPHIC_MEDIUM.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_MEDIUM") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CARTOGRAPHIC_DATAGATHERING_DATE.Visible = True Then
                                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_DATAGATHERING_DATE) Then
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_DATAGATHERING_DATE") = CARTOGRAPHIC_DATAGATHERING_DATE.ToString.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_DATAGATHERING_DATE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CREATION_DATE.Visible = True Then
                                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_CREATION_DATE) Then
                                            ds2.Tables("HOLD").Rows(0)("CREATION_DATE") = CARTOGRAPHIC_CREATION_DATE.ToString.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CREATION_DATE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CARTOGRAPHIC_COMPILATION_DATE.Visible = True Then
                                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_COMPILATION_DATE) Then
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_COMPILATION_DATE") = CARTOGRAPHIC_COMPILATION_DATE.ToString.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_COMPILATION_DATE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CARTOGRAPHIC_INSPECTION_DATE.Visible = True Then
                                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_INSPECTION_DATE) Then
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_INSPECTION_DATE") = CARTOGRAPHIC_INSPECTION_DATE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CARTOGRAPHIC_INSPECTION_DATE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_VIDEO_COLOR.Visible = True Then
                                        If Not String.IsNullOrEmpty(VIDEO_COLOR) Then
                                            ds2.Tables("HOLD").Rows(0)("VIDEO_COLOR") = VIDEO_COLOR.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("VIDEO_COLOR") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_PLAYBACK_CHANNELS.Visible = True Then
                                        If Not String.IsNullOrEmpty(PLAYBACK_CHANNELS) Then
                                            ds2.Tables("HOLD").Rows(0)("PLAYBACK_CHANNELS") = PLAYBACK_CHANNELS.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("PLAYBACK_CHANNELS") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_TAPE_WIDTH.Visible = True Then
                                        If Not String.IsNullOrEmpty(TAPE_WIDTH) Then
                                            ds2.Tables("HOLD").Rows(0)("TAPE_WIDTH") = TAPE_WIDTH.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("TAPE_WIDTH") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_TAPE_CONFIGURATION.Visible = True Then
                                        If Not String.IsNullOrEmpty(TAPE_CONFIGURATION) Then
                                            ds2.Tables("HOLD").Rows(0)("TAPE_CONFIGURATION") = TAPE_CONFIGURATION.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("TAPE_CONFIGURATION") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_KIND_OF_DISK.Visible = True Then
                                        If Not String.IsNullOrEmpty(KIND_OF_DISK) Then
                                            ds2.Tables("HOLD").Rows(0)("KIND_OF_DISK") = KIND_OF_DISK.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("KIND_OF_DISK") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_KIND_OF_CUTTING.Visible = True Then
                                        If Not String.IsNullOrEmpty(KIND_OF_CUTTING) Then
                                            ds2.Tables("HOLD").Rows(0)("KIND_OF_CUTTING") = KIND_OF_CUTTING.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("KIND_OF_CUTTING") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_ENCODING_STANDARD.Visible = True Then
                                        If Not String.IsNullOrEmpty(ENCODING_STANDARD) Then
                                            ds2.Tables("HOLD").Rows(0)("ENCODING_STANDARD") = ENCODING_STANDARD.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("ENCODING_STANDARD") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CAPTURE_TECHNIQUE.Visible = True Then
                                        If Not String.IsNullOrEmpty(CAPTURE_TECHNIQUE) Then
                                            ds2.Tables("HOLD").Rows(0)("CAPTURE_TECHNIQUE") = CAPTURE_TECHNIQUE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CAPTURE_TECHNIQUE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_PHOTO_NO.Visible = True Then
                                        If Not String.IsNullOrEmpty(PHOTO_NO) Then
                                            ds2.Tables("HOLD").Rows(0)("PHOTO_NO") = PHOTO_NO.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("PHOTO_NO") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_PHOTO_ALBUM_NO.Visible = True Then
                                        If Not String.IsNullOrEmpty(PHOTO_ALBUM_NO) Then
                                            ds2.Tables("HOLD").Rows(0)("PHOTO_ALBUM_NO") = PHOTO_ALBUM_NO.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("PHOTO_ALBUM_NO") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_PHOTO_OCASION.Visible = True Then
                                        If Not String.IsNullOrEmpty(PHOTO_OCASION) Then
                                            ds2.Tables("HOLD").Rows(0)("PHOTO_OCASION") = PHOTO_OCASION.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("PHOTO_OCASION") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_IMAGE_VIEW_TYPE.Visible = True Then
                                        If Not String.IsNullOrEmpty(IMAGE_VIEW_TYPE) Then
                                            ds2.Tables("HOLD").Rows(0)("IMAGE_VIEW_TYPE") = IMAGE_VIEW_TYPE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("IMAGE_VIEW_TYPE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_VIEW_DATE.Visible = True Then
                                        If Not String.IsNullOrEmpty(VIEW_DATE) Then
                                            ds2.Tables("HOLD").Rows(0)("VIEW_DATE") = VIEW_DATE.ToString.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("VIEW_DATE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_THEME.Visible = True Then
                                        If Not String.IsNullOrEmpty(THEME) Then
                                            ds2.Tables("HOLD").Rows(0)("THEME") = THEME.ToString.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("THEME") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_STYLE.Visible = True Then
                                        If Not String.IsNullOrEmpty(STYLE) Then
                                            ds2.Tables("HOLD").Rows(0)("STYLE") = STYLE.ToString.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("STYLE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CULTURE.Visible = True Then
                                        If Not String.IsNullOrEmpty(CULTURE) Then
                                            ds2.Tables("HOLD").Rows(0)("CULTURE") = CULTURE.ToString.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CULTURE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CURRENT_SITE.Visible = True Then
                                        If Not String.IsNullOrEmpty(CURRENT_SITE) Then
                                            ds2.Tables("HOLD").Rows(0)("CURRENT_SITE") = CURRENT_SITE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CURRENT_SITE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_CREATION_SITE.Visible = True Then
                                        If Not String.IsNullOrEmpty(CREATION_SITE) Then
                                            ds2.Tables("HOLD").Rows(0)("CREATION_SITE") = CREATION_SITE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("CREATION_SITE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_YARNCOUNT.Visible = True Then
                                        If Not String.IsNullOrEmpty(YARNCOUNT) Then
                                            ds2.Tables("HOLD").Rows(0)("YARNCOUNT") = YARNCOUNT.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("YARNCOUNT") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_MATERIAL_TYPE.Visible = True Then
                                        If Not String.IsNullOrEmpty(MATERIAL_TYPE) Then
                                            ds2.Tables("HOLD").Rows(0)("MATERIAL_TYPE") = MATERIAL_TYPE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("MATERIAL_TYPE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_TECHNIQUE.Visible = True Then
                                        If Not String.IsNullOrEmpty(TECHNIQUE) Then
                                            ds2.Tables("HOLD").Rows(0)("TECHNIQUE") = TECHNIQUE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("TECHNIQUE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_TECH_DETAILS.Visible = True Then
                                        If Not String.IsNullOrEmpty(TECH_DETAILS) Then
                                            ds2.Tables("HOLD").Rows(0)("TECH_DETAILS") = TECH_DETAILS.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("TECH_DETAILS") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_INSCRIPTIONS.Visible = True Then
                                        If Not String.IsNullOrEmpty(INSCRIPTIONS) Then
                                            ds2.Tables("HOLD").Rows(0)("INSCRIPTIONS") = INSCRIPTIONS.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("INSCRIPTIONS") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_DESCRIPTION.Visible = True Then
                                        If Not String.IsNullOrEmpty(DESCRIPTION) Then
                                            ds2.Tables("HOLD").Rows(0)("DESCRIPTION") = DESCRIPTION.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("DESCRIPTION") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_GLOBE_TYPE.Visible = True Then
                                        If Not String.IsNullOrEmpty(GLOBE_TYPE) Then
                                            ds2.Tables("HOLD").Rows(0)("GLOBE_TYPE") = GLOBE_TYPE.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("GLOBE_TYPE") = System.DBNull.Value
                                        End If
                                    End If

                                    If TR_ALTER_DATE.Visible = True Then
                                        If Not String.IsNullOrEmpty(ALTER_DATE) Then
                                            ds2.Tables("HOLD").Rows(0)("ALTER_DATE") = ALTER_DATE.ToString.Trim
                                        Else
                                            ds2.Tables("HOLD").Rows(0)("ALTER_DATE") = System.DBNull.Value
                                        End If
                                    End If

                                    ds2.Tables("HOLD").Rows(0)("UPDATED_BY") = UserCode.Trim
                                    ds2.Tables("HOLD").Rows(0)("DATE_MODIFIED") = Now.Date
                                    ds2.Tables("HOLD").Rows(0)("IP") = Request.UserHostAddress.Trim
                                    da2.Update(ds2, "HOLD")

                                    intAcqID = Nothing
                                End If
                            End If






                        End If








                        thisTransaction.Commit()

                        Label15.Text = "Record Updated Successfully"
                        'ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Record Updated Successfully... ');", True)
                        Label6.Text = ""
                        ClearFields()
                    Else
                        Label6.Text = "Record Not Updated  - Please Contact System Administrator... "
                        Label15.Text = ""
                        Exit Sub
                    End If

                Else
                    Label6.Text = "Record Not Selected..."
                    Label15.Text = ""
                End If
            Else
                'record not selected
                Label6.Text = "Record Not Selected..."
                Label15.Text = ""
            End If
            SqlConn.Close()
            ClearFields()
            UpdatePanel1.Update()
            txt_Display_Value.Text = Label7.Text
            DDL_Display.SelectedValue = "CAT_NO"

            DisplayRecord()
        Catch q As SqlException
            thisTransaction.Rollback()
            Label6.Text = "Database Error -SAVE: " & (q.Message() & ", " & q.Number & ", " & q.GetType.ToString)
            Label15.Text = ""
        Catch s As Exception
            Label6.Text = "Error: " & (s.Message())
            Label15.Text = ""
        Finally
            SqlConn.Close()
        End Try
    End Sub
    'delete record    
    Protected Sub Acq_Delete_Bttn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles Acq_Delete_Bttn.Click
        Try
            If Label7.Text <> "" Then
                Dim myDelCat As Object = Nothing
                myDelCat = Trim(Label7.Text)
                'check cat record in acq and holdigns table
                Dim str As Object = Nothing
                Dim flag As Object = Nothing
                str = "SELECT CAT_NO FROM ACQUISITIONS WHERE (CAT_NO ='" & Trim(myDelCat) & "') "
                Dim cmd1 As New SqlCommand(str, SqlConn)
                If SqlConn.State = 0 Then
                    SqlConn.Open()
                End If
                flag = cmd1.ExecuteScalar
                SqlConn.Close()
                If flag <> Nothing Then
                    Label6.Text = "Alert: Catalog Record Reference Exists in ACQUISITION Table thus can not be deleted!"
                    Label15.Text = ""
                    Exit Sub
                End If

                'check in holding table
                Dim str1 As Object = Nothing
                Dim flag1 As Object = Nothing
                str1 = "SELECT CAT_NO FROM HOLDINGS WHERE (CAT_NO ='" & Trim(myDelCat) & "') "
                Dim cmd2 As New SqlCommand(str1, SqlConn)
                If SqlConn.State = 0 Then
                    SqlConn.Open()
                End If
                flag1 = cmd2.ExecuteScalar
                SqlConn.Close()
                If flag <> Nothing Then
                    Label6.Text = "Alert: Catalog Record Reference Exists in HOLDIGNS Table thus can not be deleted!"
                    Label15.Text = ""
                    Exit Sub
                End If

                'delete Record
                Dim SQL As String = Nothing
                SQL = "DELETE FROM CATS WHERE (CAT_NO ='" & Trim(myDelCat) & "') "
                Dim objCommand As New SqlCommand(SQL, SqlConn)
                Dim da As New SqlDataAdapter(objCommand)
                Dim ds As New DataSet
                da.Fill(ds)
                Label15.Text = "Catalog Record deleted Successfully!"
                Label6.Text = ""
                ClearFields()
                Acq_Cancel_Bttn_Click(sender, e)
                'Me.Acq_Save_Bttn.Visible = True
                'Me.Acq_Update_Bttn.Visible = False
                'Me.Acq_Delete_Bttn.Visible = False
                'Acq_SaveNew_Bttn.Visible = False
            End If
        Catch q As SqlException
            Label6.Text = "Database Error -SAVE: " & (q.Message() & ", " & q.Number & ", " & q.GetType.ToString)
            Label15.Text = ""
        Catch s As Exception
            Label6.Text = "Error: " & (s.Message())
            Label15.Text = ""
        Finally
            SqlConn.Close()
        End Try
    End Sub
    'delete selected rows
    Protected Sub Delete_Bttn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles Delete_Bttn.Click
        Try
            For i = 0 To Grid1_Search.Rows.Count - 1
                If DirectCast(Grid1_Search.Rows(i).Cells(0).FindControl("cbd"), CheckBox).Checked Then
                    Dim CatNo As Integer = Nothing
                    CatNo = Grid1_Search.Rows(i).Cells(3).Text
                    'check cat record in acq and holdigns table
                    Dim str As Object = Nothing
                    Dim flag As Object = Nothing
                    str = "SELECT CAT_NO FROM ACQUISITIONS WHERE (CAT_NO ='" & Trim(CatNo) & "') "
                    Dim cmd1 As New SqlCommand(str, SqlConn)
                    If SqlConn.State = 0 Then
                        SqlConn.Open()
                    End If
                    flag = cmd1.ExecuteScalar
                    If flag <> Nothing Then
                        Label6.Text = "Alert: Catalog Record Reference Exists in ACQUISITION Table thus can not be deleted!"
                        Label15.Text = ""
                        SqlConn.Close()
                        Exit Sub
                    End If
                    SqlConn.Close()
                    'check in holding table
                    Dim str1 As Object = Nothing
                    Dim flag1 As Object = Nothing
                    str1 = "SELECT CAT_NO FROM HOLDINGS WHERE (CAT_NO ='" & Trim(CatNo) & "') "
                    Dim cmd2 As New SqlCommand(str1, SqlConn)
                    If SqlConn.State = 0 Then
                        SqlConn.Open()
                    End If
                    flag1 = cmd2.ExecuteScalar
                    If flag <> Nothing Then
                        Label6.Text = "Alert: Catalog Record Reference Exists in HOLDIGNS Table thus can not be deleted!"
                        Label15.Text = ""
                        SqlConn.Close()
                        Exit Sub
                    End If
                    SqlConn.Close()
                    If flag <> Nothing Or flag1 <> Nothing Then
                        Label6.Text = "This Record can not be deleted)"
                    Else
                        ' Dim COM_ID As Integer = Convert.ToInt32(Grid_Pub.Rows(i).Cells(6).Text)
                        'get cat record
                        Dim SQL As String = Nothing
                        SQL = "DELETE FROM CATS WHERE (CAT_NO ='" & Trim(CatNo) & "') "
                        SqlConn.Open()
                        Dim objCommand As New SqlCommand(SQL, SqlConn)
                        Dim da As New SqlDataAdapter(objCommand)
                        Dim ds As New DataSet
                        da.Fill(ds)
                        SqlConn.Close()
                    End If
                End If
            Next
            Search_Bttn_Click(sender, e)
            'UpdatePanel1.Update()
        Catch q As SqlException
            Label6.Text = "Database Error -SAVE: " & (q.Message() & ", " & q.Number & ", " & q.GetType.ToString)
            Label15.Text = ""
        Catch s As Exception
            Label6.Text = "Error: " & (s.Message())
            Label15.Text = ""
        Finally
            SqlConn.Close()
        End Try
    End Sub
    'delete cover photo from datbase in cat record
    Private Sub Delete_Photo_Bttn_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Delete_Photo_Bttn.Click
        Dim SQL As String = Nothing
        Dim da As SqlDataAdapter
        Dim cb As SqlCommandBuilder
        Dim ds As New DataSet
        Dim dt As New DataTable
        Dim thisTransaction As SqlClient.SqlTransaction
        If SqlConn.State = 0 Then
            SqlConn.Open()
        End If
        Try
            For i = 0 To Grid1_Search.Rows.Count - 1
                If DirectCast(Grid1_Search.Rows(i).Cells(0).FindControl("cbd"), CheckBox).Checked Then
                    Dim CatNo As Integer = Nothing
                    CatNo = Grid1_Search.Rows(i).Cells(3).Text

                    'UPDATE THE LIBRARY PROFILE  
                    If CatNo <> 0 Then
                        thisTransaction = SqlConn.BeginTransaction()
                        Dim intValue As Integer = 0
                        Dim objCommand As New SqlCommand
                        objCommand.Connection = SqlConn
                        objCommand.Transaction = thisTransaction
                        objCommand.CommandType = CommandType.Text
                        objCommand.CommandText = "UPDATE CATS SET DATE_MODIFIED =@DateModified, UPDATED_BY=@myLibCode, IP=@myIP, PHOTO=@myPhoto WHERE CAT_NO = @myCatNo"

                        objCommand.Parameters.Add("@myCatNo", SqlDbType.Int)
                        objCommand.Parameters("@myCatNo").Value = CatNo

                        objCommand.Parameters.Add("@DateModified", SqlDbType.DateTime)
                        objCommand.Parameters("@DateModified").Value = Now.Date

                        objCommand.Parameters.Add("@myLibCode", SqlDbType.NVarChar)
                        objCommand.Parameters("@myLibCode").Value = LibCode

                        objCommand.Parameters.Add("@myIP", SqlDbType.NVarChar)
                        objCommand.Parameters("@myIP").Value = Request.UserHostAddress.Trim

                        objCommand.Parameters.Add("@myPhoto", SqlDbType.Image)
                        objCommand.Parameters("@myPhoto").Value = System.DBNull.Value

                        objCommand.ExecuteNonQuery()

                        thisTransaction.Commit()
                        Label6.Text = ""
                        Label15.Text = "Cover Photo Deleted from Database!"
                        DirectCast(Grid1_Search.Rows(i).Cells(0).FindControl("cbd"), CheckBox).Checked = False
                    End If
                End If
            Next
        Catch q As SqlException
            thisTransaction.Rollback()
            Label6.Text = "Database Error -SAVE: " & (q.Message() & ", " & q.Number & ", " & q.GetType.ToString)
            Label15.Text = ""
        Catch ex As Exception
            Label6.Text = "Error: " & (ex.Message())
            Label15.Text = ""
        Finally
            SqlConn.Close()
        End Try
    End Sub
    'autocomplete method for title
    <System.Web.Script.Services.ScriptMethod(), _
  System.Web.Services.WebMethod()> _
    Public Shared Function SearchTitle(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchTitle(prefixText, count)
    End Function
    'autocomplete method for author
    <System.Web.Script.Services.ScriptMethod(), _
 System.Web.Services.WebMethod()> _
    Public Shared Function SearchAuthor(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchAuthor(prefixText, count)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchSubTitle(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchSubTitle(prefixText, count)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchConfName(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchConfName(prefixText, count)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchEdition(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchEdition(prefixText, count)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchPlace(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchPlace(prefixText, count)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchYear(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchYear(prefixText, count)
    End Function
    
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchSeries(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchSeries(prefixText, count)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchISBN(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchISBN(prefixText, count)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchSP(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchSPNo(prefixText, count)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchReport(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchReportNo(prefixText, count)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchManual(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchManualNo(prefixText, count)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchAct(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchActNo(prefixText, count)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchAccNo(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchAccNo(prefixText, count, LibCode)
    End Function
    <System.Web.Script.Services.ScriptMethod(), _
System.Web.Services.WebMethod()> _
    Public Shared Function SearchClass(ByVal prefixText As String, ByVal count As Integer) As List(Of String)
        Return EG4.PopulateCombo.SearchClassNo(prefixText, count, LibCode)
    End Function
    'save as new record  
    Protected Sub Acq_SaveNew_Bttn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles Acq_SaveNew_Bttn.Click
        Me.Acq_Save_Bttn_Click(sender, e)
    End Sub
    Dim Find As Integer = 0
    Public Sub DownloadRecord_ISBN()
        Try
            Find = 0
            Dim MYISBN As Object = Nothing
            If ComboBox2.Text <> "" Then
                Dim URLstr As String
                If ComboBox2.Text = "All" Then
                    Dim q As Integer
                    q = ComboBox2.Items.Count
                    q = q - 1
                    While q <> -1
                        Dim str11 As String
                        ComboBox2.SelectedIndex = q
                        str11 = ComboBox2.Text
                        If str11 <> "All" Then
                            If str11 = "http://catalog.loc.gov" Then
                                URLstr = str11 + "/cgi-bin/Pwebrecon.cgi?DB=local&Search_Arg=" & Replace(txt_Cat_ISBN.Text, "-", "") & "&Search_Code=GKEY%5E*&CNT=100&hist=1&type=quick"
                                GetData1(URLstr)
                            ElseIf str11 = "http://isbn.nu" Then
                                URLstr = str11 + "/" & Replace(txt_Cat_ISBN.Text, "-", "")
                                GetData2(URLstr)
                            ElseIf str11 = "http://worldcat.org" Then
                                URLstr = str11 + "/isbn/" & Replace(txt_Cat_ISBN.Text, "-", "")
                                GetData3(URLstr)
                            Else
                                URLstr = str11 + "/ISBN.aspx?ISBN=" & Replace(txt_Cat_ISBN.Text, "-", "")
                                GetData(URLstr)
                            End If
                        End If
                        q = q - 1
                        If Find = 1 Then
                            q = -1
                        ElseIf q = -1 And Find = 0 Then
                            'MsgBox("NO RECORD EXISTS")
                            'Call catAddNew()
                        End If
                    End While
                ElseIf ComboBox2.Text = "http://catalog.loc.gov" Then
                    URLstr = ComboBox2.Text + "/cgi-bin/Pwebrecon.cgi?DB=local&Search_Arg=" & Replace(txt_Cat_ISBN.Text, "-", "") & "&Search_Code=GKEY%5E*&CNT=100&hist=1&type=quick"
                    Find = 1
                    GetData1(URLstr)
                ElseIf ComboBox2.Text = "http://classic.isbn.nu" Then
                    URLstr = ComboBox2.Text + "/" & Replace(txt_Cat_ISBN.Text, "-", "")
                    Find = 1
                    GetData2(URLstr)
                ElseIf ComboBox2.Text = "http://worldcat.org" Then
                    URLstr = ComboBox2.Text + "/isbn/" & Replace(txt_Cat_ISBN.Text, "-", "")
                    Find = 1
                    GetData3(URLstr)
                Else
                    URLstr = ComboBox2.Text
                    URLstr = URLstr + "/ISBN.aspx?ISBN=" & Replace(txt_Cat_ISBN.Text, "-", "")
                    Find = 1
                    GetData(URLstr)
                End If
            Else
                'MsgBox("Please select URL from Drop-Down")
                'ComboBox2.Focus()
                Exit Sub
            End If
        Catch ex As Exception
            'MessageBox.Show(ex.Message, "eGranthalaya-Download Record")
        Finally

        End Try
    End Sub
    'downlaod record from eG3 OPAC
    Sub GetData(ByVal URLstr As String)
        Try

            Dim client As System.Net.WebClient = New System.Net.WebClient
            Dim prx As New System.Net.WebProxy
            prx = System.Net.WebProxy.GetDefaultProxy()
            prx.Credentials = CredentialCache.DefaultNetworkCredentials
            GlobalProxySelection.Select = prx
            Dim data As Stream = client.OpenRead(URLstr)
            Dim reader As StreamReader = New StreamReader(data)
            Dim str As String = ""
            str = reader.ReadToEnd

            Dim Tit1, Tit2, EXIST
            If InStr(UCase(str), "<EXIST>") <> 0 Then
                Tit1 = InStr(1, UCase(str), "<EXIST>", 1)
                Tit1 = Tit1 + Len("<EXIST>")
                Tit2 = InStr(Tit1, str, "</EXIST>", 1)
                EXIST = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
            End If

            If EXIST = "YES" Then
                Dim BIB_CODE, MAT_CODE, DOC_TYPE_CODE, STANDARD_NO
                Dim TITLE, SUB_TITLE, AUTHOR1, AUTHOR2, AUTHOR3, CORPORATE_AUTHOR As Object

                If InStr(UCase(str), "<BIB_CODE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<BIB_CODE>", 1)
                    Tit1 = Tit1 + Len("<BIB_CODE>")
                    Tit2 = InStr(Tit1, str, "</BIB_CODE>", 1)
                    BIB_CODE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    BIB_CODE = TrimX(BIB_CODE)
                Else
                    BIB_CODE = "M"
                End If

                If InStr(UCase(str), "<MAT_CODE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<MAT_CODE>", 1)
                    Tit1 = Tit1 + Len("<MAT_CODE>")
                    Tit2 = InStr(Tit1, str, "</MAT_CODE>", 1)
                    MAT_CODE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    MAT_CODE = TrimX(MAT_CODE)
                Else
                    MAT_CODE = "B"
                End If

                If InStr(UCase(str), "<DOC_TYPE_CODE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<DOC_TYPE_CODE>", 1)
                    Tit1 = Tit1 + Len("<DOC_TYPE_CODE>")
                    Tit2 = InStr(Tit1, str, "</DOC_TYPE_CODE>", 1)
                    DOC_TYPE_CODE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    DOC_TYPE_CODE = TrimX(DOC_TYPE_CODE)
                Else
                    DOC_TYPE_CODE = "BK"
                End If

                If InStr(UCase(str), "<STANDARD_NO>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<STANDARD_NO>", 1)
                    Tit1 = Tit1 + Len("<STANDARD_NO>")
                    Tit2 = InStr(Tit1, str, "</STANDARD_NO>", 1)
                    STANDARD_NO = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    STANDARD_NO = TrimX(STANDARD_NO)
                Else
                    STANDARD_NO = ""
                End If

                If InStr(UCase(str), "<CTITLE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<CTITLE>", 1)
                    Tit1 = Tit1 + Len("<CTITLE>")
                    Tit2 = InStr(Tit1, str, "</CTITLE>", 1)
                    TITLE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    TITLE = TrimAll(TITLE)
                    TITLE = Replace(TITLE, ".", " ")
                    If InStr(TITLE, ":") <> 0 Then
                        Dim SplitTitle As Object = Nothing
                        SplitTitle = Split(TITLE, ":")
                        TITLE = SplitTitle(0)
                        SUB_TITLE = SplitTitle(1)
                    End If
                Else
                    TITLE = ""
                End If

                If SUB_TITLE = "" Then
                    If InStr(UCase(str), "<SUB_TITLE>") <> 0 Then
                        Tit1 = InStr(1, UCase(str), "<SUB_TITLE>", 1)
                        Tit1 = Tit1 + Len("<SUB_TITLE>")
                        Tit2 = InStr(Tit1, str, "</SUB_TITLE>", 1)
                        SUB_TITLE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                        SUB_TITLE = TrimAll(SUB_TITLE)
                    Else
                        SUB_TITLE = ""
                    End If
                End If

                If InStr(UCase(str), "<AUTHOR1>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<AUTHOR1>", 1)
                    Tit1 = Tit1 + Len("<AUTHOR1>")
                    Tit2 = InStr(Tit1, str, "</AUTHOR1>", 1)
                    AUTHOR1 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    AUTHOR1 = TrimAll(AUTHOR1)
                Else
                    AUTHOR1 = ""
                End If

                If InStr(UCase(str), "<AUTHOR2>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<AUTHOR2>", 1)
                    Tit1 = Tit1 + Len("<AUTHOR2>")
                    Tit2 = InStr(Tit1, str, "</AUTHOR2>", 1)
                    AUTHOR2 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    AUTHOR2 = TrimAll(AUTHOR2)
                Else
                    AUTHOR2 = ""
                End If

                If InStr(UCase(str), "<AUTHOR3>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<AUTHOR3>", 1)
                    Tit1 = Tit1 + Len("<AUTHOR3>")
                    Tit2 = InStr(Tit1, str, "</AUTHOR3>", 1)
                    AUTHOR3 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    AUTHOR3 = TrimAll(AUTHOR3)
                Else
                    AUTHOR3 = ""
                End If

                If InStr(UCase(str), "<CORPORATE_AUTHOR>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<CORPORATE_AUTHOR>", 1)
                    Tit1 = Tit1 + Len("<CORPORATE_AUTHOR>")
                    Tit2 = InStr(Tit1, str, "</CORPORATE_AUTHOR>", 1)
                    CORPORATE_AUTHOR = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    CORPORATE_AUTHOR = TrimAll(CORPORATE_AUTHOR)
                Else
                    CORPORATE_AUTHOR = ""
                End If

                Dim EDITOR, EDITION, PLACE_OF_PUB, PUB_ID, YEAR_OF_PUB As Object
                If InStr(UCase(str), "<EDITOR>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<EDITOR>", 1)
                    Tit1 = Tit1 + Len("<EDITOR>")
                    Tit2 = InStr(Tit1, str, "</EDITOR>", 1)
                    EDITOR = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    EDITOR = TrimAll(EDITOR)
                Else
                    EDITOR = ""
                End If

                If InStr(UCase(str), "<EDITION>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<EDITION>", 1)
                    Tit1 = Tit1 + Len("<EDITION>")
                    Tit2 = InStr(Tit1, str, "</EDITION>", 1)
                    EDITION = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    EDITION = TrimAll(EDITION)
                Else
                    EDITION = ""
                End If

                If InStr(UCase(str), "<PLACE_OF_PUB>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<PLACE_OF_PUB>", 1)
                    Tit1 = Tit1 + Len("<PLACE_OF_PUB>")
                    Tit2 = InStr(Tit1, str, "</PLACE_OF_PUB>", 1)
                    PLACE_OF_PUB = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    PLACE_OF_PUB = TrimAll(PLACE_OF_PUB)
                Else
                    PLACE_OF_PUB = ""
                End If

                If InStr(UCase(str), "<YEAR_OF_PUB>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<YEAR_OF_PUB>", 1)
                    Tit1 = Tit1 + Len("<YEAR_OF_PUB>")
                    Tit2 = InStr(Tit1, str, "</YEAR_OF_PUB>", 1)
                    YEAR_OF_PUB = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    YEAR_OF_PUB = TrimX(YEAR_OF_PUB)
                Else
                    YEAR_OF_PUB = Now.Year
                End If

                Dim SERIES_TITLE, SUB_ID, KEYWORDS, DATE_ADDED As Object
                If InStr(UCase(str), "<SERIES_TITLE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<SERIES_TITLE>", 1)
                    Tit1 = Tit1 + Len("<SERIES_TITLE>")
                    Tit2 = InStr(Tit1, str, "</SERIES_TITLE>", 1)
                    SERIES_TITLE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    SERIES_TITLE = TrimAll(SERIES_TITLE)
                Else
                    SERIES_TITLE = ""
                End If

                If InStr(UCase(str), "<KEYWORDS>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<KEYWORDS>", 1)
                    Tit1 = Tit1 + Len("<KEYWORDS>")
                    Tit2 = InStr(Tit1, str, "</KEYWORDS>", 1)
                    KEYWORDS = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    KEYWORDS = Replace(KEYWORDS, ";", "; ")
                    KEYWORDS = TrimAll(KEYWORDS)
                Else
                    KEYWORDS = ""
                End If

                Dim CAT_LEVEL, MULTI_VOL, TOTAL_VOL As Object
                If InStr(UCase(str), "<MULTI_VOL>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<MULTI_VOL>", 1)
                    Tit1 = Tit1 + Len("<MULTI_VOL>")
                    Tit2 = InStr(Tit1, str, "</MULTI_VOL>", 1)
                    MULTI_VOL = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    MULTI_VOL = "N"
                End If

                If InStr(UCase(str), "<TOTAL_VOL>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<TOTAL_VOL>", 1)
                    Tit1 = Tit1 + Len("<TOTAL_VOL>")
                    Tit2 = InStr(Tit1, str, "</TOTAL_VOL>", 1)
                    TOTAL_VOL = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    TOTAL_VOL = ""
                End If

                Dim PUB_NAME, LIB_CODE, CONF_NAME As Object
                If InStr(UCase(str), "<PUB_NAME>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<PUB_NAME>", 1)
                    Tit1 = Tit1 + Len("<PUB_NAME>")
                    Tit2 = InStr(Tit1, str, "</PUB_NAME>", 1)
                    PUB_NAME = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    PUB_NAME = TrimAll(PUB_NAME)
                Else
                    PUB_NAME = ""
                End If

                If InStr(UCase(str), "<CONF_NAME>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<CONF_NAME>", 1)
                    Tit1 = Tit1 + Len("<CONF_NAME>")
                    Tit2 = InStr(Tit1, str, "</CONF_NAME>", 1)
                    CONF_NAME = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    CONF_NAME = TrimAll(CONF_NAME)
                Else
                    CONF_NAME = ""
                End If

                Dim LANG_CODE
                If InStr(UCase(str), "<LANG_CODE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<LANG_CODE>", 1)
                    Tit1 = Tit1 + Len("<LANG_CODE>")
                    Tit2 = InStr(Tit1, str, "</LANG_CODE>", 1)
                    LANG_CODE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    LANG_CODE = "ENG"
                End If

                Dim TRANSLATOR As Object = Nothing
                If InStr(UCase(str), "<TRANSLATOR>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<TRANSLATOR>", 1)
                    Tit1 = Tit1 + Len("<TRANSLATOR>")
                    Tit2 = InStr(Tit1, str, "</TRANSLATOR>", 1)
                    TRANSLATOR = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    TRANSLATOR = ""
                End If

                Dim ILLUSTRATOR As Object = Nothing
                If InStr(UCase(str), "<ILLUSTRATOR>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<ILLUSTRATOR>", 1)
                    Tit1 = Tit1 + Len("<ILLUSTRATOR>")
                    Tit2 = InStr(Tit1, str, "</ILLUSTRATOR>", 1)
                    ILLUSTRATOR = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    ILLUSTRATOR = ""
                End If

                Dim SERIES_EDITOR As Object = Nothing
                If InStr(UCase(str), "<SERIES_EDITOR>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<SERIES_EDITOR>", 1)
                    Tit1 = Tit1 + Len("<SERIES_EDITOR>")
                    Tit2 = InStr(Tit1, str, "</SERIES_EDITOR>", 1)
                    SERIES_EDITOR = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    SERIES_EDITOR = ""
                End If

                Dim NOTE As Object = Nothing
                If InStr(UCase(str), "<NOTE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<NOTE>", 1)
                    Tit1 = Tit1 + Len("<NOTE>")
                    Tit2 = InStr(Tit1, str, "</NOTE>", 1)
                    NOTE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    NOTE = ""
                End If

                Dim ABSTRACT As Object = Nothing
                If InStr(UCase(str), "<ABSTRACT>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<ABSTRACT>", 1)
                    Tit1 = Tit1 + Len("<ABSTRACT>")
                    Tit2 = InStr(Tit1, str, "</ABSTRACT>", 1)
                    ABSTRACT = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    ABSTRACT = ""
                End If

                Dim SP_NO As Object = Nothing
                If InStr(UCase(str), "<SP_NO>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<SP_NO>", 1)
                    Tit1 = Tit1 + Len("<SP_NO>")
                    Tit2 = InStr(Tit1, str, "</SP_NO>", 1)
                    SP_NO = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    SP_NO = ""
                End If

                Dim REPORT_NO As Object = Nothing
                If InStr(UCase(str), "<REPORT_NO>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<REPORT_NO>", 1)
                    Tit1 = Tit1 + Len("<REPORT_NO>")
                    Tit2 = InStr(Tit1, str, "</REPORT_NO>", 1)
                    REPORT_NO = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    REPORT_NO = ""
                End If

                Dim MANUAL_NO As Object = Nothing
                If InStr(UCase(str), "<MANUAL_NO>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<MANUAL_NO>", 1)
                    Tit1 = Tit1 + Len("<MANUAL_NO>")
                    Tit2 = InStr(Tit1, str, "</MANUAL_NO>", 1)
                    MANUAL_NO = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    MANUAL_NO = ""
                End If

                Dim REFERENCE_NO As Object = Nothing
                If InStr(UCase(str), "<REFERENCE_NO>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<REFERENCE_NO>", 1)
                    Tit1 = Tit1 + Len("<REFERENCE_NO>")
                    Tit2 = InStr(Tit1, str, "</REFERENCE_NO>", 1)
                    REFERENCE_NO = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    REFERENCE_NO = ""
                End If

                Dim URL As Object = Nothing
                If InStr(UCase(str), "<URL>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<URL>", 1)
                    Tit1 = Tit1 + Len("<URL>")
                    Tit2 = InStr(Tit1, str, "</URL>", 1)
                    URL = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    URL = ""
                End If

                Dim REPRINTS As Object = Nothing
                If InStr(UCase(str), "<REPRINTS>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<REPRINTS>", 1)
                    Tit1 = Tit1 + Len("<REPRINTS>")
                    Tit2 = InStr(Tit1, str, "</REPRINTS>", 1)
                    REPRINTS = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    REPRINTS = ""
                End If

                Dim VAR_TITLE As Object = Nothing
                If InStr(UCase(str), "<VAR_TITLE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<VAR_TITLE>", 1)
                    Tit1 = Tit1 + Len("<VAR_TITLE>")
                    Tit2 = InStr(Tit1, str, "</VAR_TITLE>", 1)
                    VAR_TITLE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    VAR_TITLE = ""
                End If

                Dim TR_FROM As Object = Nothing
                If InStr(UCase(str), "<TR_FROM>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<TR_FROM>", 1)
                    Tit1 = Tit1 + Len("<TR_FROM>")
                    Tit2 = InStr(Tit1, str, "</TR_FROM>", 1)
                    TR_FROM = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    TR_FROM = ""
                End If

                'WRITE VALUE IN TEXT BOXES
                DDL_Lang.SelectedValue = LANG_CODE
                DDL_YesNo.SelectedValue = MULTI_VOL
                txt_Cat_TotalVol.Text = TOTAL_VOL
                If TR_ISBN.Visible = True Then
                    txt_Cat_ISBN.Text = STANDARD_NO
                End If
                If TR_SPNo.Visible = True Then
                    txt_Cat_SPNo.Text = SP_NO
                End If
                If TR_ManualNo.Visible = True Then
                    txt_Cat_ManualNo.Text = MANUAL_NO
                End If
                If TR_ReportNo.Visible = True Then
                    txt_Cat_ReportNo.Text = REPORT_NO
                End If
                txt_Cat_Title.Text = TITLE
                If TR_SubTitle.Visible = True Then
                    txt_Cat_SubTitle.Text = SUB_TITLE
                End If
                If TR_VarTitle.Visible = True Then
                    txt_Cat_VarTitle.Text = VAR_TITLE
                End If
                If TR_ConfName.Visible = True Then
                    txt_Cat_ConfName.Text = CONF_NAME
                End If

                If TR_Author.Visible = True Then
                    txt_Cat_Author1.Text = AUTHOR1
                    txt_Cat_Author2.Text = AUTHOR2
                    txt_Cat_Author3.Text = AUTHOR3
                End If
                If TR_Editor.Visible = True Then
                    txt_Cat_Editor.Text = EDITOR
                End If
                If TR_Translator.Visible = True Then
                    txt_Cat_Translator.Text = TRANSLATOR
                End If
                If TR_Illustrator.Visible = True Then
                    txt_Cat_Illustrator.Text = ILLUSTRATOR
                End If

                If TR_CorpAuthor.Visible = True Then
                    txt_Cat_CorpAuthor.Text = CORPORATE_AUTHOR
                End If
                If TR_Edition.Visible = True Then
                    txt_Cat_Edition.Text = EDITION
                End If
                If TR_Reprint.Visible = True Then
                    txt_Cat_Reprint.Text = REPRINTS
                End If
                If TR_Publisher.Visible = True Then
                    'Check Duplicate User Code
                    Dim str2 As Object = Nothing
                    Dim flag As Object = Nothing
                    str2 = "SELECT PUB_ID FROM PUBLISHERS WHERE (PUB_NAME ='" & Trim(PUB_NAME) & "') "
                    Dim cmd1 As New SqlCommand(str2, SqlConn)
                    SqlConn.Open()
                    flag = cmd1.ExecuteScalar
                    SqlConn.Close()
                    If flag <> Nothing Then
                        Pub_ComboBox.Items.FindByText(PUB_NAME).Selected = True
                    Else
                        Pub_ComboBox.ClearSelection()
                        Pub_ComboBox.Items.Insert(0, New ListItem(PUB_NAME))
                        Pub_ComboBox.DataBind()
                        Pub_ComboBox.Text = PUB_NAME
                    End If
                End If
                If TR_Place.Visible = True Then
                    txt_Cat_Place.Text = PLACE_OF_PUB
                End If
                If TR_Year.Visible = True Then
                    txt_Cat_Year.Text = YEAR_OF_PUB
                End If
                If TR_Series.Visible = True Then
                    txt_Cat_Series.Text = SERIES_TITLE
                End If
                If TR_SeriesEditor.Visible = True Then
                    txt_Cat_SeriesEditor.Text = SERIES_EDITOR
                End If
                If TR_Note.Visible = True Then
                    txt_Cat_Note.Text = NOTE
                End If
                If TR_Absract.Visible = True Then
                    txt_Cat_Abstract.Text = ABSTRACT
                End If
                If TR_ReferenceNo.Visible = True Then
                    txt_Cat_ReferenceNo.Text = REFERENCE_NO
                End If
                If TR_URL.Visible = True Then
                    txt_Cat_URL.Text = URL
                End If
                If TR_TranslatedFrom.Visible = True Then
                    txt_Cat_TrFrom.Text = TR_FROM
                End If

                If TR_Keyword.Visible = True Then
                    txt_Cat_Keywords.Text = KEYWORDS
                End If
                If TR_Absract.Visible = True Then
                    txt_Cat_Abstract.Text = ""
                End If

                Find = 1
            Else
                If Find <> 0 Then
                    'MsgBox("NO RECORD EXISTS")
                End If
            End If
        Catch s As Exception
            'Label6.Text = (s.Message + "eGranthalaya-Download Record-from eG3 OPAC..")
            'Label15.Text = ""
        Finally

        End Try

    End Sub
    'download recrod from http://catalog.loc.gov
    Sub GetData1(ByVal URLstr As String)
        Try
            'Get HTML data
            Dim client As WebClient = New WebClient()
            Dim pry As New WebProxy
            pry = WebProxy.GetDefaultProxy()
            pry.Credentials = CredentialCache.DefaultNetworkCredentials
            GlobalProxySelection.Select = pry
            Dim data As Stream = client.OpenRead(URLstr)
            Dim reader As StreamReader = New StreamReader(data)
            Dim str As String = ""
            str = reader.ReadToEnd
            str = Replace(str, """", "'")
            str = Replace(Replace(str, Chr(10), ""), Chr(13), "")
            str = Replace(str, "&rsquo;", "'")

            Dim Tit1, Tit2, EXIST, URL, t1, FORMAT_CODE, DOC_TYPE_CODE, PERSONAL_NAME, TITLE, SUB_TITLE, EDITION
            If InStr(str, "<div class='nohits'><div class='nohits-left'><strong>") <> 0 Then
                Tit1 = InStr(1, str, "<div class='nohits'><div class='nohits-left'><strong>", 1)
                Tit1 = Tit1 + Len("<div class='nohits'><div class='nohits-left'><strong>")
                Tit2 = InStr(Tit1, str, "</strong>", 1)
                EXIST = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
            End If

            If EXIST = "Your search found no results" Then
                If Find <> 0 Then
                    'MsgBox("NO RECORD EXISTS")
                    'Call catAddNew()
                End If
            Else
                If InStr(str, "<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>LCCN Permalink:</TH><TD>") <> 0 Then
                    Tit1 = InStr(1, str, "<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>LCCN Permalink:</TH><TD>", 1)
                    Tit1 = Tit1 + Len("<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>LCCN Permalink:</TH><TD>")
                    Tit2 = InStr(Tit1, str, "</TD></TR>", 1)
                    URL = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    Tit1 = InStr(1, URL, ">", 1)
                    Tit1 = Tit1 + Len(">")
                    Tit2 = InStr(Tit1, URL, "</a>", 1)
                    URL = Trim(Mid(URL, Tit1, (Tit2 - Tit1)))
                    URL = TrimX(URL)
                Else
                    URL = ""
                End If

                If InStr(str, "<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Main Title:</TH><TD dir='ltr'>") <> 0 Then
                    Tit1 = InStr(1, str, "<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Main Title:</TH><TD dir='ltr'>", 1)
                    Tit1 = Tit1 + Len("<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Main Title:</TH><TD dir='ltr'>")
                    Tit2 = InStr(Tit1, str, "</TD></TR>", 1)
                    t1 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))

                    Tit1 = InStr(1, t1, "", 1)
                    Tit1 = Tit1 + Len("")
                    Tit2 = InStr(Tit1, t1, "/", 1)
                    TITLE = Trim(Mid(t1, Tit1, (Tit2 - Tit1)))
                    TITLE = TrimAll(TITLE)
                    If InStr(TITLE, ":") <> 0 Then
                        Dim SplitTitle As Object = Nothing
                        SplitTitle = Split(TITLE, ":")
                        TITLE = SplitTitle(0)
                        SUB_TITLE = SplitTitle(1)
                    Else
                        SUB_TITLE = ""
                    End If
                Else
                    TITLE = ""
                End If

                Dim f
                Dim AUTHOR1 As Object
                If InStr(str, "<TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Personal Name:</TH><TD dir='ltr'>") <> 0 Then
                    Tit1 = InStr(1, str, "<TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Personal Name:</TH><TD dir='ltr'>", 1)
                    Tit1 = Tit1 + Len("<TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Personal Name:</TH><TD dir='ltr'>")
                    Tit2 = InStr(Tit1, str, "</TD></TR>", 1)
                    AUTHOR1 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    Tit1 = InStr(1, AUTHOR1, ">", 1)
                    Tit1 = Tit1 + Len(">")
                    Tit2 = InStr(Tit1, AUTHOR1, "</A>", 1)
                    AUTHOR1 = Trim(Mid(AUTHOR1, Tit1, (Tit2 - Tit1)))
                    f = AUTHOR1.ToString.Substring(Len(AUTHOR1) - 1)
                    If f = "-" Then
                        AUTHOR1 = AUTHOR1.ToString.Remove(Len(AUTHOR1) - 7)
                    End If
                    AUTHOR1 = Replace(AUTHOR1, ".", " ")
                    AUTHOR1 = TrimAll(AUTHOR1)
                Else
                    AUTHOR1 = ""
                End If

                If InStr(str, "<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Edition Information:</TH><TD dir='ltr'>") <> 0 Then
                    Tit1 = InStr(1, str, "<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Edition Information:</TH><TD dir='ltr'>", 1)
                    Tit1 = Tit1 + Len("<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Edition Information:</TH><TD dir='ltr'>")
                    Tit2 = InStr(Tit1, str, "</TD></TR>", 1)
                    EDITION = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    EDITION = ""
                End If

                Dim PUB_NAME, PLACE_OF_PUB, YEAR_OF_PUB, STANDARD_NO As Object
                Dim y As String
                If InStr(str, "<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Published/Created:</TH><TD dir='ltr'>") <> 0 Then
                    Tit1 = InStr(1, str, "<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Published/Created:</TH><TD dir='ltr'>", 1)
                    Tit1 = Tit1 + Len("<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>Published/Created:</TH><TD dir='ltr'>")
                    Tit2 = InStr(Tit1, str, "</TD></TR>", 1)
                    t1 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))

                    Tit1 = InStr(1, t1, "", 1)
                    Tit1 = Tit1 + Len("")
                    Tit2 = InStr(Tit1, t1, ":", 1)
                    PLACE_OF_PUB = Trim(Mid(t1, Tit1, (Tit2 - Tit1)))

                    Tit1 = InStr(1, t1, ":", 1)
                    Tit1 = Tit1 + Len(":")
                    Tit2 = InStr(Tit1, t1, ",", 1)
                    PUB_NAME = Trim(Mid(t1, Tit1, (Tit2 - Tit1)))
                    PUB_NAME = Replace(PUB_NAME, ".", " ")
                    PUB_NAME = TrimAll(PUB_NAME)
                    y = t1.ToString.Substring(Len(t1) - 5, 4)

                    If y.Length = 4 Then
                        YEAR_OF_PUB = Trim(y)
                    Else
                        YEAR_OF_PUB = Trim(y.Substring(1, 4))
                    End If
                Else
                    PLACE_OF_PUB = ""
                    PUB_NAME = ""
                    YEAR_OF_PUB = Now.Year
                End If

                Dim std As String
                If InStr(str, "<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>ISBN:</TH><TD dir='ltr'>") <> 0 Then
                    Tit1 = InStr(1, str, "<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>ISBN:</TH><TD dir='ltr'>", 1)
                    Tit1 = Tit1 + Len("<TR><TH NOWRAP ALIGN=RIGHT VALIGN=TOP>ISBN:</TH><TD dir='ltr'>")
                    Tit2 = InStr(Tit1, str, "</TD></TR>", 1)
                    std = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    If std.Length = 10 Or std.Length = 13 Then
                        STANDARD_NO = Trim(std)
                    Else
                        Tit1 = InStr(1, std, "", 1)
                        Tit1 = Tit1 + Len("")
                        Tit2 = InStr(Tit1, std, "(", 1)
                        STANDARD_NO = Trim(Mid(std, Tit1, (Tit2 - Tit1)))
                    End If
                    If Trim(STANDARD_NO) <> Trim(txt_Cat_ISBN.Text) Then
                        STANDARD_NO = Trim(txt_Cat_ISBN.Text)
                    End If
                Else
                    'STANDARD_NO = ""
                End If

                DDL_Lang.SelectedValue = "ENG"
                DDL_YesNo.SelectedValue = "N"
                txt_Cat_TotalVol.Text = ""

                txt_Cat_Title.Text = TITLE
                If TR_SubTitle.Visible = True Then
                    txt_Cat_SubTitle.Text = SUB_TITLE
                End If

                If TR_Author.Visible = True Then
                    txt_Cat_Author1.Text = AUTHOR1
                End If

                If TR_Edition.Visible = True Then
                    txt_Cat_Edition.Text = EDITION
                End If

                If TR_Publisher.Visible = True Then
                    'Check Duplicate User Code
                    Dim str2 As Object = Nothing
                    Dim flag As Object = Nothing
                    str2 = "SELECT PUB_ID FROM PUBLISHERS WHERE (PUB_NAME ='" & Trim(PUB_NAME) & "') "
                    Dim cmd1 As New SqlCommand(str2, SqlConn)
                    SqlConn.Open()
                    flag = cmd1.ExecuteScalar
                    SqlConn.Close()
                    If flag <> Nothing Then
                        Pub_ComboBox.Items.FindByText(PUB_NAME).Selected = True
                    Else
                        Pub_ComboBox.ClearSelection()
                        Pub_ComboBox.Items.Insert(0, New ListItem(PUB_NAME))
                        Pub_ComboBox.DataBind()
                        Pub_ComboBox.Text = PUB_NAME
                    End If
                End If
                If TR_Place.Visible = True Then
                    txt_Cat_Place.Text = PLACE_OF_PUB
                End If
                If TR_Year.Visible = True Then
                    txt_Cat_Year.Text = YEAR_OF_PUB
                End If

                If TR_URL.Visible = True Then
                    txt_Cat_URL.Text = URL
                End If
                Find = 1
            End If
        Catch s As Exception
            'MessageBox.Show(s.Message, "eGranthalaya-Download Record from Catalog.loc.gov")
        Finally

        End Try
    End Sub
    'download record from http://isbn.nu
    Sub GetData2(ByVal URLstr As String)
        Try
            ' Get HTML data
            Dim client As WebClient = New WebClient()
            Dim pry As New WebProxy
            pry = WebProxy.GetDefaultProxy()
            pry.Credentials = CredentialCache.DefaultNetworkCredentials
            GlobalProxySelection.Select = pry
            Dim data As Stream = client.OpenRead(URLstr)
            Dim reader As StreamReader = New StreamReader(data)
            Dim str As String = ""
            str = reader.ReadToEnd
            str = Replace(str, """", "'")
            str = Replace(Replace(str, Chr(10), ""), Chr(13), "")
            str = Replace(str, "&rsquo;", "'")

            Dim Tit1, Tit2, EXIST, URL, t1, t2, FORMAT_CODE, DOC_TYPE_CODE, PERSONAL_NAME, Title, Sub_Title, EDITION
            If InStr(LCase(str), "<title>") <> 0 Then
                Tit1 = InStr(1, LCase(str), "<title>", 1)
                Tit1 = Tit1 + Len("<title>")
                Tit2 = InStr(Tit1, str, "</title>", 1)
                EXIST = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
            End If

            If EXIST = "No Title Found" Or EXIST = "Invalid ISBN or EAN" Then
                If Find <> 0 Then
                    'MsgBox("NO RECORD EXISTS")
                    'Call catAddNew()
                End If
            Else
                If InStr(str, "<div id='cmpruled'>") <> 0 Then
                    Tit1 = InStr(1, str, "<div id='cmpruled'>", 1)
                    Tit1 = Tit1 + Len("<div id='cmpruled'>")
                    Tit2 = InStr(Tit1, str, "<BR>", 1)
                    URL = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    Tit1 = InStr(1, URL, ">", 1)
                    Tit1 = Tit1 + Len(">")
                    Tit2 = InStr(Tit1, URL, "</a>", 1)
                    URL = Trim(Mid(URL, Tit1, (Tit2 - Tit1)))
                    URL = TrimX(URL)
                Else
                    URL = ""
                End If

                ' DOC_TYPE_CODE = "BK"
                ' FORMAT_CODE = "PT"

                If InStr(str, "<p class='bodytext'><span class='bolddarkbody'><b>") <> 0 Then
                    Tit1 = InStr(1, str, "<p class='bodytext'><span class='bolddarkbody'><b>", 1)
                    Tit1 = Tit1 + Len("<p class='bodytext'><span class='bolddarkbody'><b>")
                    Tit2 = InStr(Tit1, str, "</b>", 1)
                    Title = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    Title = TrimAll(Title)
                    If InStr(Title, ":") <> 0 Then
                        Dim SplitTitle As Object = Nothing
                        SplitTitle = Split(Title, ":")
                        Title = SplitTitle(0)
                        Sub_Title = SplitTitle(1)
                    Else
                        Sub_Title = ""
                    End If
                Else
                    Title = ""
                End If

                Dim AUTHORS As String
                Dim AUTHOR1, AUTHOR2, AUTHOR3
                Dim at1 As String
                If InStr(str, "<div class='bi_col_title'>Authors</div><div class='bi_col_value'>") <> 0 Then
                    Tit1 = InStr(1, str, "<div class='bi_col_title'>Authors</div><div class='bi_col_value'>", 1)
                    Tit1 = Tit1 + Len("<div class='bi_col_title'>Authors</div><div class='bi_col_value'>")
                    Tit2 = InStr(Tit1, str, "<div class='clear_space'>", 1)
                    at1 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))

                    Tit1 = InStr(1, at1, "</a>", 1)
                    Tit1 = Tit1 + Len("</a>")
                    Tit2 = InStr(Tit1, at1, "<br>", 1)
                    t2 = Mid(at1, Tit1, (Tit2 - Tit1))

                    If t2 <> Nothing Then
                        at1 = at1.Remove(Tit1, Len(t2) - 1)
                        at1 = Replace(at1, " ", "")
                    End If

                    While at1 <> "</div>"
                        Tit1 = InStr(1, at1, ">", 1)
                        Tit1 = Tit1 + Len(">")
                        Tit2 = InStr(Tit1, at1, "</a><br>", 1)
                        t2 = Trim(Mid(at1, Tit1, (Tit2 - Tit1)))
                        Tit2 = Tit2 + 7
                        at1 = at1.Substring(Tit2)
                        If at1 = "</div>" Then
                            AUTHORS = AUTHORS + t2
                        Else
                            AUTHORS = AUTHORS + t2 + ","
                        End If
                    End While
                Else
                    AUTHOR1 = ""
                    AUTHOR2 = ""
                    AUTHOR3 = ""
                End If
                If AUTHORS <> Nothing Then
                    Dim auth() As String = AUTHORS.Split(",")

                    Dim i As Integer
                    i = auth.Length
                    If i > 3 Then
                        i = 3
                    End If
                    If i = 3 Then
                        AUTHOR1 = auth(0)
                        AUTHOR1 = Replace(AUTHOR1, ".", " ")
                        AUTHOR1 = TrimAll(AUTHOR1)

                        AUTHOR2 = auth(1)
                        AUTHOR2 = Replace(AUTHOR2, ".", " ")
                        AUTHOR2 = TrimAll(AUTHOR2)

                        AUTHOR3 = auth(2)
                        AUTHOR3 = Replace(AUTHOR3, ".", " ")
                        AUTHOR3 = TrimAll(AUTHOR3)
                    ElseIf i = 2 Then
                        AUTHOR1 = auth(0)
                        AUTHOR1 = Replace(AUTHOR1, ".", " ")
                        AUTHOR1 = TrimAll(AUTHOR1)

                        AUTHOR2 = auth(1)
                        AUTHOR2 = Replace(AUTHOR2, ".", " ")
                        AUTHOR2 = TrimAll(AUTHOR2)
                        AUTHOR3 = ""
                    ElseIf i = 1 Then
                        AUTHOR1 = auth(0)
                        AUTHOR1 = Replace(AUTHOR1, ".", " ")
                        AUTHOR1 = TrimAll(AUTHOR1)
                        AUTHOR2 = ""
                        AUTHOR3 = ""
                    End If
                Else
                    AUTHOR1 = ""
                    AUTHOR2 = ""
                    AUTHOR3 = ""
                End If

                If InStr(str, "<div class='bi_col_title'>Edition</div><div class='bi_col_value'>") <> 0 Then
                    Tit1 = InStr(1, str, "<div class='bi_col_title'>Edition</div><div class='bi_col_value'>", 1)
                    Tit1 = Tit1 + Len("<div class='bi_col_title'>Edition</div><div class='bi_col_value'>")
                    Tit2 = InStr(Tit1, str, "</div>", 1)
                    EDITION = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    EDITION = TrimAll(EDITION)
                Else
                    EDITION = ""
                End If

                Dim PUB_NAME, YEAR_OF_PUB, STANDARD_NO
                If InStr(str, "<div class='bi_col_title'>Publisher</div><div class='bi_col_value'>") <> 0 Then
                    Tit1 = InStr(1, str, "<div class='bi_col_title'>Publisher</div><div class='bi_col_value'>", 1)
                    Tit1 = Tit1 + Len("<div class='bi_col_title'>Publisher</div><div class='bi_col_value'>")
                    Tit2 = InStr(Tit1, str, "</div>", 1)
                    PUB_NAME = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    PUB_NAME = Replace(PUB_NAME, ".", " ")
                    PUB_NAME = TrimAll(PUB_NAME)
                Else
                    PUB_NAME = ""
                End If

                If InStr(str, "<div class='bi_col_title'>Publication date</div><div class='bi_col_value'>") <> 0 Then
                    Tit1 = InStr(1, str, "<div class='bi_col_title'>Publication date</div><div class='bi_col_value'>", 1)
                    Tit1 = Tit1 + Len("<div class='bi_col_title'>Publication date</div><div class='bi_col_value'>")
                    Tit2 = InStr(Tit1, str, "</div>", 1)
                    YEAR_OF_PUB = Trim(Mid(str, Tit1, (Tit2 - Tit1)))

                    Tit1 = InStr(1, YEAR_OF_PUB, ",", 1)
                    Tit1 = Tit1 + Len(",")
                    Tit2 = Len(YEAR_OF_PUB) + 1
                    YEAR_OF_PUB = Trim(Mid(YEAR_OF_PUB, Tit1, (Tit2 - Tit1)))
                Else
                    YEAR_OF_PUB = Now.Year
                End If

                Dim DESCRIPTION
                If InStr(str, "<b>Product Description</b>:") <> 0 Then
                    Tit1 = InStr(1, str, "<b>Product Description</b>:", 1)
                    Tit1 = Tit1 + Len("<b>Product Description</b>:")
                    Tit2 = InStr(Tit1, str, ".", 1)
                    DESCRIPTION = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    DESCRIPTION = Replace(DESCRIPTION, "<p class='bodytext'>", "")
                    DESCRIPTION = TrimAll(DESCRIPTION)
                Else
                    DESCRIPTION = ""
                End If

                txt_Cat_Title.Text = Title
                If TR_SubTitle.Visible = True Then
                    txt_Cat_SubTitle.Text = Sub_Title
                End If

                If TR_Author.Visible = True Then
                    txt_Cat_Author1.Text = AUTHOR1
                    txt_Cat_Author2.Text = AUTHOR2
                    txt_Cat_Author3.Text = AUTHOR3
                End If

                If TR_Edition.Visible = True Then
                    txt_Cat_Edition.Text = EDITION
                End If

                If TR_Publisher.Visible = True Then
                    'Check Duplicate User Code
                    Dim str2 As Object = Nothing
                    Dim flag As Object = Nothing
                    str2 = "SELECT PUB_ID FROM PUBLISHERS WHERE (PUB_NAME ='" & Trim(PUB_NAME) & "') "
                    Dim cmd1 As New SqlCommand(str2, SqlConn)
                    SqlConn.Open()
                    flag = cmd1.ExecuteScalar
                    SqlConn.Close()
                    If flag <> Nothing Then
                        Pub_ComboBox.Items.FindByText(PUB_NAME).Selected = True
                    Else
                        Pub_ComboBox.ClearSelection()
                        Pub_ComboBox.Items.Insert(0, New ListItem(PUB_NAME))
                        Pub_ComboBox.DataBind()
                        Pub_ComboBox.Text = PUB_NAME
                    End If
                End If
                If TR_Year.Visible = True Then
                    txt_Cat_Year.Text = YEAR_OF_PUB
                End If
                If TR_Note.Visible = True Then
                    txt_Cat_Note.Text = DESCRIPTION
                End If
                If TR_URL.Visible = True Then
                    txt_Cat_URL.Text = URL
                End If
                Find = 1
            End If
        Catch s As Exception
            'MessageBox.Show(s.Message, "eGranthalaya-Download from ISBN.nu")
        Finally

        End Try

    End Sub
    'download record from "http://worldcat.org"
    Sub GetData3(ByVal URLstr As String)
        Try
            ' Get HTML data
            Dim client As WebClient = New WebClient()
            Dim pry As New WebProxy
            pry = WebProxy.GetDefaultProxy()
            pry.Credentials = CredentialCache.DefaultNetworkCredentials
            GlobalProxySelection.Select = pry
            Dim data As Stream = client.OpenRead(URLstr)
            Dim reader As StreamReader = New StreamReader(data)
            Dim str As String = ""
            str = reader.ReadToEnd
            str = Replace(str, """", "'")
            str = Replace(Replace(str, Chr(10), ""), Chr(13), "")
            str = Replace(str, "&rsquo;", "'")
            str = Replace(str, "&amp;", "&")

            Dim Tit1, Tit2, EXIST, URL, t1, LANG_CODE, FORMAT_CODE, DOC_TYPE_CODE, PERSONAL_NAME, Title, Sub_Title, EDITION
            If InStr(str, "<div id='div-maincol'><br><p>") <> 0 Then
                Tit1 = InStr(1, str, "<div id='div-maincol'><br><p>", 1)
                Tit1 = Tit1 + Len("<div id='div-maincol'><br><p>")
                Tit2 = InStr(Tit1, str, ".", 1)
                EXIST = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
            End If
            If EXIST = "The page you tried was not found" Then
                If Find <> 0 Then
                    ' MsgBox("NO RECORD EXISTS")
                    'Call catAddNew()
                End If
            Else
                If InStr(str, "<input class='text' name='' id='util-permalink' value='") <> 0 Then
                    Tit1 = InStr(1, str, "<input class='text' name='' id='util-permalink' value='", 1)
                    Tit1 = Tit1 + Len("<input class='text' name='' id='util-permalink' value='")
                    Tit2 = InStr(Tit1, str, "'", 1)
                    URL = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    URL = TrimX(URL)
                Else
                    URL = ""
                End If

                If InStr(str, "<h1 class='title'>") <> 0 Then
                    Tit1 = InStr(1, str, "<h1 class='title'>", 1)
                    Tit1 = Tit1 + Len("<h1 class='title'>")
                    Tit2 = InStr(Tit1, str, "</h1>", 1)
                    Title = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    Title = TrimAll(Title)
                    If InStr(Title, ":") <> 0 Then
                        Dim SplitTitle As Object = Nothing
                        SplitTitle = Split(Title, ":")
                        Title = SplitTitle(0)
                        Sub_Title = SplitTitle(1)
                    Else
                        Sub_Title = ""
                    End If
                Else
                    Title = ""
                End If

                Dim t31 As String
                If InStr(str, "<span class='itemtype'><span class='bks'  id='editionFormatType'>") <> 0 Then
                    Tit1 = InStr(1, str, "<span class='itemtype'><span class='bks'  id='editionFormatType'>", 1)
                    Tit1 = Tit1 + Len("<span class='itemtype'><span class='bks'  id='editionFormatType'>")
                    Tit2 = InStr(Tit1, str, "<", 1)
                    t31 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))

                    Dim d1() As String = t31.Split(":")
                    Dim j As Integer
                    j = d1.Length
                    If j = 1 Then

                    ElseIf j = 2 Then

                    ElseIf j = 3 Then

                        EDITION = Trim(d1(2))
                    End If
                Else

                End If

                Dim AUTHORS As String
                Dim AUTHOR1, AUTHOR2, AUTHOR3, CORPAUTHOR As Object
                If InStr(str, "<td id='bib-author-cell'>") <> 0 Then
                    Tit1 = InStr(1, str, "<td id='bib-author-cell'>", 1)
                    Tit1 = Tit1 + Len("<td id='bib-author-cell'>")
                    Tit2 = InStr(Tit1, str, "</td>", 1)
                    AUTHORS = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    AUTHORS = Replace(AUTHORS, ".", " ")
                    AUTHORS = TrimAll(AUTHORS)

                    Dim auth() As String = AUTHORS.Split(";")
                    Dim i As Integer
                    i = auth.Length
                    If i > 3 Then
                        i = 3
                    End If
                    If i = 3 Then
                        AUTHOR1 = Trim(auth(0))
                        Tit1 = InStr(1, AUTHOR1, ">", 1)
                        Tit1 = Tit1 + Len(">")
                        Tit2 = InStr(Tit1, AUTHOR1, "</a>", 1)
                        AUTHOR1 = Trim(Mid(AUTHOR1, Tit1, (Tit2 - Tit1)))

                        AUTHOR2 = Trim(auth(1))
                        Tit1 = InStr(1, AUTHOR2, ">", 1)
                        Tit1 = Tit1 + Len(">")
                        Tit2 = InStr(Tit1, AUTHOR2, "</a>", 1)
                        AUTHOR2 = Trim(Mid(AUTHOR2, Tit1, (Tit2 - Tit1)))

                        AUTHOR3 = Trim(auth(2))
                        Tit1 = InStr(1, AUTHOR3, ">", 1)
                        Tit1 = Tit1 + Len(">")
                        Tit2 = InStr(Tit1, AUTHOR3, "</a>", 1)
                        If Tit2 <> 0 Then
                            AUTHOR3 = Trim(Mid(AUTHOR3, Tit1, (Tit2 - Tit1)))
                        Else
                            AUTHOR3 = ""
                        End If
                    ElseIf i = 2 Then
                        AUTHOR1 = Trim(auth(0))
                        Tit1 = InStr(1, AUTHOR1, ">", 1)
                        Tit1 = Tit1 + Len(">")
                        Tit2 = InStr(Tit1, AUTHOR1, "</a>", 1)
                        AUTHOR1 = Trim(Mid(AUTHOR1, Tit1, (Tit2 - Tit1)))

                        AUTHOR2 = Trim(auth(1))
                        Tit1 = InStr(1, AUTHOR2, ">", 1)
                        Tit1 = Tit1 + Len(">")
                        Tit2 = InStr(Tit1, AUTHOR2, "</a>", 1)
                        AUTHOR2 = Trim(Mid(AUTHOR2, Tit1, (Tit2 - Tit1)))
                        AUTHOR3 = ""
                    ElseIf i = 1 Then
                        AUTHOR1 = Trim(auth(0))
                        Tit1 = InStr(1, AUTHOR1, ">", 1)
                        Tit1 = Tit1 + Len(">")
                        Tit2 = InStr(Tit1, AUTHOR1, "</a>", 1)
                        AUTHOR1 = Trim(Mid(AUTHOR1, Tit1, (Tit2 - Tit1)))

                        AUTHOR2 = ""
                        AUTHOR3 = ""
                    End If
                Else
                    AUTHOR1 = ""
                    AUTHOR2 = ""
                    AUTHOR3 = ""
                End If

                If AUTHOR1 <> "" Then
                    If Len(AUTHOR1) > 50 Then
                        CORPAUTHOR = TrimAll(AUTHOR1)
                        AUTHOR1 = ""
                        AUTHOR2 = ""
                        AUTHOR3 = ""
                    End If
                End If

                Dim PUB_NAME, PLACE_OF_PUB, YEAR_OF_PUB, STANDARD_NO, SERIES_TITLE
                If InStr(str, "<td id='bib-publisher-cell'>") <> 0 Then
                    Tit1 = InStr(1, str, "<td id='bib-publisher-cell'>", 1)
                    Tit1 = Tit1 + Len("<td id='bib-publisher-cell'>")
                    Tit2 = InStr(Tit1, str, "</td>", 1)
                    t1 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))

                    Tit1 = InStr(1, t1, "", 1)
                    Tit1 = Tit1 + Len("")
                    Tit2 = InStr(Tit1, t1, ":", 1)
                    PLACE_OF_PUB = Trim(Mid(t1, Tit1, (Tit2 - Tit1)))

                    Tit1 = InStr(1, t1, ":", 1)
                    Tit1 = Tit1 + Len(":")
                    If InStr(t1, ",") <> 0 Then
                        Tit2 = InStr(Tit1, t1, ",", 1)
                    End If
                    If InStr(t1, ".") <> 0 Then
                        Tit2 = InStr(Tit1, t1, ".", 1)
                    End If
                    If InStr(t1, ";") <> 0 Then
                        Tit2 = InStr(Tit1, t1, ";", 1)
                    End If
                    PUB_NAME = Trim(Mid(t1, Tit1, (Tit2 - Tit1)))
                    PUB_NAME = Replace(PUB_NAME, ".", " ")
                    PUB_NAME = TrimAll(PUB_NAME)
                    YEAR_OF_PUB = t1.ToString.Substring(Len(t1) - 5, 4)
                Else
                    PLACE_OF_PUB = ""
                    PUB_NAME = ""
                    YEAR_OF_PUB = Now.Year
                End If

                If InStr(str, "<td id='bib-hotSeriesTitles-cell'>") <> 0 Then
                    Tit1 = InStr(1, str, "<td id='bib-hotSeriesTitles-cell'>", 1)
                    Tit1 = Tit1 + Len("<td id='bib-hotSeriesTitles-cell'>")
                    Tit2 = InStr(Tit1, str, "</td>", 1)
                    SERIES_TITLE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))

                    Tit1 = InStr(1, SERIES_TITLE, ">", 1)
                    Tit1 = Tit1 + Len(">")
                    Tit2 = InStr(Tit1, SERIES_TITLE, "</a>", 1)
                    SERIES_TITLE = Trim(Mid(SERIES_TITLE, Tit1, (Tit2 - Tit1)))
                    SERIES_TITLE = TrimAll(SERIES_TITLE)
                Else
                    SERIES_TITLE = ""
                End If

                'WRITE VALUE IN TEXT BOXES
                DDL_Lang.SelectedValue = LANG_CODE
                DDL_YesNo.SelectedValue = "N"
                txt_Cat_TotalVol.Text = ""
                txt_Cat_Title.Text = Title
                If TR_SubTitle.Visible = True Then
                    txt_Cat_SubTitle.Text = Sub_Title
                End If
                If TR_Author.Visible = True Then
                    txt_Cat_Author1.Text = AUTHOR1
                    txt_Cat_Author2.Text = AUTHOR2
                    txt_Cat_Author3.Text = AUTHOR3
                End If
                If TR_Edition.Visible = True Then
                    txt_Cat_Edition.Text = EDITION
                End If
                If TR_Publisher.Visible = True Then
                    'Check Duplicate User Code
                    Dim str2 As Object = Nothing
                    Dim flag As Object = Nothing
                    str2 = "SELECT PUB_ID FROM PUBLISHERS WHERE (PUB_NAME ='" & Trim(PUB_NAME) & "') "
                    Dim cmd1 As New SqlCommand(str2, SqlConn)
                    SqlConn.Open()
                    flag = cmd1.ExecuteScalar
                    SqlConn.Close()
                    If flag <> Nothing Then
                        Pub_ComboBox.Items.FindByText(PUB_NAME).Selected = True
                    Else
                        Pub_ComboBox.ClearSelection()
                        Pub_ComboBox.Items.Insert(0, New ListItem(PUB_NAME))
                        Pub_ComboBox.DataBind()
                        Pub_ComboBox.Text = PUB_NAME
                    End If
                End If
                If TR_Place.Visible = True Then
                    txt_Cat_Place.Text = PLACE_OF_PUB
                End If
                If TR_Year.Visible = True Then
                    txt_Cat_Year.Text = YEAR_OF_PUB
                End If
                If TR_Series.Visible = True Then
                    txt_Cat_Series.Text = SERIES_TITLE
                End If
                If TR_URL.Visible = True Then
                    txt_Cat_URL.Text = URL
                End If
                Find = 1
            End If
        Catch s As Exception
            'MessageBox.Show(s.Message, "eGranthalaya-Download record from Worldcat")
        Finally

        End Try
    End Sub
    'downlaod record from eG3 OPAC by searching from TITLE/AUTHOR,e tc from z39.50
    Sub GetDataEG3()
        Try
            Dim client As WebClient = New WebClient()
            Dim prx As New WebProxy
            prx = WebProxy.GetDefaultProxy()
            prx.Credentials = CredentialCache.DefaultNetworkCredentials
            GlobalProxySelection.Select = prx
            Dim URLstr As String = Nothing
            Dim str11 As String = Nothing
            str11 = "http://www.eglibnet.nic.in"
            URLstr = str11 + "/Download_CATNO.aspx?CAT_NO=" & txt_Cat_ISBN.Text

            Dim data As Stream = client.OpenRead(URLstr)
            Dim reader As StreamReader = New StreamReader(data)
            Dim str As String = ""
            str = reader.ReadToEnd

            Dim Tit1, Tit2, EXIST
            If InStr(UCase(str), "<EXIST>") <> 0 Then
                Tit1 = InStr(1, UCase(str), "<EXIST>", 1)
                Tit1 = Tit1 + Len("<EXIST>")
                Tit2 = InStr(Tit1, str, "</EXIST>", 1)
                EXIST = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
            End If

            If EXIST = "YES" Then
                Dim BIB_CODE, MAT_CODE, DOC_TYPE_CODE, STANDARD_NO
                Dim Title, SUB_TITLE, AUTHOR1, AUTHOR2, AUTHOR3, CORPORATE_AUTHOR As Object
                If InStr(UCase(str), "<BIB_CODE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<BIB_CODE>", 1)
                    Tit1 = Tit1 + Len("<BIB_CODE>")
                    Tit2 = InStr(Tit1, str, "</BIB_CODE>", 1)
                    BIB_CODE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    BIB_CODE = TrimX(BIB_CODE)
                Else
                    BIB_CODE = "M"
                End If

                If InStr(UCase(str), "<MAT_CODE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<MAT_CODE>", 1)
                    Tit1 = Tit1 + Len("<MAT_CODE>")
                    Tit2 = InStr(Tit1, str, "</MAT_CODE>", 1)
                    MAT_CODE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    MAT_CODE = TrimX(MAT_CODE)
                Else
                    MAT_CODE = "B"
                End If

                If InStr(UCase(str), "<DOC_TYPE_CODE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<DOC_TYPE_CODE>", 1)
                    Tit1 = Tit1 + Len("<DOC_TYPE_CODE>")
                    Tit2 = InStr(Tit1, str, "</DOC_TYPE_CODE>", 1)
                    DOC_TYPE_CODE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    DOC_TYPE_CODE = TrimX(DOC_TYPE_CODE)
                Else
                    DOC_TYPE_CODE = "BK"
                End If

                If InStr(UCase(str), "<STANDARD_NO>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<STANDARD_NO>", 1)
                    Tit1 = Tit1 + Len("<STANDARD_NO>")
                    Tit2 = InStr(Tit1, str, "</STANDARD_NO>", 1)
                    STANDARD_NO = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    STANDARD_NO = TrimX(STANDARD_NO)
                Else
                    STANDARD_NO = ""
                End If

                If InStr(UCase(str), "<CTITLE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<CTITLE>", 1)
                    Tit1 = Tit1 + Len("<CTITLE>")
                    Tit2 = InStr(Tit1, str, "</CTITLE>", 1)
                    Title = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    Title = TrimAll(Title)
                    Title = Replace(Title, ".", " ")
                    If InStr(Title, ":") <> 0 Then
                        Dim SplitTitle As Object = Nothing
                        SplitTitle = Split(Title, ":")
                        Title = SplitTitle(0)
                        SUB_TITLE = SplitTitle(1)
                    End If
                Else
                    Title = ""
                End If

                If SUB_TITLE = "" Then
                    If InStr(UCase(str), "<SUB_TITLE>") <> 0 Then
                        Tit1 = InStr(1, UCase(str), "<SUB_TITLE>", 1)
                        Tit1 = Tit1 + Len("<SUB_TITLE>")
                        Tit2 = InStr(Tit1, str, "</SUB_TITLE>", 1)
                        SUB_TITLE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                        SUB_TITLE = TrimAll(SUB_TITLE)
                    Else
                        SUB_TITLE = ""
                    End If
                End If

                If InStr(UCase(str), "<AUTHOR1>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<AUTHOR1>", 1)
                    Tit1 = Tit1 + Len("<AUTHOR1>")
                    Tit2 = InStr(Tit1, str, "</AUTHOR1>", 1)
                    AUTHOR1 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    AUTHOR1 = TrimAll(AUTHOR1)
                Else
                    AUTHOR1 = ""
                End If

                If InStr(UCase(str), "<AUTHOR2>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<AUTHOR2>", 1)
                    Tit1 = Tit1 + Len("<AUTHOR2>")
                    Tit2 = InStr(Tit1, str, "</AUTHOR2>", 1)
                    AUTHOR2 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    AUTHOR2 = TrimAll(AUTHOR2)
                Else
                    AUTHOR2 = ""
                End If

                If InStr(UCase(str), "<AUTHOR3>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<AUTHOR3>", 1)
                    Tit1 = Tit1 + Len("<AUTHOR3>")
                    Tit2 = InStr(Tit1, str, "</AUTHOR3>", 1)
                    AUTHOR3 = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    AUTHOR3 = TrimAll(AUTHOR3)
                Else
                    AUTHOR3 = ""
                End If

                If InStr(UCase(str), "<CORPORATE_AUTHOR>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<CORPORATE_AUTHOR>", 1)
                    Tit1 = Tit1 + Len("<CORPORATE_AUTHOR>")
                    Tit2 = InStr(Tit1, str, "</CORPORATE_AUTHOR>", 1)
                    CORPORATE_AUTHOR = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    CORPORATE_AUTHOR = TrimAll(CORPORATE_AUTHOR)
                Else
                    CORPORATE_AUTHOR = ""
                End If

                Dim EDITOR, EDITION, PLACE_OF_PUB, PUB_ID, YEAR_OF_PUB As Object
                If InStr(UCase(str), "<EDITOR>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<EDITOR>", 1)
                    Tit1 = Tit1 + Len("<EDITOR>")
                    Tit2 = InStr(Tit1, str, "</EDITOR>", 1)
                    EDITOR = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    EDITOR = TrimAll(EDITOR)
                Else
                    EDITOR = ""
                End If

                If InStr(UCase(str), "<EDITION>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<EDITION>", 1)
                    Tit1 = Tit1 + Len("<EDITION>")
                    Tit2 = InStr(Tit1, str, "</EDITION>", 1)
                    EDITION = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    EDITION = TrimAll(EDITION)
                Else
                    EDITION = ""
                End If

                If InStr(UCase(str), "<PLACE_OF_PUB>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<PLACE_OF_PUB>", 1)
                    Tit1 = Tit1 + Len("<PLACE_OF_PUB>")
                    Tit2 = InStr(Tit1, str, "</PLACE_OF_PUB>", 1)
                    PLACE_OF_PUB = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    PLACE_OF_PUB = TrimAll(PLACE_OF_PUB)
                Else
                    PLACE_OF_PUB = ""
                End If

                If InStr(UCase(str), "<YEAR_OF_PUB>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<YEAR_OF_PUB>", 1)
                    Tit1 = Tit1 + Len("<YEAR_OF_PUB>")
                    Tit2 = InStr(Tit1, str, "</YEAR_OF_PUB>", 1)
                    YEAR_OF_PUB = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    YEAR_OF_PUB = TrimX(YEAR_OF_PUB)
                Else
                    YEAR_OF_PUB = Now.Year
                End If

                Dim FORMAT_CODE, SERIES_TITLE, SUB_ID, KEYWORDS, DATE_ADDED As Object
                If InStr(UCase(str), "<FORMAT_CODE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<FORMAT_CODE>", 1)
                    Tit1 = Tit1 + Len("<FORMAT_CODE>")
                    Tit2 = InStr(Tit1, str, "</FORMAT_CODE>", 1)
                    FORMAT_CODE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    FORMAT_CODE = "PT"
                End If

                If InStr(UCase(str), "<SERIES_TITLE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<SERIES_TITLE>", 1)
                    Tit1 = Tit1 + Len("<SERIES_TITLE>")
                    Tit2 = InStr(Tit1, str, "</SERIES_TITLE>", 1)
                    SERIES_TITLE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    SERIES_TITLE = TrimAll(SERIES_TITLE)
                Else
                    SERIES_TITLE = ""
                End If

                If InStr(UCase(str), "<SUB_NAME>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<SUB_NAME>", 1)
                    Tit1 = Tit1 + Len("<SUB_NAME>")
                    Tit2 = InStr(Tit1, str, "</SUB_NAME>", 1)
                    SUB_ID = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    SUB_ID = ""
                End If

                If InStr(UCase(str), "<KEYWORDS>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<KEYWORDS>", 1)
                    Tit1 = Tit1 + Len("<KEYWORDS>")
                    Tit2 = InStr(Tit1, str, "</KEYWORDS>", 1)
                    KEYWORDS = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    KEYWORDS = Replace(KEYWORDS, ";", "; ")
                    KEYWORDS = TrimAll(KEYWORDS)
                Else
                    KEYWORDS = ""
                End If

                Dim CAT_LEVEL, MULTI_VOL, TOTAL_VOL As Object
                If InStr(UCase(str), "<MULTI_VOL>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<MULTI_VOL>", 1)
                    Tit1 = Tit1 + Len("<MULTI_VOL>")
                    Tit2 = InStr(Tit1, str, "</MULTI_VOL>", 1)
                    MULTI_VOL = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    MULTI_VOL = "N"
                End If

                If InStr(UCase(str), "<TOTAL_VOL>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<TOTAL_VOL>", 1)
                    Tit1 = Tit1 + Len("<TOTAL_VOL>")
                    Tit2 = InStr(Tit1, str, "</TOTAL_VOL>", 1)
                    TOTAL_VOL = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    TOTAL_VOL = ""
                End If

                Dim PUB_NAME, LIB_CODE, CONF_NAME As Object
                If InStr(UCase(str), "<PUB_NAME>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<PUB_NAME>", 1)
                    Tit1 = Tit1 + Len("<PUB_NAME>")
                    Tit2 = InStr(Tit1, str, "</PUB_NAME>", 1)
                    PUB_NAME = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    PUB_NAME = TrimAll(PUB_NAME)
                Else
                    PUB_NAME = ""
                End If

                If InStr(UCase(str), "<CONF_NAME>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<CONF_NAME>", 1)
                    Tit1 = Tit1 + Len("<CONF_NAME>")
                    Tit2 = InStr(Tit1, str, "</CONF_NAME>", 1)
                    CONF_NAME = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    CONF_NAME = TrimAll(CONF_NAME)
                Else
                    CONF_NAME = ""
                End If

                Dim LANG_CODE
                If InStr(UCase(str), "<LANG_CODE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<LANG_CODE>", 1)
                    Tit1 = Tit1 + Len("<LANG_CODE>")
                    Tit2 = InStr(Tit1, str, "</LANG_CODE>", 1)
                    LANG_CODE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                Else
                    LANG_CODE = "ENG"
                End If

                Dim CON_CODE As Object = Nothing
                If InStr(UCase(str), "<CON_CODE>") <> 0 Then
                    Tit1 = InStr(1, UCase(str), "<CON_CODE>", 1)
                    Tit1 = Tit1 + Len("<CON_CODE>")
                    Tit2 = InStr(Tit1, str, "</CON_CODE>", 1)
                    CON_CODE = Trim(Mid(str, Tit1, (Tit2 - Tit1)))
                    CON_CODE = TrimAll(CON_CODE)
                Else
                    CON_CODE = "USA"
                End If

                If CON_CODE = "" Then
                    CON_CODE = "USA"
                End If
            Else
                If Find <> 0 Then
                    'MsgBox("NO RECORD EXISTS")
                End If
            End If
        Catch s As Exception

        Finally

        End Try

    End Sub
    'call event to download record from interenet
    Protected Sub txt_Cat_ISBN_TextChanged(ByVal sender As Object, ByVal e As EventArgs) Handles txt_Cat_ISBN.TextChanged
        If CheckBox2.Checked = True Then
            If Acq_Save_Bttn.Visible = True Then
                DownloadRecord_ISBN()
            End If
        Else
            Me.txt_Cat_Title.Focus()
        End If
    End Sub
    'populate currencies
    Public Sub PopulateCurrencies()
        Me.DDL_Currencies.DataSource = GetCurrenciesList()
        Me.DDL_Currencies.DataTextField = "CUR_NAME"
        Me.DDL_Currencies.DataValueField = "CUR_CODE"
        Me.DDL_Currencies.DataBind()
        DDL_Currencies.Items.Insert(0, "")
    End Sub
    Public Sub PopulateAcqModes()
        Me.DDL_AcqModes.DataTextField = "ACQMODE_NAME"
        Me.DDL_AcqModes.DataValueField = "ACQMODE_CODE"
        Me.DDL_AcqModes.DataSource = GetAcqModesList()
        Me.DDL_AcqModes.DataBind()
    End Sub
    Public Sub PopulateVendors()
        DDL_Vendors.DataTextField = "VEND_NAME"
        DDL_Vendors.DataValueField = "VEND_ID"
        DDL_Vendors.DataSource = GetVendorList()
        DDL_Vendors.DataBind()
        DDL_Vendors.Items.Insert(0, "")
    End Sub

    Public Sub PopulateFormats()
        DDL_Format.DataTextField = "FORMAT_NAME"
        DDL_Format.DataValueField = "FORMAT_CODE"
        DDL_Format.DataSource = GetFormatList()
        DDL_Format.DataBind()
        DDL_Format.Items.Insert(0, "")
    End Sub
    Public Sub PopulateStatus()
        DDL_Status.DataTextField = "STA_NAME"
        DDL_Status.DataValueField = "STA_CODE"
        DDL_Status.DataSource = GetCopyStatusList()
        DDL_Status.DataBind()
        DDL_Status.Items.Insert(0, "")
    End Sub
    Public Sub PopulateBindings()
        DDL_Binding.DataTextField = "BIND_NAME"
        DDL_Binding.DataValueField = "BIND_CODE"
        DDL_Binding.DataSource = GetBindingList()
        DDL_Binding.DataBind()
        DDL_Binding.Items.Insert(0, "")
    End Sub
    Public Sub PopulateAccMaterials()
        DDL_AccMaterials.DataTextField = "ACC_MAT_NAME"
        DDL_AccMaterials.DataValueField = "ACC_MAT_CODE"
        DDL_AccMaterials.DataSource = GetAccMaterialsList()
        DDL_AccMaterials.DataBind()
        DDL_AccMaterials.Items.Insert(0, "")
    End Sub
    'populate libraries
    Public Sub PopulateLibrary()
        Dim Command As SqlCommand = Nothing
        Dim dt As DataTable = Nothing
        Try
            Command = New SqlCommand("SELECT  LIB_CODE, LIB_NAME FROM LIBRARIES WHERE (LIB_CODE = '" & Trim(LibCode) & "' OR MAIN_LIB_CODE = '" & Trim(LibCode) & "') ORDER BY LIB_NAME ", SqlConn)
            If SqlConn.State = 0 Then
                SqlConn.Open()
            End If
            Dim da As New SqlDataAdapter(Command)
            Dim ds As New DataSet
            Dim RecordCount As Long = 0
            da.Fill(ds)

            dt = ds.Tables(0).Copy

            Dim Dr As DataRow
            Dr = dt.NewRow
            Dr("LIB_CODE") = ""
            Dr("LIB_NAME") = ""
            dt.Rows.InsertAt(Dr, 0)

            If dt.Rows.Count = 0 Then
                Me.DDL_Library.DataSource = Nothing
            Else
                Me.DDL_Library.DataSource = dt
                Me.DDL_Library.DataTextField = "LIB_NAME"
                Me.DDL_Library.DataValueField = "LIB_CODE"
                Me.DDL_Library.DataBind()
            End If
            dt.Dispose()
            SqlConn.Close()
            DDL_Library.Text = ""
        Catch s As Exception
            Label15.Text = "Error: " & (s.Message())
            Label1.Text = ""
        Finally
            Command.Dispose()
            dt.Dispose()
            SqlConn.Close()
        End Try
    End Sub
    'populate libraries
    Public Sub PopulateSections()
        Dim Command As SqlCommand = Nothing
        Dim dt As DataTable = Nothing
        Try
            Command = New SqlCommand("SELECT  SEC_CODE, SEC_NAME FROM SECTIONS WHERE (LIB_CODE = '" & Trim(LibCode) & "') ORDER BY SEC_NAME ", SqlConn)
            If SqlConn.State = 0 Then
                SqlConn.Open()
            End If
            Dim da As New SqlDataAdapter(Command)
            Dim ds As New DataSet
            Dim RecordCount As Long = 0
            da.Fill(ds)

            dt = ds.Tables(0).Copy

            Dim Dr As DataRow
            Dr = dt.NewRow
            Dr("SEC_CODE") = ""
            Dr("SEC_NAME") = ""
            dt.Rows.InsertAt(Dr, 0)

            If dt.Rows.Count = 0 Then
                Me.DDL_Section.DataSource = Nothing
            Else
                Me.DDL_Section.DataSource = dt
                Me.DDL_Section.DataTextField = "SEC_NAME"
                Me.DDL_Section.DataValueField = "SEC_CODE"
                Me.DDL_Section.DataBind()
            End If
            dt.Dispose()
            SqlConn.Close()
            DDL_Section.Text = ""
        Catch s As Exception
            Label15.Text = "Error: " & (s.Message())
            Label1.Text = ""
        Finally
            Command.Dispose()
            dt.Dispose()
            SqlConn.Close()
        End Try

    End Sub
    'enter multi-copies checked event   
    Protected Sub CB_RecvAll_CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles CB_RecvAll.CheckedChanged
        If CB_RecvAll.Checked = True Then
            txt_Hold_Copies.Focus()
        End If
    End Sub
    'add copy    
    Protected Sub Acq_AddCopy_Bttn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles Acq_AddCopy_Bttn.Click
        If AcqRetro = "Y" Then
            Table4.Visible = True
        Else
            Table4.Visible = False
        End If
        Table2.Visible = True
        LoadHoldFormat()
        Acq_AddCopy_Bttn.Visible = False
        Acq_SaveCopy_Bttn.Visible = True
        Acq_Update_Bttn.Visible = False
        Acq_Delete_Bttn.Visible = False
        DisplayLastHoldRecord()
    End Sub
    Public Sub DisplayLastHoldRecord()
        Dim dt As DataTable
        Try
            Dim CAT_NO As Long = Nothing
            If Label7.Text <> "" Then
                CAT_NO = Label7.Text
                'get record details from database
                Dim SQL As String = Nothing
                SQL = "SELECT TOP 1 * FROM HOLD_ACQ_VIEW WHERE (CAT_NO = '" & Trim(CAT_NO) & "') AND (LIB_CODE = '" & Trim(LibCode) & "') ORDER BY HOLD_ID DESC"

                Dim ds As New DataSet
                Dim da As New SqlDataAdapter(SQL, SqlConn)
                If SqlConn.State = 0 Then
                    SqlConn.Open()
                End If
                da.Fill(ds)

                dt = ds.Tables(0).Copy

                If dt.Rows.Count <> 0 Then
                    If Table4.Visible = True Then
                        If dt.Rows(0).Item("ACQ_ID").ToString <> "" Then
                            Me.Label_ACQID.Text = dt.Rows(0).Item("ACQ_ID").ToString
                        Else
                            Me.Label_ACQID.Text = ""
                        End If

                        If dt.Rows(0).Item("PROCESS_STATUS").ToString <> "" Then
                            Me.Label_ProcessStatus.Text = dt.Rows(0).Item("PROCESS_STATUS").ToString
                        Else
                            Me.Label_ProcessStatus.Text = ""
                        End If

                        If dt.Rows(0).Item("ACQMODE_CODE").ToString <> "" Then
                            Me.DDL_AcqModes.SelectedValue = dt.Rows(0).Item("ACQMODE_CODE").ToString
                        Else
                            DDL_AcqModes.ClearSelection()
                        End If

                        If dt.Rows(0).Item("CUR_CODE").ToString <> "" Then
                            Me.DDL_Currencies.SelectedValue = dt.Rows(0).Item("CUR_CODE").ToString
                        Else
                            DDL_Currencies.ClearSelection()
                        End If

                        If dt.Rows(0).Item("VEND_ID").ToString <> "" Then
                            Me.DDL_Vendors.SelectedValue = dt.Rows(0).Item("VEND_ID").ToString
                        Else
                            DDL_Vendors.ClearSelection()
                        End If

                        If dt.Rows(0).Item("ITEM_PRICE").ToString <> "" Then
                            Me.txt_Acq_ItemPrice.Text = dt.Rows(0).Item("ITEM_PRICE").ToString
                        Else
                            txt_Acq_ItemPrice.Text = ""
                        End If

                        If dt.Rows(0).Item("CONVERSION_RATE").ToString <> "" Then
                            Me.txt_Acq_ConversionRate.Text = dt.Rows(0).Item("CONVERSION_RATE").ToString
                        Else
                            txt_Acq_ConversionRate.Text = ""
                        End If

                        If dt.Rows(0).Item("ITEM_RUPEES").ToString <> "" Then
                            Me.txt_Acq_ItemRupees.Text = dt.Rows(0).Item("ITEM_RUPEES").ToString
                        Else
                            txt_Acq_ItemRupees.Text = ""
                        End If

                        If dt.Rows(0).Item("OTHER_CHARGES").ToString <> "" Then
                            Me.txt_Acq_OtherCharges.Text = dt.Rows(0).Item("OTHER_CHARGES").ToString
                        Else
                            txt_Acq_OtherCharges.Text = ""
                        End If
                    End If 'if tabl4 acq not visible

                    If dt.Rows(0).Item("HOLD_ID").ToString <> "" Then
                        Label_HoldID.Text = dt.Rows(0).Item("HOLD_ID").ToString
                    Else
                        Label_HoldID.Text = ""
                    End If

                    If TR_FORMAT_CODE.Visible = True Then
                        If dt.Rows(0).Item("FORMAT_CODE").ToString <> "" Then
                            DDL_Format.SelectedValue = dt.Rows(0).Item("FORMAT_CODE").ToString
                        Else
                            DDL_Format.ClearSelection()
                        End If
                    End If

                    If dt.Rows(0).Item("SHOW").ToString <> "" Then
                        DDL_Show.SelectedValue = dt.Rows(0).Item("SHOW").ToString
                    Else
                        DDL_Show.ClearSelection()
                    End If

                    If dt.Rows(0).Item("ISSUEABLE").ToString <> "" Then
                        DDL_Issuable.SelectedValue = dt.Rows(0).Item("ISSUEABLE").ToString
                    Else
                        DDL_Issuable.ClearSelection()
                    End If

                    If TR_VOL_NO.Visible = True Then
                        If dt.Rows(0).Item("VOL_NO").ToString <> "" Then
                            txt_Hold_VolNo.Text = dt.Rows(0).Item("VOL_NO").ToString
                        Else
                            txt_Hold_VolNo.Text = ""
                        End If
                    End If

                    If TR_VOL_NO.Visible = True Then
                        If dt.Rows(0).Item("VOL_YEAR").ToString <> "" Then
                            txt_Hold_VolYear.Text = dt.Rows(0).Item("VOL_YEAR").ToString
                        Else
                            txt_Hold_VolYear.Text = ""
                        End If
                    End If

                    If TR_VOL_EDITORS.Visible = True Then
                        If dt.Rows(0).Item("VOL_EDITORS").ToString <> "" Then
                            txt_Hold_VolEditors.Text = dt.Rows(0).Item("VOL_EDITORS").ToString
                        Else
                            txt_Hold_VolEditors.Text = ""
                        End If
                    End If

                    If TR_VOL_TITLE.Visible = True Then
                        If dt.Rows(0).Item("VOL_TITLE").ToString <> "" Then
                            txt_Hold_VolTitle.Text = dt.Rows(0).Item("VOL_TITLE").ToString
                        Else
                            txt_Hold_VolTitle.Text = ""
                        End If
                    End If

                    If TR_VOL_NO.Visible = True Then
                        If dt.Rows(0).Item("COPY_ISBN").ToString <> "" Then
                            txt_Hold_CopyISBN.Text = dt.Rows(0).Item("COPY_ISBN").ToString
                        Else
                            txt_Hold_CopyISBN.Text = ""
                        End If
                    End If

                    If TR_CLASS_NO.Visible = True Then
                        If dt.Rows(0).Item("CLASS_NO").ToString <> "" Then
                            txt_Hold_ClassNo.Text = dt.Rows(0).Item("CLASS_NO").ToString
                        Else
                            txt_Hold_ClassNo.Text = ""
                        End If
                    End If

                    If TR_CLASS_NO.Visible = True Then
                        If dt.Rows(0).Item("BOOK_NO").ToString <> "" Then
                            txt_Hold_BookNo.Text = dt.Rows(0).Item("BOOK_NO").ToString
                        Else
                            txt_Hold_BookNo.Text = ""
                        End If
                    End If

                    If TR_PAGINATION.Visible = True Then
                        If dt.Rows(0).Item("PAGINATION").ToString <> "" Then
                            txt_Hold_Pages.Text = dt.Rows(0).Item("PAGINATION").ToString
                        Else
                            txt_Hold_Pages.Text = ""
                        End If
                    End If

                    If TR_SIZE.Visible = True Then
                        If dt.Rows(0).Item("SIZE").ToString <> "" Then
                            txt_Hold_Size.Text = dt.Rows(0).Item("SIZE").ToString
                        Else
                            txt_Hold_Size.Text = ""
                        End If
                    End If

                    If TR_ILLUSTRATION.Visible = True Then
                        If dt.Rows(0).Item("ILLUSTRATION").ToString <> "" Then
                            CB_Illus.Checked = True
                        Else
                            CB_Illus.Checked = False
                        End If
                    End If

                    If TR_COLLECTION_TYPE.Visible = True Then
                        If dt.Rows(0).Item("COLLECTION_TYPE").ToString <> "" Then
                            DDL_CollectionType.SelectedValue = dt.Rows(0).Item("COLLECTION_TYPE").ToString
                        Else
                            DDL_CollectionType.ClearSelection()
                        End If
                    End If

                    If TR_STA_CODE.Visible = True Then
                        If dt.Rows(0).Item("STA_CODE").ToString <> "" Then
                            DDL_Status.SelectedValue = dt.Rows(0).Item("STA_CODE").ToString
                        Else
                            DDL_Status.ClearSelection()
                        End If
                    End If

                    If TR_BIND_CODE.Visible = True Then
                        If dt.Rows(0).Item("BIND_CODE").ToString <> "" Then
                            DDL_Binding.SelectedValue = dt.Rows(0).Item("BIND_CODE").ToString
                        Else
                            DDL_Binding.ClearSelection()
                        End If
                    End If

                    If TR_SEC_CODE.Visible = True Then
                        If dt.Rows(0).Item("SEC_CODE").ToString <> "" Then
                            DDL_Section.SelectedValue = dt.Rows(0).Item("SEC_CODE").ToString
                        Else
                            DDL_Section.ClearSelection()
                        End If
                    End If

                    If TR_LIBRARY.Visible = True Then
                        If dt.Rows(0).Item("LIB_CODE").ToString <> "" Then
                            DDL_Library.SelectedValue = dt.Rows(0).Item("LIB_CODE").ToString
                        Else
                            DDL_Library.ClearSelection()
                        End If
                    End If

                    If TR_ACC_MAT_CODE.Visible = True Then
                        If dt.Rows(0).Item("ACC_MAT_CODE").ToString <> "" Then
                            DDL_AccMaterials.SelectedValue = dt.Rows(0).Item("ACC_MAT_CODE").ToString
                        Else
                            DDL_AccMaterials.ClearSelection()
                        End If
                    End If

                    If TR_HOLDREMARKS.Visible = True Then
                        If dt.Rows(0).Item("REMARKS").ToString <> "" Then
                            txt_Hold_Remarks.Text = dt.Rows(0).Item("REMARKS").ToString
                        Else
                            txt_Hold_Remarks.Text = ""
                        End If
                    End If

                    If TR_PHYSICAL_LOCATION.Visible = True Then
                        If dt.Rows(0).Item("PHYSICAL_LOCATION").ToString <> "" Then
                            txt_Hold_Location.Text = dt.Rows(0).Item("PHYSICAL_LOCATION").ToString
                        Else
                            txt_Hold_Location.Text = ""
                        End If
                    End If

                    If TR_REFERENCE_NO.Visible = True Then
                        If dt.Rows(0).Item("REFERENCE_NO").ToString <> "" Then
                            txt_Hold_ReferenceNo.Text = dt.Rows(0).Item("REFERENCE_NO").ToString
                        Else
                            txt_Hold_ReferenceNo.Text = ""
                        End If
                    End If

                    If TR_MEDIUM.Visible = True Then
                        If dt.Rows(0).Item("MEDIUM").ToString <> "" Then
                            txt_Hold_RecordingMedium.Text = dt.Rows(0).Item("MEDIUM").ToString
                        Else
                            txt_Hold_RecordingMedium.Text = ""
                        End If
                    End If

                    If TR_RECORDING_CATEGORY.Visible = True Then
                        If dt.Rows(0).Item("RECORDING_CATEGORY").ToString <> "" Then
                            txt_Hold_RecordingCategory.Text = dt.Rows(0).Item("RECORDING_CATEGORY").ToString
                        Else
                            txt_Hold_RecordingCategory.Text = ""
                        End If
                    End If

                    If TR_RECORDING_FORM.Visible = True Then
                        If dt.Rows(0).Item("RECORDING_FORM").ToString <> "" Then
                            txt_Hold_RecordingForm.Text = dt.Rows(0).Item("RECORDING_FORM").ToString
                        Else
                            txt_Hold_RecordingForm.Text = ""
                        End If
                    End If


                    If TR_RECORDING_FORMAT.Visible = True Then
                        If dt.Rows(0).Item("RECORDING_FORMAT").ToString <> "" Then
                            txt_Hold_RecordingFormat.Text = dt.Rows(0).Item("RECORDING_FORMAT").ToString
                        Else
                            txt_Hold_RecordingFormat.Text = ""
                        End If
                    End If

                    If TR_RECORDING_SPEED.Visible = True Then
                        If dt.Rows(0).Item("RECORDING_SPEED").ToString <> "" Then
                            txt_Hold_RecordingSpeed.Text = dt.Rows(0).Item("RECORDING_SPEED").ToString
                        Else
                            txt_Hold_RecordingSpeed.Text = ""
                        End If
                    End If

                    If TR_RECORDING_STORAGE_TECH.Visible = True Then
                        If dt.Rows(0).Item("RECORDING_STORAGE_TECH").ToString <> "" Then
                            txt_Hold_RecordingStorageTech.Text = dt.Rows(0).Item("RECORDING_STORAGE_TECH").ToString
                        Else
                            txt_Hold_RecordingStorageTech.Text = ""
                        End If
                    End If

                    If TR_RECORDING_PLAY_DURATION.Visible = True Then
                        If dt.Rows(0).Item("RECORDING_PLAY_DURATION").ToString <> "" Then
                            txt_Hold_RecordingDuration.Text = dt.Rows(0).Item("RECORDING_PLAY_DURATION").ToString
                        Else
                            txt_Hold_RecordingDuration.Text = ""
                        End If
                    End If

                    If TR_VIDEO_TYPEOFVISUAL.Visible = True Then
                        If dt.Rows(0).Item("VIDEO_TYPEOFVISUAL").ToString <> "" Then
                            txt_Hold_TypeOfVisuals.Text = dt.Rows(0).Item("VIDEO_TYPEOFVISUAL").ToString
                        Else
                            txt_Hold_TypeOfVisuals.Text = ""
                        End If
                    End If

                    If TR_CARTOGRAPHIC_SCALE.Visible = True Then
                        If dt.Rows(0).Item("CARTOGRAPHIC_SCALE").ToString <> "" Then
                            txt_Hold_Scale.Text = dt.Rows(0).Item("CARTOGRAPHIC_SCALE").ToString
                        Else
                            txt_Hold_Scale.Text = ""
                        End If
                    End If

                    If TR_CARTOGRAPHIC_PROJECTION.Visible = True Then
                        If dt.Rows(0).Item("CARTOGRAPHIC_PROJECTION").ToString <> "" Then
                            txt_Hold_Projection.Text = dt.Rows(0).Item("CARTOGRAPHIC_PROJECTION").ToString
                        Else
                            txt_Hold_Projection.Text = ""
                        End If
                    End If

                    If TR_CARTOGRAPHIC_COORDINATES.Visible = True Then
                        If dt.Rows(0).Item("CARTOGRAPHIC_COORDINATES").ToString <> "" Then
                            txt_Hold_Coordinates.Text = dt.Rows(0).Item("CARTOGRAPHIC_COORDINATES").ToString
                        Else
                            txt_Hold_Coordinates.Text = ""
                        End If
                    End If

                    If TR_CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Visible = True Then
                        If dt.Rows(0).Item("CARTOGRAPHIC_GEOGRAPHIC_LOCATION").ToString <> "" Then
                            txt_Hold_GeographicLocation.Text = dt.Rows(0).Item("CARTOGRAPHIC_GEOGRAPHIC_LOCATION").ToString
                        Else
                            txt_Hold_GeographicLocation.Text = ""
                        End If
                    End If

                    If TR_CARTOGRAPHIC_MEDIUM.Visible = True Then
                        If dt.Rows(0).Item("CARTOGRAPHIC_MEDIUM").ToString <> "" Then
                            DDL_GeographicMedium.SelectedValue = dt.Rows(0).Item("CARTOGRAPHIC_MEDIUM").ToString
                        Else
                            DDL_GeographicMedium.ClearSelection()
                        End If
                    End If

                    If TR_CARTOGRAPHIC_DATAGATHERING_DATE.Visible = True Then
                        If dt.Rows(0).Item("CARTOGRAPHIC_DATAGATHERING_DATE").ToString <> "" Then
                            txt_Hold_DataGatheringDate.Text = Format(dt.Rows(0).Item("CARTOGRAPHIC_DATAGATHERING_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_DataGatheringDate.Text = ""
                        End If
                    End If

                    If TR_CREATION_DATE.Visible = True Then
                        If dt.Rows(0).Item("CREATION_DATE").ToString <> "" Then
                            txt_Hold_CreationDate.Text = Format(dt.Rows(0).Item("CREATION_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_CreationDate.Text = ""
                        End If
                    End If

                    If TR_CARTOGRAPHIC_COMPILATION_DATE.Visible = True Then
                        If dt.Rows(0).Item("CARTOGRAPHIC_COMPILATION_DATE").ToString <> "" Then
                            txt_Hold_CompilationDate.Text = Format(dt.Rows(0).Item("CARTOGRAPHIC_COMPILATION_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_CompilationDate.Text = ""
                        End If
                    End If

                    If TR_CARTOGRAPHIC_INSPECTION_DATE.Visible = True Then
                        If dt.Rows(0).Item("CARTOGRAPHIC_INSPECTION_DATE").ToString <> "" Then
                            txt_Hold_InspectionDate.Text = Format(dt.Rows(0).Item("CARTOGRAPHIC_INSPECTION_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_InspectionDate.Text = ""
                        End If
                    End If

                    If TR_ALTER_DATE.Visible = True Then
                        If dt.Rows(0).Item("ALTER_DATE").ToString <> "" Then
                            txt_Hold_AlterDate.Text = Format(dt.Rows(0).Item("ALTER_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_AlterDate.Text = ""
                        End If
                    End If

                    If TR_VIEW_DATE.Visible = True Then
                        If dt.Rows(0).Item("VIEW_DATE").ToString <> "" Then
                            txt_Hold_ViewDate.Text = Format(dt.Rows(0).Item("VIEW_DATE"), "dd/MM/yyyy")
                        Else
                            txt_Hold_ViewDate.Text = ""
                        End If
                    End If

                    If TR_VIDEO_COLOR.Visible = True Then
                        If dt.Rows(0).Item("VIDEO_COLOR").ToString <> "" Then
                            txt_Hold_Color.Text = dt.Rows(0).Item("VIDEO_COLOR").ToString
                        Else
                            txt_Hold_Color.Text = ""
                        End If
                    End If

                    If TR_PLAYBACK_CHANNELS.Visible = True Then
                        If dt.Rows(0).Item("PLAYBACK_CHANNELS").ToString <> "" Then
                            txt_Hold_PlayBackChannel.Text = dt.Rows(0).Item("PLAYBACK_CHANNELS").ToString
                        Else
                            txt_Hold_PlayBackChannel.Text = ""
                        End If
                    End If

                    If TR_TAPE_WIDTH.Visible = True Then
                        If dt.Rows(0).Item("TAPE_WIDTH").ToString <> "" Then
                            txt_Hold_TapeWidth.Text = dt.Rows(0).Item("TAPE_WIDTH").ToString
                        Else
                            txt_Hold_TapeWidth.Text = ""
                        End If
                    End If

                    If TR_TAPE_CONFIGURATION.Visible = True Then
                        If dt.Rows(0).Item("TAPE_CONFIGURATION").ToString <> "" Then
                            txt_Hold_TapeConfiguration.Text = dt.Rows(0).Item("TAPE_CONFIGURATION").ToString
                        Else
                            txt_Hold_TapeConfiguration.Text = ""
                        End If
                    End If


                    If TR_KIND_OF_DISK.Visible = True Then
                        If dt.Rows(0).Item("KIND_OF_DISK").ToString <> "" Then
                            txt_Hold_KindofDisk.Text = dt.Rows(0).Item("KIND_OF_DISK").ToString
                        Else
                            txt_Hold_KindofDisk.Text = ""
                        End If
                    End If

                    If TR_KIND_OF_CUTTING.Visible = True Then
                        If dt.Rows(0).Item("KIND_OF_CUTTING").ToString <> "" Then
                            txt_Hold_KindofCutting.Text = dt.Rows(0).Item("KIND_OF_CUTTING").ToString
                        Else
                            txt_Hold_KindofCutting.Text = ""
                        End If
                    End If


                    If TR_ENCODING_STANDARD.Visible = True Then
                        If dt.Rows(0).Item("ENCODING_STANDARD").ToString <> "" Then
                            txt_Hold_EncodingStandard.Text = dt.Rows(0).Item("ENCODING_STANDARD").ToString
                        Else
                            txt_Hold_EncodingStandard.Text = ""
                        End If
                    End If

                    If TR_CAPTURE_TECHNIQUE.Visible = True Then
                        If dt.Rows(0).Item("CAPTURE_TECHNIQUE").ToString <> "" Then
                            txt_Hold_CaptureTechnique.Text = dt.Rows(0).Item("CAPTURE_TECHNIQUE").ToString
                        Else
                            txt_Hold_CaptureTechnique.Text = ""
                        End If
                    End If

                    If TR_PHOTO_NO.Visible = True Then
                        If dt.Rows(0).Item("PHOTO_NO").ToString <> "" Then
                            txt_Hold_PhotoNo.Text = dt.Rows(0).Item("PHOTO_NO").ToString
                        Else
                            txt_Hold_PhotoNo.Text = ""
                        End If
                    End If

                    If TR_PHOTO_ALBUM_NO.Visible = True Then
                        If dt.Rows(0).Item("PHOTO_ALBUM_NO").ToString <> "" Then
                            txt_Hold_PhotoAlbumNo.Text = dt.Rows(0).Item("PHOTO_ALBUM_NO").ToString
                        Else
                            txt_Hold_PhotoAlbumNo.Text = ""
                        End If
                    End If

                    If TR_PHOTO_OCASION.Visible = True Then
                        If dt.Rows(0).Item("PHOTO_OCASION").ToString <> "" Then
                            txt_Hold_Ocasion.Text = dt.Rows(0).Item("PHOTO_OCASION").ToString
                        Else
                            txt_Hold_Ocasion.Text = ""
                        End If
                    End If

                    If TR_IMAGE_VIEW_TYPE.Visible = True Then
                        If dt.Rows(0).Item("IMAGE_VIEW_TYPE").ToString <> "" Then
                            txt_Hold_ImageViewType.Text = dt.Rows(0).Item("IMAGE_VIEW_TYPE").ToString
                        Else
                            txt_Hold_TapeConfiguration.Text = ""
                        End If
                    End If

                    If TR_THEME.Visible = True Then
                        If dt.Rows(0).Item("THEME").ToString <> "" Then
                            txt_Hold_Theme.Text = dt.Rows(0).Item("THEME").ToString
                        Else
                            txt_Hold_Theme.Text = ""
                        End If
                    End If

                    If TR_STYLE.Visible = True Then
                        If dt.Rows(0).Item("STYLE").ToString <> "" Then
                            txt_Hold_Style.Text = dt.Rows(0).Item("STYLE").ToString
                        Else
                            txt_Hold_Style.Text = ""
                        End If
                    End If

                    If TR_CULTURE.Visible = True Then
                        If dt.Rows(0).Item("CULTURE").ToString <> "" Then
                            txt_Hold_Culture.Text = dt.Rows(0).Item("CULTURE").ToString
                        Else
                            txt_Hold_Culture.Text = ""
                        End If
                    End If

                    If TR_CURRENT_SITE.Visible = True Then
                        If dt.Rows(0).Item("CURRENT_SITE").ToString <> "" Then
                            txt_Hold_CurrentSite.Text = dt.Rows(0).Item("CURRENT_SITE").ToString
                        Else
                            txt_Hold_CurrentSite.Text = ""
                        End If
                    End If

                    If TR_CREATION_SITE.Visible = True Then
                        If dt.Rows(0).Item("CREATION_SITE").ToString <> "" Then
                            txt_Hold_CreationDate.Text = dt.Rows(0).Item("CREATION_SITE").ToString
                        Else
                            txt_Hold_CreationSite.Text = ""
                        End If
                    End If

                    If TR_YARNCOUNT.Visible = True Then
                        If dt.Rows(0).Item("YARNCOUNT").ToString <> "" Then
                            txt_Hold_YarnCount.Text = dt.Rows(0).Item("YARNCOUNT").ToString
                        Else
                            txt_Hold_YarnCount.Text = ""
                        End If
                    End If

                    If TR_MATERIAL_TYPE.Visible = True Then
                        If dt.Rows(0).Item("MATERIAL_TYPE").ToString <> "" Then
                            txt_Hold_MaterialsType.Text = dt.Rows(0).Item("MATERIAL_TYPE").ToString
                        Else
                            txt_Hold_MaterialsType.Text = ""
                        End If
                    End If

                    If TR_TECHNIQUE.Visible = True Then
                        If dt.Rows(0).Item("TECHNIQUE").ToString <> "" Then
                            txt_Hold_Technique.Text = dt.Rows(0).Item("TECHNIQUE").ToString
                        Else
                            txt_Hold_Technique.Text = ""
                        End If
                    End If

                    If TR_TECH_DETAILS.Visible = True Then
                        If dt.Rows(0).Item("TECH_DETAILS").ToString <> "" Then
                            txt_Hold_TechDetails.Text = dt.Rows(0).Item("TECH_DETAILS").ToString
                        Else
                            txt_Hold_TechDetails.Text = ""
                        End If
                    End If

                    If TR_INSCRIPTIONS.Visible = True Then
                        If dt.Rows(0).Item("INSCRIPTIONS").ToString <> "" Then
                            txt_Hold_Inscription.Text = dt.Rows(0).Item("INSCRIPTIONS").ToString
                        Else
                            txt_Hold_Inscription.Text = ""
                        End If
                    End If

                    If TR_DESCRIPTION.Visible = True Then
                        If dt.Rows(0).Item("DESCRIPTION").ToString <> "" Then
                            txt_Hold_Description.Text = dt.Rows(0).Item("DESCRIPTION").ToString
                        Else
                            txt_Hold_Description.Text = ""
                        End If
                    End If

                    If TR_GLOBE_TYPE.Visible = True Then
                        If dt.Rows(0).Item("GLOBE_TYPE").ToString <> "" Then
                            txt_Hold_GlobeType.Text = dt.Rows(0).Item("GLOBE_TYPE").ToString
                        Else
                            txt_Hold_GlobeType.Text = ""
                        End If
                    End If


                End If
            End If
        Catch ex As Exception
            Label6.Text = "Error in Display of Copy/Acq Record " & (ex.Message())
            Label15.Text = ""
        Finally
            SqlConn.Close()
        End Try
    End Sub
    'save new holding/copy
    Protected Sub Acq_SaveCopy_Bttn_Click(ByVal sender As Object, ByVal e As EventArgs) Handles Acq_SaveCopy_Bttn.Click

        If IsPostBack = True Then
            If Label7.Text <> "" Then
                'check unwanted characters
                Dim iloop As Integer
                Dim strcurrentchar As Object
                Dim c As Integer
                Dim counter1, counter2, counter3, counter4, counter5, counter6, counter7, counter8, counter9, counter10, counter11, counter12, counter13, counter14, counter15, counter16, counter17, counter18, counter19 As Integer
                Dim counter20, counter21, counter22, counter23, counter24, counter25, counter26, counter27, counter28, counter29, counter30, counter31, counter32, counter33, counter34, counter35, counter36, counter37, counter38, counter39 As Integer
                Dim counter40, counter41, counter42, counter43, counter44, counter45, counter46, counter47, counter48, counter49, counter50, counter51, counter52, counter53, counter54 As Integer
                Dim counter55, counter56, counter57, counter58, counter59, counter60, counter61, counter62, counter63, counter64, counter65, counter66, counter67, counter68, counter69, counter70 As Integer
                Dim counter71, counter72, counter73, counter74, counter75 As Integer
                Dim counter76, counter77, counter78, counter79, counter80, counter81, counter82 As Integer
                Dim thisTransaction As SqlClient.SqlTransaction = Nothing

                Dim intAcqID As Integer = 0
                Try
                    '**************************************************************************************************************************
                    'if range of accn no  then chk if it is numeric
                    If CB_RecvAll.Checked = True Then
                        Dim ACCESSION_TEST As Object = Nothing
                        If txt_Hold_AccNo.Text <> "" Then
                            ACCESSION_TEST = TrimX(UCase(txt_Hold_AccNo.Text))
                            ACCESSION_TEST = RemoveQuotes(ACCESSION_TEST)
                        Else
                            Label6.Text = "Accession No and Accession Date are must!"
                            Label15.Text = ""
                            Me.txt_Hold_AccNo.Focus()
                            Exit Sub
                        End If
                        If IsNumeric(ACCESSION_TEST) = False Then
                            Label6.Text = "In Case you wish to Accession in bulk Then Plz Enter Accession Series(if any) in Sereis Text Box and Enter ACCESSION NO in Digits Only !"
                            Label15.Text = ""
                            Me.txt_Hold_AccNo.Focus()
                            Exit Sub
                        End If
                    End If
                    '*************************************************************************************************************************
                    'GET HOLDINGS VARIABLE
                    'txt_Hold_AccSereis
                    Dim counter85, counter86, counter87, counter88, counter89, counter90, counter91, counter92, counter93, counter94, counter95, counter96, counter97, counter98, counter99 As Integer
                    Dim counter100, counter101, counter102, counter103, counter104, counter105, counter106, counter107, counter108, counter109, counter110, counter111, counter112, counter113 As Integer


                    Dim ACCESSION_SERIES As Object = Nothing
                    If txt_Hold_AccSereis.Text <> "" Then
                        ACCESSION_SERIES = TrimX(UCase(txt_Hold_AccSereis.Text))
                        ACCESSION_SERIES = RemoveQuotes(ACCESSION_SERIES)
                        If ACCESSION_SERIES.Length > 10 Then 'maximum length
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Hold_AccSereis.Focus()
                            Exit Sub
                        End If

                        ACCESSION_SERIES = " " & ACCESSION_SERIES & " "
                        If InStr(1, ACCESSION_SERIES, "CREATE", 1) > 0 Or InStr(1, ACCESSION_SERIES, "DELETE", 1) > 0 Or InStr(1, ACCESSION_SERIES, "DROP", 1) > 0 Or InStr(1, ACCESSION_SERIES, "INSERT", 1) > 1 Or InStr(1, ACCESSION_SERIES, "TRACK", 1) > 1 Or InStr(1, ACCESSION_SERIES, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            Me.txt_Hold_AccSereis.Focus()
                            Exit Sub
                        End If
                        ACCESSION_SERIES = TrimX(ACCESSION_SERIES)
                        'check unwanted characters
                        c = 0
                        counter85 = 0
                        For iloop = 1 To Len(ACCESSION_SERIES.ToString)
                            strcurrentchar = Mid(ACCESSION_SERIES, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#$^*+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter85 = 1
                                End If
                            End If
                        Next
                        If counter85 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            Me.txt_Hold_AccSereis.Focus()
                            Exit Sub
                        End If
                    Else
                        ACCESSION_SERIES = ""
                    End If


                    'Server Validation for accession no
                    Dim ACCESSION_NO As Object = Nothing
                    If txt_Hold_AccNo.Text <> "" Then
                        ACCESSION_NO = TrimX(UCase(txt_Hold_AccNo.Text))
                        ACCESSION_NO = RemoveQuotes(ACCESSION_NO)
                        If ACCESSION_NO.Length > 30 Then 'maximum length
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            txt_Hold_AccNo.Focus()
                            Exit Sub
                        End If

                        ACCESSION_NO = " " & ACCESSION_NO & " "
                        If InStr(1, ACCESSION_NO, "CREATE", 1) > 0 Or InStr(1, ACCESSION_NO, "DELETE", 1) > 0 Or InStr(1, ACCESSION_NO, "DROP", 1) > 0 Or InStr(1, ACCESSION_NO, "INSERT", 1) > 1 Or InStr(1, ACCESSION_NO, "TRACK", 1) > 1 Or InStr(1, ACCESSION_NO, "TRACE", 1) > 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            Me.txt_Hold_AccNo.Focus()
                            Exit Sub
                        End If
                        ACCESSION_NO = TrimX(ACCESSION_NO)
                        'check unwanted characters
                        c = 0
                        counter86 = 0
                        For iloop = 1 To Len(ACCESSION_NO.ToString)
                            strcurrentchar = Mid(ACCESSION_NO, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'~!@#$^*+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter86 = 1
                                End If
                            End If
                        Next
                        If counter86 = 1 Then
                            Label6.Text = "Error: Input is not Valid !"
                            Label15.Text = ""
                            Me.txt_Hold_AccNo.Focus()
                            Exit Sub
                        End If

                        'if range of accn no  then chk if it is numeric
                        If CB_RecvAll.Checked = True Then
                            If IsNumeric(ACCESSION_NO) = False Then
                                Label6.Text = "In Case you wish to Accession in bulk Then Plz Enter Accession Series(if any) in Sereis Text Box and Enter ACCESSION NO in Digits Only !"
                                Label15.Text = ""
                                Me.txt_Hold_AccNo.Focus()
                                Exit Sub
                            End If

                            If txt_Hold_Copies.Text = "" Then
                                Label6.Text = "Plz Enter No of Copies u wish to accession"
                                Label15.Text = ""
                                Me.txt_Hold_Copies.Focus()
                                Exit Sub
                            End If
                        End If

                        'add sereis with acc no
                        If ACCESSION_SERIES <> "" Then
                            ACCESSION_NO = ACCESSION_SERIES + ACCESSION_NO
                        End If

                        'check duplicate acc no
                        Dim str As Object = Nothing
                        Dim flag As Object = Nothing
                        str = "SELECT HOLD_ID FROM HOLDINGS WHERE (ACCESSION_NO = '" & Trim(ACCESSION_NO) & "')  AND (LIB_CODE = '" & Trim(DDL_Library.SelectedValue) & "')"
                        Dim cmd1 As New SqlCommand(str, SqlConn)
                        SqlConn.Open()
                        flag = cmd1.ExecuteScalar
                        If flag <> Nothing Then
                            Label6.Text = "This Accession No Already Exists ! "
                            Label15.Text = ""
                            Me.txt_Hold_AccNo.Focus()
                            Exit Sub
                        End If
                        SqlConn.Close()
                    Else
                        Label6.Text = "Error: Accession No is Required !"
                        Label15.Text = ""
                        Me.txt_Hold_AccNo.Focus()
                        Exit Sub
                    End If

                    'search accession date
                    Dim ACCESSION_DATE As Object = Nothing
                    If txt_Hold_AccDate.Text <> "" Then
                        ACCESSION_DATE = TrimX(txt_Hold_AccDate.Text)
                        ACCESSION_DATE = RemoveQuotes(ACCESSION_DATE)
                        ACCESSION_DATE = Convert.ToDateTime(ACCESSION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                        If Len(ACCESSION_DATE) > 12 Then
                            Label6.Text = " Input is not Valid..."
                            Label15.Text = ""
                            Me.txt_Hold_AccDate.Focus()
                            Exit Sub
                        End If
                        ACCESSION_DATE = " " & ACCESSION_DATE & " "
                        If InStr(1, ACCESSION_DATE, "CREATE", 1) > 0 Or InStr(1, ACCESSION_DATE, "DELETE", 1) > 0 Or InStr(1, ACCESSION_DATE, "DROP", 1) > 0 Or InStr(1, ACCESSION_DATE, "INSERT", 1) > 1 Or InStr(1, ACCESSION_DATE, "TRACK", 1) > 1 Or InStr(1, ACCESSION_DATE, "TRACE", 1) > 1 Then
                            Label6.Text = "  Input is not Valid... "
                            Label15.Text = ""
                            Me.txt_Hold_AccDate.Focus()
                            Exit Sub
                        End If
                        ACCESSION_DATE = TrimX(ACCESSION_DATE)
                        'check unwanted characters
                        c = 0
                        counter87 = 0
                        For iloop = 1 To Len(ACCESSION_DATE)
                            strcurrentchar = Mid(ACCESSION_DATE, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter87 = 1
                                End If
                            End If
                        Next
                        If counter87 = 1 Then
                            Label6.Text = "data is not Valid... "
                            Label15.Text = ""
                            Me.txt_Hold_AccDate.Focus()
                            Exit Sub
                        End If
                    Else
                        ACCESSION_DATE = Now.Date
                        ACCESSION_DATE = Convert.ToDateTime(ACCESSION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us
                    End If

                    'validation for Format
                    Dim FORMAT_CODE As Object = Nothing
                    If TR_FORMAT_CODE.Visible = True Then
                        FORMAT_CODE = DDL_Format.SelectedValue
                        If Not String.IsNullOrEmpty(FORMAT_CODE) Then
                            FORMAT_CODE = RemoveQuotes(FORMAT_CODE)
                            If FORMAT_CODE.Length > 3 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                DDL_Format.Focus()
                                Exit Sub
                            End If

                            FORMAT_CODE = " " & FORMAT_CODE & " "
                            If InStr(1, FORMAT_CODE, "CREATE", 1) > 0 Or InStr(1, FORMAT_CODE, "DELETE", 1) > 0 Or InStr(1, FORMAT_CODE, "DROP", 1) > 0 Or InStr(1, FORMAT_CODE, "INSERT", 1) > 1 Or InStr(1, FORMAT_CODE, "TRACK", 1) > 1 Or InStr(1, FORMAT_CODE, "TRACE", 1) > 1 Then
                                ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                                DDL_Format.Focus()
                                Exit Sub
                            End If
                            FORMAT_CODE = TrimX(FORMAT_CODE)
                            'check unwanted characters
                            c = 0
                            counter88 = 0
                            For iloop = 1 To Len(FORMAT_CODE)
                                strcurrentchar = Mid(FORMAT_CODE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter88 = 1
                                    End If
                                End If
                            Next
                            If counter88 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                DDL_Format.Focus()
                                Exit Sub
                            End If
                        Else
                            FORMAT_CODE = "PT"
                        End If
                    Else
                        FORMAT_CODE = "PT"
                    End If

                    'validation for SHOW
                    Dim SHOW As Object = Nothing
                    SHOW = DDL_Show.SelectedValue
                    If Not String.IsNullOrEmpty(SHOW) Then
                        SHOW = RemoveQuotes(SHOW)
                        If SHOW.Length > 2 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            DDL_Show.Focus()
                            Exit Sub
                        End If

                        SHOW = " " & SHOW & " "
                        If InStr(1, SHOW, "CREATE", 1) > 0 Or InStr(1, SHOW, "DELETE", 1) > 0 Or InStr(1, SHOW, "DROP", 1) > 0 Or InStr(1, SHOW, "INSERT", 1) > 1 Or InStr(1, SHOW, "TRACK", 1) > 1 Or InStr(1, SHOW, "TRACE", 1) > 1 Then
                            DDL_Show.Focus()
                            Exit Sub
                        End If
                        SHOW = TrimX(SHOW)
                        'check unwanted characters
                        c = 0
                        counter89 = 0
                        For iloop = 1 To Len(SHOW)
                            strcurrentchar = Mid(SHOW, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter89 = 1
                                End If
                            End If
                        Next
                        If counter89 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            DDL_Show.Focus()
                            Exit Sub
                        End If
                    Else
                        SHOW = "Y"
                    End If

                    'validation for ISSUABLE
                    Dim ISSUABLE As Object = Nothing
                    ISSUABLE = DDL_Issuable.SelectedValue
                    If Not String.IsNullOrEmpty(ISSUABLE) Then
                        ISSUABLE = RemoveQuotes(ISSUABLE)
                        If ISSUABLE.Length > 2 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            DDL_Issuable.Focus()
                            Exit Sub
                        End If

                        ISSUABLE = " " & ISSUABLE & " "
                        If InStr(1, ISSUABLE, "CREATE", 1) > 0 Or InStr(1, ISSUABLE, "DELETE", 1) > 0 Or InStr(1, ISSUABLE, "DROP", 1) > 0 Or InStr(1, ISSUABLE, "INSERT", 1) > 1 Or InStr(1, ISSUABLE, "TRACK", 1) > 1 Or InStr(1, ISSUABLE, "TRACE", 1) > 1 Then
                            DDL_Issuable.Focus()
                            Exit Sub
                        End If
                        ISSUABLE = TrimX(ISSUABLE)
                        'check unwanted characters
                        c = 0
                        counter90 = 0
                        For iloop = 1 To Len(ISSUABLE)
                            strcurrentchar = Mid(ISSUABLE, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter90 = 1
                                End If
                            End If
                        Next
                        If counter90 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            DDL_Issuable.Focus()
                            Exit Sub
                        End If
                    Else
                        ISSUABLE = "Y"
                    End If

                    'validation for VOL_NO
                    Dim VOL_NO As Object = Nothing
                    If TR_VOL_NO.Visible = True Then
                        VOL_NO = Trim(txt_Hold_VolNo.Text)
                        If Not String.IsNullOrEmpty(VOL_NO) Then
                            VOL_NO = RemoveQuotes(VOL_NO)
                            If VOL_NO.Length > 30 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_VolNo.Focus()
                                Exit Sub
                            End If

                            VOL_NO = " " & VOL_NO & " "
                            If InStr(1, VOL_NO, "CREATE", 1) > 0 Or InStr(1, VOL_NO, "DELETE", 1) > 0 Or InStr(1, VOL_NO, "DROP", 1) > 0 Or InStr(1, VOL_NO, "INSERT", 1) > 1 Or InStr(1, VOL_NO, "TRACK", 1) > 1 Or InStr(1, VOL_NO, "TRACE", 1) > 1 Then
                                txt_Hold_VolNo.Focus()
                                Exit Sub
                            End If
                            VOL_NO = TrimAll(VOL_NO)
                            'check unwanted characters
                            c = 0
                            counter91 = 0
                            For iloop = 1 To Len(VOL_NO)
                                strcurrentchar = Mid(VOL_NO, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter91 = 1
                                    End If
                                End If
                            Next
                            If counter91 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                txt_Hold_VolNo.Focus()
                                Exit Sub
                            End If
                        Else
                            VOL_NO = ""
                        End If
                    Else
                        VOL_NO = ""
                    End If

                    'validation for cat_no
                    Dim VOL_YEAR As Integer = Nothing
                    If TR_VOL_NO.Visible = True Then
                        If Me.txt_Hold_VolYear.Text <> "" Then
                            VOL_YEAR = Convert.ToInt16(TrimX(txt_Hold_VolYear.Text))
                            VOL_YEAR = RemoveQuotes(VOL_YEAR)
                            If Not IsNumeric(VOL_YEAR) = True Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                txt_Hold_VolYear.Focus()
                                Exit Sub
                            End If
                            If Len(VOL_YEAR) > 5 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                txt_Hold_VolYear.Focus()
                                Exit Sub
                            End If
                            VOL_YEAR = " " & VOL_YEAR & " "
                            If InStr(1, VOL_YEAR, "CREATE", 1) > 0 Or InStr(1, VOL_YEAR, "DELETE", 1) > 0 Or InStr(1, VOL_YEAR, "DROP", 1) > 0 Or InStr(1, VOL_YEAR, "INSERT", 1) > 1 Or InStr(1, VOL_YEAR, "TRACK", 1) > 1 Or InStr(1, VOL_YEAR, "TRACE", 1) > 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                txt_Hold_VolYear.Focus()
                                Exit Sub
                            End If
                            VOL_YEAR = TrimX(VOL_YEAR)
                            'check unwanted characters
                            c = 0
                            counter92 = 0
                            For iloop = 1 To Len(VOL_YEAR.ToString)
                                strcurrentchar = Mid(VOL_YEAR, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter92 = 1
                                    End If
                                End If
                            Next
                            If counter93 = 1 Then
                                Label6.Text = "Error: Input is not Valid !"
                                Label15.Text = ""
                                txt_Hold_VolYear.Focus()
                                Exit Sub
                            End If
                        Else
                            VOL_YEAR = 0
                        End If
                    Else
                        VOL_YEAR = 0
                    End If

                    'validation for VOL_EDITORS
                    Dim VOL_EDITORS As Object = Nothing
                    If TR_VOL_EDITORS.Visible = True Then
                        VOL_EDITORS = TrimAll(txt_Hold_VolEditors.Text)
                        If Not String.IsNullOrEmpty(VOL_EDITORS) Then
                            VOL_EDITORS = RemoveQuotes(VOL_EDITORS)
                            If VOL_EDITORS.Length > 501 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_VolEditors.Focus()
                                Exit Sub
                            End If

                            VOL_EDITORS = " " & VOL_EDITORS & " "
                            If InStr(1, VOL_EDITORS, "CREATE", 1) > 0 Or InStr(1, VOL_EDITORS, "DELETE", 1) > 0 Or InStr(1, VOL_EDITORS, "DROP", 1) > 0 Or InStr(1, VOL_EDITORS, "INSERT", 1) > 1 Or InStr(1, VOL_EDITORS, "TRACK", 1) > 1 Or InStr(1, VOL_EDITORS, "TRACE", 1) > 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                txt_Hold_VolEditors.Focus()
                                Exit Sub
                            End If
                            VOL_EDITORS = TrimAll(VOL_EDITORS)
                            'check unwanted characters
                            c = 0
                            counter94 = 0
                            For iloop = 1 To Len(VOL_EDITORS)
                                strcurrentchar = Mid(VOL_EDITORS, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter94 = 1
                                    End If
                                End If
                            Next
                            If counter94 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                txt_Hold_VolEditors.Focus()
                                Exit Sub
                            End If
                        Else
                            VOL_EDITORS = ""
                        End If
                    Else
                        VOL_EDITORS = ""
                    End If

                    'validation for VOL_TITLE
                    Dim VOL_TITLE As Object = Nothing
                    If TR_VOL_TITLE.Visible = True Then
                        VOL_TITLE = TrimAll(txt_Hold_VolTitle.Text)
                        If Not String.IsNullOrEmpty(VOL_TITLE) Then
                            VOL_TITLE = RemoveQuotes(VOL_TITLE)
                            If VOL_TITLE.Length > 501 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_VolTitle.Focus()
                                Exit Sub
                            End If

                            VOL_TITLE = " " & VOL_TITLE & " "
                            If InStr(1, VOL_TITLE, "CREATE", 1) > 0 Or InStr(1, VOL_TITLE, "DELETE", 1) > 0 Or InStr(1, VOL_TITLE, "DROP", 1) > 0 Or InStr(1, VOL_TITLE, "INSERT", 1) > 1 Or InStr(1, VOL_TITLE, "TRACK", 1) > 1 Or InStr(1, VOL_TITLE, "TRACE", 1) > 1 Then
                                txt_Hold_VolTitle.Focus()
                                Exit Sub
                            End If
                            VOL_TITLE = TrimAll(VOL_TITLE)
                            'check unwanted characters
                            c = 0
                            counter95 = 0
                            For iloop = 1 To Len(VOL_TITLE)
                                strcurrentchar = Mid(VOL_TITLE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter95 = 1
                                    End If
                                End If
                            Next
                            If counter95 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                txt_Hold_VolTitle.Focus()
                                Exit Sub
                            End If
                        Else
                            VOL_TITLE = ""
                        End If
                    Else
                        VOL_TITLE = ""
                    End If

                    'validation for VOL_ISBN
                    Dim COPY_ISBN As Object = Nothing
                    If TR_VOL_NO.Visible = True Then
                        COPY_ISBN = TrimX(txt_Hold_CopyISBN.Text)
                        If Not String.IsNullOrEmpty(COPY_ISBN) Then
                            COPY_ISBN = RemoveQuotes(COPY_ISBN)
                            If COPY_ISBN.Length > 30 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_CopyISBN.Focus()
                                Exit Sub
                            End If

                            COPY_ISBN = " " & COPY_ISBN & " "
                            If InStr(1, COPY_ISBN, "CREATE", 1) > 0 Or InStr(1, COPY_ISBN, "DELETE", 1) > 0 Or InStr(1, COPY_ISBN, "DROP", 1) > 0 Or InStr(1, COPY_ISBN, "INSERT", 1) > 1 Or InStr(1, COPY_ISBN, "TRACK", 1) > 1 Or InStr(1, COPY_ISBN, "TRACE", 1) > 1 Then
                                ClientScript.RegisterStartupScript(Me.GetType(), "myalert", "alert(' Input is not Valid... ');", True)
                                Label6.Text = "Do not use reserved Words!"
                                Label15.Text = ""
                                txt_Hold_CopyISBN.Focus()
                                Exit Sub
                            End If
                            COPY_ISBN = TrimX(COPY_ISBN)
                            'check unwanted characters
                            c = 0
                            counter96 = 0
                            For iloop = 1 To Len(COPY_ISBN)
                                strcurrentchar = Mid(COPY_ISBN, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter96 = 1
                                    End If
                                End If
                            Next
                            If counter96 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                txt_Hold_CopyISBN.Focus()
                                Exit Sub
                            End If
                        Else
                            COPY_ISBN = ""
                        End If
                    Else
                        COPY_ISBN = ""
                    End If

                    'validation for CLASS NO
                    Dim CLASS_NO As Object = Nothing
                    If TR_CLASS_NO.Visible = True Then
                        CLASS_NO = TrimX(txt_Hold_ClassNo.Text)
                        If Not String.IsNullOrEmpty(CLASS_NO) Then
                            CLASS_NO = RemoveQuotes(CLASS_NO)
                            If CLASS_NO.Length > 150 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_ClassNo.Focus()
                                Exit Sub
                            End If

                            CLASS_NO = " " & CLASS_NO & " "
                            If InStr(1, CLASS_NO, "CREATE", 1) > 0 Or InStr(1, CLASS_NO, "DELETE", 1) > 0 Or InStr(1, CLASS_NO, "DROP", 1) > 0 Or InStr(1, CLASS_NO, "INSERT", 1) > 1 Or InStr(1, CLASS_NO, "TRACK", 1) > 1 Or InStr(1, CLASS_NO, "TRACE", 1) > 1 Then
                                Label6.Text = "Do not use reserved Words!"
                                Label15.Text = ""
                                txt_Hold_ClassNo.Focus()
                                Exit Sub
                            End If
                            CLASS_NO = TrimX(CLASS_NO)
                            'check unwanted characters
                            c = 0
                            counter97 = 0
                            For iloop = 1 To Len(CLASS_NO)
                                strcurrentchar = Mid(CLASS_NO, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter97 = 1
                                    End If
                                End If
                            Next
                            If counter97 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                txt_Hold_ClassNo.Focus()
                                Exit Sub
                            End If
                        Else
                            CLASS_NO = ""
                        End If
                    Else
                        CLASS_NO = ""
                    End If

                    'validation for CLASS NO
                    Dim BOOK_NO As Object = Nothing
                    If TR_CLASS_NO.Visible = True Then
                        BOOK_NO = TrimAll(UCase(txt_Hold_BookNo.Text))
                        If Not String.IsNullOrEmpty(BOOK_NO) Then
                            BOOK_NO = RemoveQuotes(BOOK_NO)
                            If BOOK_NO.Length > 50 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_BookNo.Focus()
                                Exit Sub
                            End If

                            BOOK_NO = " " & BOOK_NO & " "
                            If InStr(1, BOOK_NO, "CREATE", 1) > 0 Or InStr(1, BOOK_NO, "DELETE", 1) > 0 Or InStr(1, BOOK_NO, "DROP", 1) > 0 Or InStr(1, BOOK_NO, "INSERT", 1) > 1 Or InStr(1, BOOK_NO, "TRACK", 1) > 1 Or InStr(1, BOOK_NO, "TRACE", 1) > 1 Then
                                Label6.Text = "Do not use reserved Words!"
                                Label15.Text = ""
                                txt_Hold_BookNo.Focus()
                                Exit Sub
                            End If
                            BOOK_NO = TrimAll(BOOK_NO)
                            'check unwanted characters
                            c = 0
                            counter98 = 0
                            For iloop = 1 To Len(BOOK_NO)
                                strcurrentchar = Mid(BOOK_NO, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter98 = 1
                                    End If
                                End If
                            Next
                            If counter98 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                txt_Hold_BookNo.Focus()
                                Exit Sub
                            End If
                        Else
                            BOOK_NO = ""
                        End If
                    Else
                        BOOK_NO = ""
                    End If

                    'validation for PAGES
                    Dim PAGINATION As Object = Nothing
                    If TR_PAGINATION.Visible = True Then
                        PAGINATION = TrimAll(txt_Hold_Pages.Text)
                        If Not String.IsNullOrEmpty(PAGINATION) Then
                            PAGINATION = RemoveQuotes(PAGINATION)
                            If CLASS_NO.Length > 50 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_Pages.Focus()
                                Exit Sub
                            End If

                            PAGINATION = " " & PAGINATION & " "
                            If InStr(1, PAGINATION, "CREATE", 1) > 0 Or InStr(1, PAGINATION, "DELETE", 1) > 0 Or InStr(1, PAGINATION, "DROP", 1) > 0 Or InStr(1, PAGINATION, "INSERT", 1) > 1 Or InStr(1, PAGINATION, "TRACK", 1) > 1 Or InStr(1, PAGINATION, "TRACE", 1) > 1 Then
                                Label6.Text = "Do not use reserved Words!"
                                Label15.Text = ""
                                txt_Hold_Pages.Focus()
                                Exit Sub
                            End If
                            PAGINATION = TrimAll(PAGINATION)
                            'check unwanted characters
                            c = 0
                            counter99 = 0
                            For iloop = 1 To Len(PAGINATION)
                                strcurrentchar = Mid(PAGINATION, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter99 = 1
                                    End If
                                End If
                            Next
                            If counter99 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                txt_Hold_Pages.Focus()
                                Exit Sub
                            End If
                            If InStr(PAGINATION, "p.") = 0 Then
                                PAGINATION = PAGINATION + "p."
                            End If
                            If InStr(PAGINATION, "..") <> 0 Then
                                PAGINATION = PAGINATION + "."
                            End If
                            If InStr(PAGINATION, "pp.") <> 0 Then
                                PAGINATION = PAGINATION + "p."
                            End If
                            If InStr(PAGINATION, "p.p.") <> 0 Then
                                PAGINATION = PAGINATION + "p."
                            End If
                        Else
                            PAGINATION = ""
                        End If
                    Else
                        PAGINATION = ""
                    End If

                    'validation for SIZE
                    Dim SIZE As Object = Nothing
                    If TR_SIZE.Visible = True Then
                        SIZE = TrimAll(txt_Hold_Size.Text)
                        If Not String.IsNullOrEmpty(SIZE) Then
                            SIZE = RemoveQuotes(SIZE)
                            If SIZE.Length > 50 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_Size.Focus()
                                Exit Sub
                            End If

                            SIZE = " " & SIZE & " "
                            If InStr(1, SIZE, "CREATE", 1) > 0 Or InStr(1, SIZE, "DELETE", 1) > 0 Or InStr(1, SIZE, "DROP", 1) > 0 Or InStr(1, SIZE, "INSERT", 1) > 1 Or InStr(1, SIZE, "TRACK", 1) > 1 Or InStr(1, SIZE, "TRACE", 1) > 1 Then
                                Label6.Text = "Do not use reserved Words!"
                                Label15.Text = ""
                                txt_Hold_Size.Focus()
                                Exit Sub
                            End If
                            SIZE = TrimAll(SIZE)
                            'check unwanted characters
                            c = 0
                            counter100 = 0
                            For iloop = 1 To Len(SIZE)
                                strcurrentchar = Mid(SIZE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter100 = 1
                                    End If
                                End If
                            Next
                            If counter100 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                txt_Hold_Size.Focus()
                                Exit Sub
                            End If
                        Else
                            SIZE = ""
                        End If
                    Else
                        SIZE = ""
                    End If

                    Dim ILLUSTRATION As Object = Nothing
                    If TR_ILLUSTRATION.Visible = True Then
                        If CB_Illus.Checked = True Then
                            ILLUSTRATION = "Y"
                        Else
                            ILLUSTRATION = "N"
                        End If
                    Else
                        ILLUSTRATION = "N"
                    End If

                    'validation for COLLECTION TYPE
                    Dim COLLECTION_TYPE As Object = Nothing
                    If TR_COLLECTION_TYPE.Visible = True Then
                        COLLECTION_TYPE = DDL_CollectionType.SelectedValue
                        If Not String.IsNullOrEmpty(COLLECTION_TYPE) Then
                            COLLECTION_TYPE = RemoveQuotes(COLLECTION_TYPE)
                            If COLLECTION_TYPE.Length > 2 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                DDL_CollectionType.Focus()
                                Exit Sub
                            End If

                            COLLECTION_TYPE = " " & COLLECTION_TYPE & " "
                            If InStr(1, COLLECTION_TYPE, "CREATE", 1) > 0 Or InStr(1, COLLECTION_TYPE, "DELETE", 1) > 0 Or InStr(1, COLLECTION_TYPE, "DROP", 1) > 0 Or InStr(1, COLLECTION_TYPE, "INSERT", 1) > 1 Or InStr(1, COLLECTION_TYPE, "TRACK", 1) > 1 Or InStr(1, COLLECTION_TYPE, "TRACE", 1) > 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label1.Text = ""
                                DDL_CollectionType.Focus()
                                Exit Sub
                            End If
                            COLLECTION_TYPE = TrimX(COLLECTION_TYPE)
                            'check unwanted characters
                            c = 0
                            counter101 = 0
                            For iloop = 1 To Len(COLLECTION_TYPE)
                                strcurrentchar = Mid(COLLECTION_TYPE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter101 = 1
                                    End If
                                End If
                            Next
                            If counter101 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                DDL_CollectionType.Focus()
                                Exit Sub
                            End If
                        Else
                            COLLECTION_TYPE = "C"
                        End If
                    Else
                        COLLECTION_TYPE = "C"
                    End If

                    'validation for STATUS
                    Dim STA_CODE As Object = Nothing
                    If TR_STA_CODE.Visible = True Then
                        If DDL_Status.Text <> "" Then
                            STA_CODE = DDL_Status.SelectedValue
                            If STA_CODE = "2" Then
                                STA_CODE = "1"
                            End If
                        Else
                            STA_CODE = "1"
                        End If
                    Else
                        STA_CODE = "1"
                    End If


                    'validation for BINDING TYPE
                    Dim BIND_CODE As Object = Nothing
                    If TR_BIND_CODE.Visible = True Then
                        BIND_CODE = DDL_Binding.SelectedValue
                        If Not String.IsNullOrEmpty(BIND_CODE) Then
                            BIND_CODE = RemoveQuotes(BIND_CODE)
                            If BIND_CODE.Length > 11 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                DDL_Binding.Focus()
                                Exit Sub
                            End If

                            BIND_CODE = " " & BIND_CODE & " "
                            If InStr(1, BIND_CODE, "CREATE", 1) > 0 Or InStr(1, BIND_CODE, "DELETE", 1) > 0 Or InStr(1, BIND_CODE, "DROP", 1) > 0 Or InStr(1, BIND_CODE, "INSERT", 1) > 1 Or InStr(1, BIND_CODE, "TRACK", 1) > 1 Or InStr(1, BIND_CODE, "TRACE", 1) > 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                DDL_Binding.Focus()
                                Exit Sub
                            End If
                            BIND_CODE = TrimX(BIND_CODE)
                            'check unwanted characters
                            c = 0
                            counter102 = 0
                            For iloop = 1 To Len(BIND_CODE)
                                strcurrentchar = Mid(BIND_CODE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter102 = 1
                                    End If
                                End If
                            Next
                            If counter102 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                DDL_Binding.Focus()
                                Exit Sub
                            End If
                        Else
                            BIND_CODE = "U"
                        End If
                    Else
                        BIND_CODE = "U"
                    End If

                    'validation for SECTION
                    Dim SEC_CODE As Object = Nothing
                    If TR_SEC_CODE.Visible = True Then
                        SEC_CODE = DDL_Section.SelectedValue
                        If Not String.IsNullOrEmpty(SEC_CODE) Then
                            SEC_CODE = RemoveQuotes(SEC_CODE)
                            If SEC_CODE.Length > 11 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                DDL_Section.Focus()
                                Exit Sub
                            End If

                            SEC_CODE = " " & SEC_CODE & " "
                            If InStr(1, SEC_CODE, "CREATE", 1) > 0 Or InStr(1, SEC_CODE, "DELETE", 1) > 0 Or InStr(1, SEC_CODE, "DROP", 1) > 0 Or InStr(1, SEC_CODE, "INSERT", 1) > 1 Or InStr(1, SEC_CODE, "TRACK", 1) > 1 Or InStr(1, SEC_CODE, "TRACE", 1) > 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                DDL_Section.Focus()
                                Exit Sub
                            End If
                            SEC_CODE = TrimX(SEC_CODE)
                            'check unwanted characters
                            c = 0
                            counter103 = 0
                            For iloop = 1 To Len(SEC_CODE)
                                strcurrentchar = Mid(SEC_CODE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'<>=()%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter103 = 1
                                    End If
                                End If
                            Next
                            If counter103 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                DDL_Section.Focus()
                                Exit Sub
                            End If
                        Else
                            SEC_CODE = ""
                        End If
                    Else
                        SEC_CODE = ""
                    End If

                    'validation for holding Library
                    Dim HOLD_LIB_CODE As Object = Nothing
                    HOLD_LIB_CODE = DDL_Library.SelectedValue
                    If Not String.IsNullOrEmpty(HOLD_LIB_CODE) Then
                        HOLD_LIB_CODE = RemoveQuotes(HOLD_LIB_CODE)
                        If HOLD_LIB_CODE.Length > 11 Then 'maximum length
                            Label6.Text = " Data must be of Proper Length.. "
                            Label15.Text = ""
                            DDL_Library.Focus()
                            Exit Sub
                        End If

                        HOLD_LIB_CODE = " " & HOLD_LIB_CODE & " "
                        If InStr(1, HOLD_LIB_CODE, "CREATE", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "DELETE", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "DROP", 1) > 0 Or InStr(1, HOLD_LIB_CODE, "INSERT", 1) > 1 Or InStr(1, HOLD_LIB_CODE, "TRACK", 1) > 1 Or InStr(1, HOLD_LIB_CODE, "TRACE", 1) > 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            DDL_Library.Focus()
                            Exit Sub
                        End If
                        HOLD_LIB_CODE = TrimX(HOLD_LIB_CODE)
                        'check unwanted characters
                        c = 0
                        counter104 = 0
                        For iloop = 1 To Len(HOLD_LIB_CODE)
                            strcurrentchar = Mid(HOLD_LIB_CODE, iloop, 1)
                            If c = 0 Then
                                If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                    c = c + 1
                                    counter104 = 1
                                End If
                            End If
                        Next
                        If counter104 = 1 Then
                            Label6.Text = " Input  is not Valid!"
                            Label15.Text = ""
                            DDL_Library.Focus()
                            Exit Sub
                        End If
                    Else
                        HOLD_LIB_CODE = LibCode
                    End If

                    'validation for accompanying materials
                    Dim ACC_MAT_CODE As Object = Nothing
                    If TR_ACC_MAT_CODE.Visible = True Then
                        ACC_MAT_CODE = DDL_AccMaterials.SelectedValue
                        If Not String.IsNullOrEmpty(ACC_MAT_CODE) Then
                            ACC_MAT_CODE = RemoveQuotes(ACC_MAT_CODE)
                            If ACC_MAT_CODE.Length > 11 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label1.Text = ""
                                DDL_AccMaterials.Focus()
                                Exit Sub
                            End If

                            ACC_MAT_CODE = " " & ACC_MAT_CODE & " "
                            If InStr(1, ACC_MAT_CODE, "CREATE", 1) > 0 Or InStr(1, ACC_MAT_CODE, "DELETE", 1) > 0 Or InStr(1, ACC_MAT_CODE, "DROP", 1) > 0 Or InStr(1, ACC_MAT_CODE, "INSERT", 1) > 1 Or InStr(1, ACC_MAT_CODE, "TRACK", 1) > 1 Or InStr(1, ACC_MAT_CODE, "TRACE", 1) > 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label1.Text = ""
                                DDL_AccMaterials.Focus()
                                Exit Sub
                            End If
                            ACC_MAT_CODE = TrimX(ACC_MAT_CODE)
                            'check unwanted characters
                            c = 0
                            counter105 = 0
                            For iloop = 1 To Len(ACC_MAT_CODE)
                                strcurrentchar = Mid(ACC_MAT_CODE, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'<>=%""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter105 = 1
                                    End If
                                End If
                            Next
                            If counter105 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                DDL_AccMaterials.Focus()
                                Exit Sub
                            End If
                        Else
                            ACC_MAT_CODE = ""
                        End If
                    Else
                        ACC_MAT_CODE = ""
                    End If

                    'validation for REMARKS
                    Dim REMARKS As Object = Nothing
                    If TR_Remarks.Visible = True Then
                        REMARKS = TrimAll(txt_Hold_Remarks.Text)
                        If Not String.IsNullOrEmpty(REMARKS) Then
                            REMARKS = RemoveQuotes(REMARKS)
                            If REMARKS.Length > 251 Then 'maximum length
                                Label6.Text = "Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_Remarks.Focus()
                                Exit Sub
                            End If
                        Else
                            REMARKS = ""
                        End If
                    Else
                        REMARKS = ""
                    End If

                    'validation for Physical Location
                    Dim PHYSICAL_LOCATION As Object = Nothing
                    If TR_Remarks.Visible = True Then
                        PHYSICAL_LOCATION = TrimAll(txt_Hold_Location.Text)
                        If Not String.IsNullOrEmpty(PHYSICAL_LOCATION) Then
                            PHYSICAL_LOCATION = RemoveQuotes(PHYSICAL_LOCATION)
                            If PHYSICAL_LOCATION.Length > 50 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_Location.Focus()
                                Exit Sub
                            End If

                            PHYSICAL_LOCATION = " " & PHYSICAL_LOCATION & " "
                            If InStr(1, PHYSICAL_LOCATION, "CREATE", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "DELETE", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "DROP", 1) > 0 Or InStr(1, PHYSICAL_LOCATION, "INSERT", 1) > 1 Or InStr(1, PHYSICAL_LOCATION, "TRACK", 1) > 1 Or InStr(1, PHYSICAL_LOCATION, "TRACE", 1) > 1 Then
                                Label6.Text = "Do not use reserved Words!"
                                Label15.Text = ""
                                txt_Hold_Location.Focus()
                                Exit Sub
                            End If
                            PHYSICAL_LOCATION = TrimAll(PHYSICAL_LOCATION)
                            'check unwanted characters
                            c = 0
                            counter106 = 0
                            For iloop = 1 To Len(PHYSICAL_LOCATION)
                                strcurrentchar = Mid(PHYSICAL_LOCATION, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter106 = 1
                                    End If
                                End If
                            Next
                            If counter106 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                txt_Hold_Location.Focus()
                                Exit Sub
                            End If
                        Else
                            PHYSICAL_LOCATION = ""
                        End If
                    Else
                        PHYSICAL_LOCATION = ""
                    End If

                    'validation for REFERENCE NO
                    Dim REFERENCE_NO As Object = Nothing
                    If TR_REFERENCE_NO.Visible = True Then
                        REFERENCE_NO = TrimAll(txt_Hold_ReferenceNo.Text)
                        If Not String.IsNullOrEmpty(REFERENCE_NO) Then
                            REFERENCE_NO = RemoveQuotes(REFERENCE_NO)
                            If REFERENCE_NO.Length > 50 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_ReferenceNo.Focus()
                                Exit Sub
                            End If

                            REFERENCE_NO = " " & REFERENCE_NO & " "
                            If InStr(1, REFERENCE_NO, "CREATE", 1) > 0 Or InStr(1, REFERENCE_NO, "DELETE", 1) > 0 Or InStr(1, REFERENCE_NO, "DROP", 1) > 0 Or InStr(1, REFERENCE_NO, "INSERT", 1) > 1 Or InStr(1, REFERENCE_NO, "TRACK", 1) > 1 Or InStr(1, REFERENCE_NO, "TRACE", 1) > 1 Then
                                Label6.Text = "Do not use reserved Words!"
                                Label15.Text = ""
                                txt_Hold_ReferenceNo.Focus()
                                Exit Sub
                            End If
                            REFERENCE_NO = TrimAll(REFERENCE_NO)
                            'check unwanted characters
                            c = 0
                            counter107 = 0
                            For iloop = 1 To Len(REFERENCE_NO)
                                strcurrentchar = Mid(REFERENCE_NO, iloop, 1)
                                If c = 0 Then
                                    If Not InStr("'""", strcurrentchar) <= 0 Then
                                        c = c + 1
                                        counter107 = 1
                                    End If
                                End If
                            Next
                            If counter107 = 1 Then
                                Label6.Text = " Input  is not Valid!"
                                Label15.Text = ""
                                txt_Hold_ReferenceNo.Focus()
                                Exit Sub
                            End If
                        Else
                            REFERENCE_NO = ""
                        End If
                    Else
                        REFERENCE_NO = ""
                    End If

                    'validation for RECODING_MEDIUM
                    Dim RECORDING_MEDIUM As Object = Nothing
                    If TR_MEDIUM.Visible = True Then
                        RECORDING_MEDIUM = TrimAll(txt_Hold_RecordingMedium.Text)
                        If Not String.IsNullOrEmpty(RECORDING_MEDIUM) Then
                            RECORDING_MEDIUM = RemoveQuotes(RECORDING_MEDIUM)
                            If RECORDING_MEDIUM.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_RecordingMedium.Focus()
                                Exit Sub
                            End If
                        Else
                            RECORDING_MEDIUM = ""
                        End If
                    Else
                        RECORDING_MEDIUM = ""
                    End If

                    'validation for RECODING_MEDIUM
                    Dim RECORDING_CATEGORY As Object = Nothing
                    If TR_RECORDING_CATEGORY.Visible = True Then
                        RECORDING_CATEGORY = TrimAll(txt_Hold_RecordingCategory.Text)
                        If Not String.IsNullOrEmpty(RECORDING_CATEGORY) Then
                            RECORDING_CATEGORY = RemoveQuotes(RECORDING_CATEGORY)
                            If RECORDING_CATEGORY.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_RecordingCategory.Focus()
                                Exit Sub
                            End If
                        Else
                            RECORDING_CATEGORY = ""
                        End If
                    Else
                        RECORDING_CATEGORY = ""
                    End If

                    'validation for RECORDING_FORM
                    Dim RECORDING_FORM As Object = Nothing
                    If TR_RECORDING_FORM.Visible = True Then
                        RECORDING_FORM = TrimAll(txt_Hold_RecordingForm.Text)
                        If Not String.IsNullOrEmpty(RECORDING_FORM) Then
                            RECORDING_FORM = RemoveQuotes(RECORDING_FORM)
                            If RECORDING_FORM.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_RecordingForm.Focus()
                                Exit Sub
                            End If
                        Else
                            RECORDING_FORM = ""
                        End If
                    Else
                        RECORDING_FORM = ""
                    End If

                    'validation for RECORDING_FORMAT
                    Dim RECORDING_FORMAT As Object = Nothing
                    If TR_RECORDING_FORMAT.Visible = True Then
                        RECORDING_FORMAT = TrimAll(txt_Hold_RecordingFormat.Text)
                        If Not String.IsNullOrEmpty(RECORDING_FORMAT) Then
                            RECORDING_FORMAT = RemoveQuotes(RECORDING_FORMAT)
                            If RECORDING_FORMAT.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_RecordingFormat.Focus()
                                Exit Sub
                            End If
                        Else
                            RECORDING_FORMAT = ""
                        End If
                    Else
                        RECORDING_FORMAT = ""
                    End If

                    'validation for RECORDING_SPEED
                    Dim RECORDING_SPEED As Object = Nothing
                    If TR_RECORDING_SPEED.Visible = True Then
                        RECORDING_SPEED = TrimAll(txt_Hold_RecordingSpeed.Text)
                        If Not String.IsNullOrEmpty(RECORDING_SPEED) Then
                            RECORDING_SPEED = RemoveQuotes(RECORDING_SPEED)
                            If RECORDING_SPEED.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_RecordingSpeed.Focus()
                                Exit Sub
                            End If
                        Else
                            RECORDING_SPEED = ""
                        End If
                    Else
                        RECORDING_SPEED = ""
                    End If

                    'validation for RECORDING_STORAGE_TECH
                    Dim RECORDING_STORAGE_TECH As Object = Nothing
                    If TR_RECORDING_STORAGE_TECH.Visible = True Then
                        RECORDING_STORAGE_TECH = TrimAll(txt_Hold_RecordingStorageTech.Text)
                        If Not String.IsNullOrEmpty(RECORDING_STORAGE_TECH) Then
                            RECORDING_STORAGE_TECH = RemoveQuotes(RECORDING_STORAGE_TECH)
                            If RECORDING_STORAGE_TECH.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_RecordingStorageTech.Focus()
                                Exit Sub
                            End If
                        Else
                            RECORDING_STORAGE_TECH = ""
                        End If
                    Else
                        RECORDING_STORAGE_TECH = ""
                    End If

                    'validation for RECORDING_PLAY_DURATION
                    Dim RECORDING_PLAY_DURATION As Object = Nothing
                    If TR_RECORDING_PLAY_DURATION.Visible = True Then
                        RECORDING_PLAY_DURATION = TrimAll(txt_Hold_RecordingDuration.Text)
                        If Not String.IsNullOrEmpty(RECORDING_PLAY_DURATION) Then
                            RECORDING_PLAY_DURATION = RemoveQuotes(RECORDING_PLAY_DURATION)
                            If RECORDING_PLAY_DURATION.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_RecordingDuration.Focus()
                                Exit Sub
                            End If
                        Else
                            RECORDING_PLAY_DURATION = ""
                        End If
                    Else
                        RECORDING_PLAY_DURATION = ""
                    End If

                    'validation for TYPE OF VISUALS
                    Dim VIDEO_TYPEOFVISUALS As Object = Nothing
                    If TR_VIDEO_TYPEOFVISUAL.Visible = True Then
                        VIDEO_TYPEOFVISUALS = TrimAll(txt_Hold_TypeOfVisuals.Text)
                        If Not String.IsNullOrEmpty(VIDEO_TYPEOFVISUALS) Then
                            VIDEO_TYPEOFVISUALS = RemoveQuotes(VIDEO_TYPEOFVISUALS)
                            If VIDEO_TYPEOFVISUALS.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_TypeOfVisuals.Focus()
                                Exit Sub
                            End If
                        Else
                            VIDEO_TYPEOFVISUALS = ""
                        End If
                    Else
                        VIDEO_TYPEOFVISUALS = ""
                    End If

                    'validation for CARTOGRAPHIC_SCALE
                    Dim CARTOGRAPHIC_SCALE As Object = Nothing
                    If TR_CARTOGRAPHIC_SCALE.Visible = True Then
                        CARTOGRAPHIC_SCALE = TrimAll(txt_Hold_Scale.Text)
                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_SCALE) Then
                            CARTOGRAPHIC_SCALE = RemoveQuotes(CARTOGRAPHIC_SCALE)
                            If CARTOGRAPHIC_SCALE.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_Scale.Focus()
                                Exit Sub
                            End If
                        Else
                            CARTOGRAPHIC_SCALE = ""
                        End If
                    Else
                        CARTOGRAPHIC_SCALE = ""
                    End If

                    'validation for CARTOGRAPHIC_PROJECTION
                    Dim CARTOGRAPHIC_PROJECTION As Object = Nothing
                    If TR_CARTOGRAPHIC_PROJECTION.Visible = True Then
                        CARTOGRAPHIC_PROJECTION = TrimAll(txt_Hold_Projection.Text)
                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_PROJECTION) Then
                            CARTOGRAPHIC_PROJECTION = RemoveQuotes(CARTOGRAPHIC_PROJECTION)
                            If CARTOGRAPHIC_PROJECTION.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_Projection.Focus()
                                Exit Sub
                            End If
                        Else
                            CARTOGRAPHIC_PROJECTION = ""
                        End If
                    Else
                        CARTOGRAPHIC_PROJECTION = ""
                    End If

                    'validation for CARTOGRAPHIC_COORDINATES
                    Dim CARTOGRAPHIC_COORDINATES As Object = Nothing
                    If TR_CARTOGRAPHIC_COORDINATES.Visible = True Then
                        CARTOGRAPHIC_COORDINATES = TrimAll(txt_Hold_Coordinates.Text)
                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_COORDINATES) Then
                            CARTOGRAPHIC_COORDINATES = RemoveQuotes(CARTOGRAPHIC_COORDINATES)
                            If CARTOGRAPHIC_COORDINATES.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_Coordinates.Focus()
                                Exit Sub
                            End If
                        Else
                            CARTOGRAPHIC_COORDINATES = ""
                        End If
                    Else
                        CARTOGRAPHIC_COORDINATES = ""
                    End If

                    'validation for CARTOGRAPHIC_GEOGRAPHIC_LOCATION
                    Dim CARTOGRAPHIC_GEOGRAPHIC_LOCATION As Object = Nothing
                    If TR_CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Visible = True Then
                        CARTOGRAPHIC_COORDINATES = TrimAll(txt_Hold_GeographicLocation.Text)
                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_GEOGRAPHIC_LOCATION) Then
                            CARTOGRAPHIC_GEOGRAPHIC_LOCATION = RemoveQuotes(CARTOGRAPHIC_GEOGRAPHIC_LOCATION)
                            If CARTOGRAPHIC_GEOGRAPHIC_LOCATION.Length > 51 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                txt_Hold_GeographicLocation.Focus()
                                Exit Sub
                            End If
                        Else
                            CARTOGRAPHIC_GEOGRAPHIC_LOCATION = ""
                        End If
                    Else
                        CARTOGRAPHIC_GEOGRAPHIC_LOCATION = ""
                    End If

                    'validation for CARTOGRAPHIC_MEDIUM
                    Dim CARTOGRAPHIC_MEDIUM As Object = Nothing
                    If TR_CARTOGRAPHIC_MEDIUM.Visible = True Then
                        CARTOGRAPHIC_MEDIUM = Trim(DDL_GeographicMedium.SelectedValue)
                        If Not String.IsNullOrEmpty(CARTOGRAPHIC_GEOGRAPHIC_LOCATION) Then
                            CARTOGRAPHIC_MEDIUM = RemoveQuotes(CARTOGRAPHIC_MEDIUM)
                            If CARTOGRAPHIC_MEDIUM.Length > 2 Then 'maximum length
                                Label6.Text = " Data must be of Proper Length.. "
                                Label15.Text = ""
                                DDL_GeographicMedium.Focus()
                                Exit Sub
                            End If
                        Else
                            CARTOGRAPHIC_MEDIUM = ""
                        End If
                    Else
                        CARTOGRAPHIC_MEDIUM = ""
                    End If

                    'search CARTOGRAPHIC_DATAGATHERING_DATE
                    Dim CARTOGRAPHIC_DATAGATHERING_DATE As Object = Nothing
                    If TR_CARTOGRAPHIC_DATAGATHERING_DATE.Visible = True Then
                        If txt_Hold_DataGatheringDate.Text <> "" Then
                            CARTOGRAPHIC_DATAGATHERING_DATE = TrimX(txt_Hold_DataGatheringDate.Text)
                            CARTOGRAPHIC_DATAGATHERING_DATE = RemoveQuotes(CARTOGRAPHIC_DATAGATHERING_DATE)
                            CARTOGRAPHIC_DATAGATHERING_DATE = Convert.ToDateTime(CARTOGRAPHIC_DATAGATHERING_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                            If Len(CARTOGRAPHIC_DATAGATHERING_DATE) > 12 Then
                                Label6.Text = " Input is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_DataGatheringDate.Focus()
                                Exit Sub
                            End If
                        Else
                            CARTOGRAPHIC_DATAGATHERING_DATE = ""
                        End If
                    Else
                        CARTOGRAPHIC_DATAGATHERING_DATE = ""
                    End If

                    'search CARTOGRAPHIC_CREATION_DATE
                    Dim CARTOGRAPHIC_CREATION_DATE As Object = Nothing
                    If TR_CREATION_DATE.Visible = True Then
                        If txt_Hold_CreationDate.Text <> "" Then
                            CARTOGRAPHIC_CREATION_DATE = TrimX(txt_Hold_CreationDate.Text)
                            CARTOGRAPHIC_CREATION_DATE = RemoveQuotes(CARTOGRAPHIC_CREATION_DATE)
                            CARTOGRAPHIC_CREATION_DATE = Convert.ToDateTime(CARTOGRAPHIC_CREATION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                            If Len(CARTOGRAPHIC_CREATION_DATE) > 12 Then
                                Label6.Text = " Input is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_CreationDate.Focus()
                                Exit Sub
                            End If
                        Else
                            CARTOGRAPHIC_CREATION_DATE = ""
                        End If
                    Else
                        CARTOGRAPHIC_CREATION_DATE = ""
                    End If

                    'search CARTOGRAPHIC_COMPILATION_DATE
                    Dim CARTOGRAPHIC_COMPILATION_DATE As Object = Nothing
                    If TR_CARTOGRAPHIC_COMPILATION_DATE.Visible = True Then
                        If txt_Hold_CompilationDate.Text <> "" Then
                            CARTOGRAPHIC_COMPILATION_DATE = TrimX(txt_Hold_CompilationDate.Text)
                            CARTOGRAPHIC_COMPILATION_DATE = RemoveQuotes(CARTOGRAPHIC_COMPILATION_DATE)
                            CARTOGRAPHIC_COMPILATION_DATE = Convert.ToDateTime(CARTOGRAPHIC_COMPILATION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                            If Len(CARTOGRAPHIC_COMPILATION_DATE) > 12 Then
                                Label6.Text = " Input is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_CompilationDate.Focus()
                                Exit Sub
                            End If
                        Else
                            CARTOGRAPHIC_COMPILATION_DATE = ""
                        End If
                    Else
                        CARTOGRAPHIC_COMPILATION_DATE = ""
                    End If

                    'validation for  CARTOGRAPHIC_INSPECTION_DATE
                    Dim CARTOGRAPHIC_INSPECTION_DATE As Object = Nothing
                    If TR_CARTOGRAPHIC_INSPECTION_DATE.Visible = True Then
                        If txt_Hold_InspectionDate.Text <> "" Then
                            CARTOGRAPHIC_INSPECTION_DATE = TrimX(txt_Hold_InspectionDate.Text)
                            CARTOGRAPHIC_INSPECTION_DATE = RemoveQuotes(CARTOGRAPHIC_INSPECTION_DATE)
                            CARTOGRAPHIC_INSPECTION_DATE = Convert.ToDateTime(CARTOGRAPHIC_INSPECTION_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                            If Len(CARTOGRAPHIC_INSPECTION_DATE) > 12 Then
                                Label6.Text = " Input is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_InspectionDate.Focus()
                                Exit Sub
                            End If
                        Else
                            CARTOGRAPHIC_INSPECTION_DATE = ""
                        End If
                    Else
                        CARTOGRAPHIC_INSPECTION_DATE = ""
                    End If

                    'validation for  VIDEO_COLOR
                    Dim VIDEO_COLOR As Object = Nothing
                    If TR_VIDEO_COLOR.Visible = True Then
                        If txt_Hold_Color.Text <> "" Then
                            VIDEO_COLOR = TrimAll(txt_Hold_Color.Text)
                            VIDEO_COLOR = RemoveQuotes(VIDEO_COLOR)

                            If Len(VIDEO_COLOR) > 50 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_Color.Focus()
                                Exit Sub
                            End If
                        Else
                            VIDEO_COLOR = ""
                        End If
                    Else
                        VIDEO_COLOR = ""
                    End If

                    'validation for  PLAYBACK_CHANNELS
                    Dim PLAYBACK_CHANNELS As Object = Nothing
                    If TR_PLAYBACK_CHANNELS.Visible = True Then
                        If txt_Hold_PlayBackChannel.Text <> "" Then
                            PLAYBACK_CHANNELS = TrimAll(txt_Hold_PlayBackChannel.Text)
                            PLAYBACK_CHANNELS = RemoveQuotes(PLAYBACK_CHANNELS)
                            If Len(PLAYBACK_CHANNELS) > 50 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_PlayBackChannel.Focus()
                                Exit Sub
                            End If
                        Else
                            PLAYBACK_CHANNELS = ""
                        End If
                    Else
                        PLAYBACK_CHANNELS = ""
                    End If

                    'validation for  TAPE_WIDTH
                    Dim TAPE_WIDTH As Object = Nothing
                    If TR_TAPE_WIDTH.Visible = True Then
                        If txt_Hold_PlayBackChannel.Text <> "" Then
                            TAPE_WIDTH = TrimAll(txt_Hold_PlayBackChannel.Text)
                            TAPE_WIDTH = RemoveQuotes(TAPE_WIDTH)
                            If Len(TAPE_WIDTH) > 50 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_PlayBackChannel.Focus()
                                Exit Sub
                            End If
                        Else
                            TAPE_WIDTH = ""
                        End If
                    Else
                        TAPE_WIDTH = ""
                    End If

                    'validation for  TAPE_CONFIGURATION
                    Dim TAPE_CONFIGURATION As Object = Nothing
                    If TR_TAPE_CONFIGURATION.Visible = True Then
                        If txt_Hold_TapeConfiguration.Text <> "" Then
                            TAPE_CONFIGURATION = TrimAll(txt_Hold_TapeConfiguration.Text)
                            TAPE_CONFIGURATION = RemoveQuotes(TAPE_CONFIGURATION)
                            If Len(TAPE_CONFIGURATION) > 50 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_TapeConfiguration.Focus()
                                Exit Sub
                            End If
                        Else
                            TAPE_CONFIGURATION = ""
                        End If
                    Else
                        TAPE_CONFIGURATION = ""
                    End If

                    'validation for  KIND_OF_DISK
                    Dim KIND_OF_DISK As Object = Nothing
                    If TR_KIND_OF_DISK.Visible = True Then
                        If txt_Hold_KindofDisk.Text <> "" Then
                            KIND_OF_DISK = TrimAll(txt_Hold_KindofDisk.Text)
                            KIND_OF_DISK = RemoveQuotes(KIND_OF_DISK)
                            If Len(KIND_OF_DISK) > 50 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_KindofDisk.Focus()
                                Exit Sub
                            End If
                        Else
                            KIND_OF_DISK = ""
                        End If
                    Else
                        KIND_OF_DISK = ""
                    End If

                    'validation for  KIND_OF_CUTTING
                    Dim KIND_OF_CUTTING As Object = Nothing
                    If TR_KIND_OF_CUTTING.Visible = True Then
                        If txt_Hold_KindofCutting.Text <> "" Then
                            KIND_OF_CUTTING = TrimAll(txt_Hold_KindofCutting.Text)
                            KIND_OF_CUTTING = RemoveQuotes(KIND_OF_CUTTING)
                            If Len(KIND_OF_DISK) > 50 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_KindofCutting.Focus()
                                Exit Sub
                            End If
                        Else
                            KIND_OF_CUTTING = ""
                        End If
                    Else
                        KIND_OF_CUTTING = ""
                    End If


                    'validation for  ENCODING_STANDARD
                    Dim ENCODING_STANDARD As Object = Nothing
                    If TR_ENCODING_STANDARD.Visible = True Then
                        If txt_Hold_EncodingStandard.Text <> "" Then
                            ENCODING_STANDARD = TrimAll(txt_Hold_EncodingStandard.Text)
                            ENCODING_STANDARD = RemoveQuotes(ENCODING_STANDARD)
                            If Len(KIND_OF_DISK) > 50 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_EncodingStandard.Focus()
                                Exit Sub
                            End If
                        Else
                            ENCODING_STANDARD = ""
                        End If
                    Else
                        ENCODING_STANDARD = ""
                    End If

                    'validation for  CAPTURE_TECHNIQUE
                    Dim CAPTURE_TECHNIQUE As Object = Nothing
                    If TR_CAPTURE_TECHNIQUE.Visible = True Then
                        If txt_Hold_CaptureTechnique.Text <> "" Then
                            CAPTURE_TECHNIQUE = TrimAll(txt_Hold_CaptureTechnique.Text)
                            CAPTURE_TECHNIQUE = RemoveQuotes(CAPTURE_TECHNIQUE)
                            If Len(CAPTURE_TECHNIQUE) > 50 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_CaptureTechnique.Focus()
                                Exit Sub
                            End If
                        Else
                            CAPTURE_TECHNIQUE = ""
                        End If
                    Else
                        CAPTURE_TECHNIQUE = ""
                    End If

                    'validation for  PHOTO_NO
                    Dim PHOTO_NO As Object = Nothing
                    If TR_PHOTO_NO.Visible = True Then
                        If txt_Hold_PhotoNo.Text <> "" Then
                            PHOTO_NO = TrimAll(txt_Hold_PhotoNo.Text)
                            PHOTO_NO = RemoveQuotes(PHOTO_NO)
                            If Len(PHOTO_NO) > 50 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_PhotoNo.Focus()
                                Exit Sub
                            End If
                        Else
                            PHOTO_NO = ""
                        End If
                    Else
                        PHOTO_NO = ""
                    End If


                    'validation for  PHOTO_ALBUM_NO
                    Dim PHOTO_ALBUM_NO As Object = Nothing
                    If TR_PHOTO_ALBUM_NO.Visible = True Then
                        If txt_Hold_PhotoAlbumNo.Text <> "" Then
                            PHOTO_ALBUM_NO = TrimAll(txt_Hold_PhotoAlbumNo.Text)
                            PHOTO_ALBUM_NO = RemoveQuotes(PHOTO_ALBUM_NO)
                            If Len(PHOTO_ALBUM_NO) > 150 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_PhotoAlbumNo.Focus()
                                Exit Sub
                            End If
                        Else
                            PHOTO_ALBUM_NO = ""
                        End If
                    Else
                        PHOTO_ALBUM_NO = ""
                    End If

                    'validation for  PHOTO_OCASION
                    Dim PHOTO_OCASION As Object = Nothing
                    If TR_PHOTO_OCASION.Visible = True Then
                        If txt_Hold_Ocasion.Text <> "" Then
                            PHOTO_OCASION = TrimAll(txt_Hold_Ocasion.Text)
                            PHOTO_OCASION = RemoveQuotes(PHOTO_OCASION)
                            If Len(PHOTO_OCASION) > 150 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_Ocasion.Focus()
                                Exit Sub
                            End If
                        Else
                            PHOTO_OCASION = ""
                        End If
                    Else
                        PHOTO_OCASION = ""
                    End If

                    'validation for  IMAGE_VIEW_TYPE
                    Dim IMAGE_VIEW_TYPE As Object = Nothing
                    If TR_IMAGE_VIEW_TYPE.Visible = True Then
                        If txt_Hold_ImageViewType.Text <> "" Then
                            IMAGE_VIEW_TYPE = TrimAll(txt_Hold_ImageViewType.Text)
                            IMAGE_VIEW_TYPE = RemoveQuotes(IMAGE_VIEW_TYPE)
                            If Len(IMAGE_VIEW_TYPE) > 50 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_ImageViewType.Focus()
                                Exit Sub
                            End If
                        Else
                            IMAGE_VIEW_TYPE = ""
                        End If
                    Else
                        IMAGE_VIEW_TYPE = ""
                    End If

                    'search VIEW_DATE
                    Dim VIEW_DATE As Object = Nothing
                    If TR_VIEW_DATE.Visible = True Then
                        If txt_Hold_ViewDate.Text <> "" Then
                            VIEW_DATE = TrimX(txt_Hold_ViewDate.Text)
                            VIEW_DATE = RemoveQuotes(VIEW_DATE)
                            VIEW_DATE = Convert.ToDateTime(VIEW_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                            If Len(VIEW_DATE) > 12 Then
                                Label6.Text = " Input is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_ViewDate.Focus()
                                Exit Sub
                            End If
                        Else
                            VIEW_DATE = ""
                        End If
                    Else
                        VIEW_DATE = ""
                    End If


                    'validation for  THEME
                    Dim THEME As Object = Nothing
                    If TR_THEME.Visible = True Then
                        If txt_Hold_Theme.Text <> "" Then
                            THEME = TrimAll(txt_Hold_Theme.Text)
                            THEME = RemoveQuotes(THEME)
                            If Len(THEME) > 150 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_Theme.Focus()
                                Exit Sub
                            End If
                        Else
                            THEME = ""
                        End If
                    Else
                        THEME = ""
                    End If

                    'validation for  STYLE
                    Dim STYLE As Object = Nothing
                    If TR_STYLE.Visible = True Then
                        If txt_Hold_Style.Text <> "" Then
                            STYLE = TrimAll(txt_Hold_Style.Text)
                            STYLE = RemoveQuotes(STYLE)
                            If Len(STYLE) > 150 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_Style.Focus()
                                Exit Sub
                            End If
                        Else
                            STYLE = ""
                        End If
                    Else
                        STYLE = ""
                    End If

                    'validation for  CULTURE
                    Dim CULTURE As Object = Nothing
                    If TR_CULTURE.Visible = True Then
                        If txt_Hold_Culture.Text <> "" Then
                            CULTURE = TrimAll(txt_Hold_Culture.Text)
                            CULTURE = RemoveQuotes(CULTURE)
                            If Len(CULTURE) > 150 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_Culture.Focus()
                                Exit Sub
                            End If
                        Else
                            CULTURE = ""
                        End If
                    Else
                        CULTURE = ""
                    End If

                    'validation for  CURRENT_SITE
                    Dim CURRENT_SITE As Object = Nothing
                    If TR_CULTURE.Visible = True Then
                        If txt_Hold_CurrentSite.Text <> "" Then
                            CURRENT_SITE = TrimAll(txt_Hold_CurrentSite.Text)
                            CURRENT_SITE = RemoveQuotes(CURRENT_SITE)
                            If Len(CURRENT_SITE) > 150 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_CurrentSite.Focus()
                                Exit Sub
                            End If
                        Else
                            CURRENT_SITE = ""
                        End If
                    Else
                        CURRENT_SITE = ""
                    End If

                    'validation for  CREATION_SITE
                    Dim CREATION_SITE As Object = Nothing
                    If TR_CREATION_SITE.Visible = True Then
                        If txt_Hold_CreationSite.Text <> "" Then
                            CREATION_SITE = TrimAll(txt_Hold_CreationSite.Text)
                            CREATION_SITE = RemoveQuotes(CREATION_SITE)
                            If Len(CREATION_SITE) > 150 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_CreationSite.Focus()
                                Exit Sub
                            End If
                        Else
                            CREATION_SITE = ""
                        End If
                    Else
                        CREATION_SITE = ""
                    End If

                    'validation for  YARNCOUNT
                    Dim YARNCOUNT As Object = Nothing
                    If TR_YARNCOUNT.Visible = True Then
                        If txt_Hold_YarnCount.Text <> "" Then
                            YARNCOUNT = TrimAll(txt_Hold_YarnCount.Text)
                            YARNCOUNT = RemoveQuotes(YARNCOUNT)
                            If Len(YARNCOUNT) > 150 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_YarnCount.Focus()
                                Exit Sub
                            End If
                        Else
                            YARNCOUNT = ""
                        End If
                    Else
                        YARNCOUNT = ""
                    End If

                    'validation for  MATERIAL_TYPE
                    Dim MATERIAL_TYPE As Object = Nothing
                    If TR_MATERIAL_TYPE.Visible = True Then
                        If txt_Hold_MaterialsType.Text <> "" Then
                            MATERIAL_TYPE = TrimAll(txt_Hold_MaterialsType.Text)
                            MATERIAL_TYPE = RemoveQuotes(MATERIAL_TYPE)
                            If Len(MATERIAL_TYPE) > 150 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_MaterialsType.Focus()
                                Exit Sub
                            End If
                        Else
                            MATERIAL_TYPE = ""
                        End If
                    Else
                        MATERIAL_TYPE = ""
                    End If

                    'validation for  TECHNIQUE
                    Dim TECHNIQUE As Object = Nothing
                    If TR_TECHNIQUE.Visible = True Then
                        If txt_Hold_Technique.Text <> "" Then
                            TECHNIQUE = TrimAll(txt_Hold_Technique.Text)
                            TECHNIQUE = RemoveQuotes(TECHNIQUE)
                            If Len(TECHNIQUE) > 150 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_Technique.Focus()
                                Exit Sub
                            End If
                        Else
                            TECHNIQUE = ""
                        End If
                    Else
                        TECHNIQUE = ""
                    End If

                    'validation for  TECH_DETAILS
                    Dim TECH_DETAILS As Object = Nothing
                    If TR_TECH_DETAILS.Visible = True Then
                        If txt_Hold_TechDetails.Text <> "" Then
                            TECH_DETAILS = TrimAll(txt_Hold_TechDetails.Text)
                            TECH_DETAILS = RemoveQuotes(TECH_DETAILS)
                            If Len(TECH_DETAILS) > 250 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_TechDetails.Focus()
                                Exit Sub
                            End If
                        Else
                            TECH_DETAILS = ""
                        End If
                    Else
                        TECH_DETAILS = ""
                    End If

                    'validation for  INSCRIPTIONS
                    Dim INSCRIPTIONS As Object = Nothing
                    If TR_INSCRIPTIONS.Visible = True Then
                        If txt_Hold_Inscription.Text <> "" Then
                            INSCRIPTIONS = TrimAll(txt_Hold_Inscription.Text)
                            INSCRIPTIONS = RemoveQuotes(INSCRIPTIONS)
                            If Len(INSCRIPTIONS) > 150 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_Inscription.Focus()
                                Exit Sub
                            End If
                        Else
                            INSCRIPTIONS = ""
                        End If
                    Else
                        INSCRIPTIONS = ""
                    End If

                    'validation for  DESCRIPTION
                    Dim DESCRIPTION As Object = Nothing
                    If TR_DESCRIPTION.Visible = True Then
                        If txt_Hold_Description.Text <> "" Then
                            DESCRIPTION = TrimAll(txt_Hold_Description.Text)
                            DESCRIPTION = RemoveQuotes(DESCRIPTION)
                            If Len(DESCRIPTION) > 250 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_Description.Focus()
                                Exit Sub
                            End If
                        Else
                            DESCRIPTION = ""
                        End If
                    Else
                        DESCRIPTION = ""
                    End If

                    'validation for  GLOBE_TYPE
                    Dim GLOBE_TYPE As Object = Nothing
                    If TR_GLOBE_TYPE.Visible = True Then
                        If txt_Hold_GlobeType.Text <> "" Then
                            GLOBE_TYPE = TrimAll(txt_Hold_GlobeType.Text)
                            GLOBE_TYPE = RemoveQuotes(GLOBE_TYPE)
                            If Len(GLOBE_TYPE) > 50 Then
                                Label6.Text = " Input Length is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_GlobeType.Focus()
                                Exit Sub
                            End If
                        Else
                            GLOBE_TYPE = ""
                        End If
                    Else
                        GLOBE_TYPE = ""
                    End If

                    'search ALTER_DATE
                    Dim ALTER_DATE As Object = Nothing
                    If TR_ALTER_DATE.Visible = True Then
                        If txt_Hold_AlterDate.Text <> "" Then
                            ALTER_DATE = TrimX(txt_Hold_AlterDate.Text)
                            ALTER_DATE = RemoveQuotes(ALTER_DATE)
                            ALTER_DATE = Convert.ToDateTime(ALTER_DATE, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                            If Len(ALTER_DATE) > 12 Then
                                Label6.Text = " Input is not Valid..."
                                Label15.Text = ""
                                Me.txt_Hold_AlterDate.Focus()
                                Exit Sub
                            End If
                        Else
                            ALTER_DATE = ""
                        End If
                    Else
                        ALTER_DATE = ""
                    End If

                    Dim USER_CODE As Object = Nothing
                    USER_CODE = Session.Item("LoggedUser")

                    Dim DATE_ADDED As Object = Nothing
                    DATE_ADDED = Now.Date
                    DATE_ADDED = Convert.ToDateTime(DATE_ADDED, System.Globalization.CultureInfo.GetCultureInfo("hi-IN")).ToString("MM/dd/yyyy") ' convert from indian to us

                    Dim IP As Object = Nothing
                    IP = Request.UserHostAddress.Trim


                    '*************************************************************************************************************************
                    If SqlConn.State = 0 Then
                        SqlConn.Open()
                    End If
                    thisTransaction = SqlConn.BeginTransaction()

                    '***********************************************************************************************************
                    'SAVE ACQ DATA in ACQUISITIONS TABLE
                    If Table4.Visible = True Then
                        If txt_Acq_ItemPrice.Text <> "" Then
                            'validation for Currency code
                            Dim ACQMODE_CODE As Object = Nothing
                            ACQMODE_CODE = DDL_AcqModes.SelectedValue
                            If Not String.IsNullOrEmpty(ACQMODE_CODE) Then
                                ACQMODE_CODE = RemoveQuotes(ACQMODE_CODE)
                                If ACQMODE_CODE.Length > 2 Then
                                    Label6.Text = "Error: Input is not Valid !"
                                    Label15.Text = ""
                                    DDL_AcqModes.Focus()
                                    Exit Sub
                                End If
                                ACQMODE_CODE = " " & ACQMODE_CODE & " "
                                If InStr(1, ACQMODE_CODE, "CREATE", 1) > 0 Or InStr(1, ACQMODE_CODE, "DELETE", 1) > 0 Or InStr(1, ACQMODE_CODE, "DROP", 1) > 0 Or InStr(1, ACQMODE_CODE, "INSERT", 1) > 1 Or InStr(1, ACQMODE_CODE, "TRACK", 1) > 1 Or InStr(1, ACQMODE_CODE, "TRACE", 1) > 1 Then
                                    Label6.Text = "Error: Input is not Valid !"
                                    Label15.Text = ""
                                    DDL_AcqModes.Focus()
                                    Exit Sub
                                End If
                                ACQMODE_CODE = TrimX(ACQMODE_CODE)
                                'check unwanted characters
                                c = 0
                                counter76 = 0
                                For iloop = 1 To Len(ACQMODE_CODE)
                                    strcurrentchar = Mid(ACQMODE_CODE, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter76 = 1
                                        End If
                                    End If
                                Next
                                If counter76 = 1 Then
                                    Label6.Text = "Error: Input is not Valid !"
                                    Label15.Text = ""
                                    DDL_AcqModes.Focus()
                                    Exit Sub
                                End If
                            Else
                                ACQMODE_CODE = "P"
                            End If

                            'validation for Currency code
                            Dim CUR_CODE As Object = Nothing
                            CUR_CODE = DDL_Currencies.SelectedValue
                            If Not String.IsNullOrEmpty(CUR_CODE) Then
                                CUR_CODE = RemoveQuotes(CUR_CODE)
                                If CUR_CODE.Length > 4 Then
                                    Label6.Text = "Error: Input is not Valid !"
                                    Label15.Text = ""
                                    DDL_Currencies.Focus()
                                    Exit Sub
                                End If
                                CUR_CODE = " " & CUR_CODE & " "
                                If InStr(1, CUR_CODE, "CREATE", 1) > 0 Or InStr(1, CUR_CODE, "DELETE", 1) > 0 Or InStr(1, CUR_CODE, "DROP", 1) > 0 Or InStr(1, CUR_CODE, "INSERT", 1) > 1 Or InStr(1, CUR_CODE, "TRACK", 1) > 1 Or InStr(1, CUR_CODE, "TRACE", 1) > 1 Then
                                    Label6.Text = "Error: Input is not Valid !"
                                    Label15.Text = ""
                                    DDL_Currencies.Focus()
                                    Exit Sub
                                End If
                                CUR_CODE = TrimX(CUR_CODE)
                                'check unwanted characters
                                c = 0
                                counter77 = 0
                                For iloop = 1 To Len(CUR_CODE)
                                    strcurrentchar = Mid(CUR_CODE, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter77 = 1
                                        End If
                                    End If
                                Next
                                If counter77 = 1 Then
                                    Label6.Text = "Error: Input is not Valid !"
                                    Label15.Text = ""
                                    DDL_Currencies.Focus()
                                    Exit Sub
                                End If
                            Else
                                CUR_CODE = "INR"
                            End If

                            'validation for Currency code
                            Dim ITEM_PRICE As Object = Nothing
                            ITEM_PRICE = TrimX(txt_Acq_ItemPrice.Text)
                            If Not String.IsNullOrEmpty(ITEM_PRICE) Then
                                ITEM_PRICE = RemoveQuotes(ITEM_PRICE)
                                If ITEM_PRICE.Length > 10 Then
                                    Label6.Text = "Error: Input is not Valid !"
                                    Label15.Text = ""
                                    txt_Acq_ItemPrice.Focus()
                                    Exit Sub
                                End If
                                ITEM_PRICE = " " & ITEM_PRICE & " "
                                If InStr(1, ITEM_PRICE, "CREATE", 1) > 0 Or InStr(1, ITEM_PRICE, "DELETE", 1) > 0 Or InStr(1, ITEM_PRICE, "DROP", 1) > 0 Or InStr(1, ITEM_PRICE, "INSERT", 1) > 1 Or InStr(1, ITEM_PRICE, "TRACK", 1) > 1 Or InStr(1, ITEM_PRICE, "TRACE", 1) > 1 Then
                                    Label6.Text = "Error: Input is not Valid !"
                                    Label15.Text = ""
                                    txt_Acq_ItemPrice.Focus()
                                    Exit Sub
                                End If
                                ITEM_PRICE = TrimX(ITEM_PRICE)
                                'check unwanted characters
                                c = 0
                                counter78 = 0
                                For iloop = 1 To Len(ITEM_PRICE)
                                    strcurrentchar = Mid(ITEM_PRICE, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("';<>=()%""", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter78 = 1
                                        End If
                                    End If
                                Next
                                If counter78 = 1 Then
                                    Label6.Text = "Error: Input is not Valid !"
                                    Label15.Text = ""
                                    txt_Acq_ItemPrice.Focus()
                                    Exit Sub
                                End If
                            Else
                                Label6.Text = "Plz Enter Item Price !"
                                Label15.Text = ""
                                txt_Acq_ItemPrice.Focus()
                                Exit Sub
                            End If

                            'Server Validation for CONVERSION_RATE
                            Dim CONVERSION_RATE As Object = Nothing
                            If txt_Acq_ConversionRate.Text <> "" Then
                                CONVERSION_RATE = TrimX(txt_Acq_ConversionRate.Text)
                                CONVERSION_RATE = RemoveQuotes(CONVERSION_RATE)
                                If CONVERSION_RATE.ToString.Length > 15 Then
                                    Label6.Text = "Plz Enter Data with Proper Length!"
                                    Label15.Text = ""
                                    txt_Acq_ConversionRate.Focus()
                                    Exit Sub
                                End If
                                CONVERSION_RATE = " " & CONVERSION_RATE & " "
                                If InStr(1, CONVERSION_RATE, "CREATE", 1) > 0 Or InStr(1, CONVERSION_RATE, "DELETE", 1) > 0 Or InStr(1, CONVERSION_RATE, "DROP", 1) > 0 Or InStr(1, CONVERSION_RATE, "INSERT", 1) > 1 Or InStr(1, CONVERSION_RATE, "TRACK", 1) > 1 Or InStr(1, CONVERSION_RATE, "TRACE", 1) > 1 Then
                                    Label6.Text = "Do Not Use Reserve Words!"
                                    Label15.Text = ""
                                    txt_Acq_ConversionRate.Focus()
                                    Exit Sub
                                End If
                                CONVERSION_RATE = TrimX(CONVERSION_RATE)
                                c = 0
                                counter79 = 0
                                For iloop = 1 To Len(CONVERSION_RATE.ToString)
                                    strcurrentchar = Mid(CONVERSION_RATE, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter79 = 1
                                        End If
                                    End If
                                Next
                                If counter79 = 1 Then
                                    Label6.Text = "Do Not Use Un-Wanted Characters!"
                                    Label15.Text = ""
                                    txt_Acq_ConversionRate.Focus()
                                    Exit Sub
                                End If
                            Else
                                CONVERSION_RATE = 0
                            End If

                            'Server Validation for ITEM_RUPEES
                            Dim ITEM_RUPEES As Object = Nothing
                            If txt_Acq_ItemRupees.Text <> "" Then
                                ITEM_RUPEES = TrimX(txt_Acq_ItemRupees.Text)
                                ITEM_RUPEES = RemoveQuotes(ITEM_RUPEES)
                                If ITEM_RUPEES.ToString.Length > 15 Then
                                    Label6.Text = "Plz Enter Data with Proper Length!"
                                    Label15.Text = ""
                                    txt_Acq_ItemRupees.Focus()
                                    Exit Sub
                                End If
                                ITEM_RUPEES = " " & ITEM_RUPEES & " "
                                If InStr(1, ITEM_RUPEES, "CREATE", 1) > 0 Or InStr(1, ITEM_RUPEES, "DELETE", 1) > 0 Or InStr(1, ITEM_RUPEES, "DROP", 1) > 0 Or InStr(1, ITEM_RUPEES, "INSERT", 1) > 1 Or InStr(1, ITEM_RUPEES, "TRACK", 1) > 1 Or InStr(1, ITEM_RUPEES, "TRACE", 1) > 1 Then
                                    Label6.Text = "Do Not Use Reserve Words!"
                                    Label15.Text = ""
                                    txt_Acq_ItemRupees.Focus()
                                    Exit Sub
                                End If
                                ITEM_RUPEES = TrimX(ITEM_RUPEES)
                                c = 0
                                counter80 = 0
                                For iloop = 1 To Len(ITEM_RUPEES)
                                    strcurrentchar = Mid(ITEM_RUPEES, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter80 = 1
                                        End If
                                    End If
                                Next
                                If counter80 = 1 Then
                                    Label6.Text = "Do Not Use Un-Wanted Characters!"
                                    Label15.Text = ""
                                    txt_Acq_ItemRupees.Focus()
                                    Exit Sub
                                End If
                            Else
                                ITEM_RUPEES = 0
                            End If

                            If CUR_CODE = "INR" Then
                                ITEM_RUPEES = ITEM_PRICE
                            End If

                            'Server Validation for OTHER_CHARGES
                            Dim OTHER_CHARGES As Object = Nothing
                            If txt_Acq_OtherCharges.Text <> "" Then
                                OTHER_CHARGES = TrimX(txt_Acq_OtherCharges.Text)
                                OTHER_CHARGES = RemoveQuotes(OTHER_CHARGES)
                                If OTHER_CHARGES.ToString.Length > 15 Then
                                    Label6.Text = "Plz Enter Data with Proper Length!"
                                    Label15.Text = ""
                                    txt_Acq_OtherCharges.Focus()
                                    Exit Sub
                                End If
                                OTHER_CHARGES = " " & OTHER_CHARGES & " "
                                If InStr(1, OTHER_CHARGES, "CREATE", 1) > 0 Or InStr(1, OTHER_CHARGES, "DELETE", 1) > 0 Or InStr(1, OTHER_CHARGES, "DROP", 1) > 0 Or InStr(1, OTHER_CHARGES, "INSERT", 1) > 1 Or InStr(1, OTHER_CHARGES, "TRACK", 1) > 1 Or InStr(1, OTHER_CHARGES, "TRACE", 1) > 1 Then
                                    Label6.Text = "Do Not Use Reserve Words!"
                                    Label15.Text = ""
                                    txt_Acq_OtherCharges.Focus()
                                    Exit Sub
                                End If
                                OTHER_CHARGES = TrimX(OTHER_CHARGES)
                                c = 0
                                counter81 = 0
                                For iloop = 1 To Len(OTHER_CHARGES.ToString)
                                    strcurrentchar = Mid(OTHER_CHARGES, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("'~!@#$^&*=+|[]{}?<>()=%abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,;:_", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter81 = 1
                                        End If
                                    End If
                                Next
                                If counter81 = 1 Then
                                    Label6.Text = "Do Not Use Un-Wanted Characters!"
                                    Label15.Text = ""
                                    txt_Acq_OtherCharges.Focus()
                                    Exit Sub
                                End If
                            Else
                                OTHER_CHARGES = 0
                            End If

                            'Server Validation for VENDOR
                            Dim VEND_ID As Integer = Nothing
                            If DDL_Vendors.Text <> "" Then
                                VEND_ID = DDL_Vendors.SelectedValue
                                VEND_ID = RemoveQuotes(VEND_ID)

                                If IsNumeric(VEND_ID) = False Then
                                    Label6.Text = "Plz Select Vendor from Drop-Down!"
                                    Label15.Text = ""
                                    DDL_Vendors.Focus()
                                    Exit Sub
                                End If
                                If VEND_ID.ToString.Length > 5 Then
                                    Label6.Text = "Plz Enter Data with Proper Length!"
                                    Label15.Text = ""
                                    DDL_Vendors.Focus()
                                    Exit Sub
                                End If
                                VEND_ID = " " & VEND_ID & " "
                                If InStr(1, VEND_ID, "CREATE", 1) > 0 Or InStr(1, VEND_ID, "DELETE", 1) > 0 Or InStr(1, VEND_ID, "DROP", 1) > 0 Or InStr(1, VEND_ID, "INSERT", 1) > 1 Or InStr(1, VEND_ID, "TRACK", 1) > 1 Or InStr(1, VEND_ID, "TRACE", 1) > 1 Then
                                    Label6.Text = "Do Not Use Reserve Words!"
                                    Label15.Text = ""
                                    DDL_Vendors.Focus()
                                    Exit Sub
                                End If
                                VEND_ID = TrimX(VEND_ID)

                                c = 0
                                counter82 = 0
                                For iloop = 1 To Len(VEND_ID.ToString)
                                    strcurrentchar = Mid(VEND_ID, iloop, 1)
                                    If c = 0 Then
                                        If Not InStr("'~!@#$^&*=+|[]{}?<>=%""", strcurrentchar) <= 0 Then
                                            c = c + 1
                                            counter82 = 1
                                        End If
                                    End If
                                Next
                                If counter82 = 1 Then
                                    Label6.Text = "Do Not Use Un-Wanted Characters!"
                                    Label15.Text = ""
                                    DDL_Vendors.Focus()
                                    Exit Sub
                                End If
                            Else
                                VEND_ID = 0
                            End If

                            Dim objCommand1 As New SqlCommand
                            objCommand1.Connection = SqlConn
                            objCommand1.Transaction = thisTransaction
                            objCommand1.CommandType = CommandType.Text
                            objCommand1.CommandText = "INSERT INTO ACQUISITIONS (CAT_NO, LIB_CODE, USER_CODE, DATE_ADDED, ACQMODE_CODE, CUR_CODE, ITEM_PRICE, CONVERSION_RATE, ITEM_RUPEES, OTHER_CHARGES, VEND_ID, IP, PROCESS_STATUS, VOL_NO, COPY_PROPOSED, COPY_APPROVED, COPY_ORDERED, COPY_RECEIVED, COPY_ACCESSIONED) " & _
                                                     " VALUES (@CAT_NO, @LIB_CODE, @USER_CODE, @DATE_ADDED, @ACQMODE_CODE, @CUR_CODE, @ITEM_PRICE, @CONVERSION_RATE, @ITEM_RUPEES, @OTHER_CHARGES, @VEND_ID, @IP, @PROCESS_STATUS, @VOL_NO, @COPY_PROPOSED, @COPY_APPROVED, @COPY_ORDERED, @COPY_RECEIVED, @COPY_ACCESSIONED); " & _
                                                     " SELECT SCOPE_IDENTITY()"

                            objCommand1.Parameters.Add("@CAT_NO", SqlDbType.Int)
                            objCommand1.Parameters("@CAT_NO").Value = Label7.Text

                            objCommand1.Parameters.Add("@LIB_CODE", SqlDbType.NVarChar)
                            If LibCode = "" Then
                                objCommand1.Parameters("@LIB_CODE").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@LIB_CODE").Value = LibCode
                            End If

                            objCommand1.Parameters.Add("@USER_CODE", SqlDbType.NVarChar)
                            If USER_CODE = "" Then
                                objCommand1.Parameters("@USER_CODE").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@USER_CODE").Value = USER_CODE
                            End If

                            objCommand1.Parameters.Add("@DATE_ADDED", SqlDbType.DateTime)
                            If DATE_ADDED = "" Then
                                objCommand1.Parameters("@DATE_ADDED").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@DATE_ADDED").Value = DATE_ADDED
                            End If

                            objCommand1.Parameters.Add("@ACQMODE_CODE", SqlDbType.NVarChar)
                            If ACQMODE_CODE = "" Then
                                objCommand1.Parameters("@ACQMODE_CODE").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@ACQMODE_CODE").Value = ACQMODE_CODE
                            End If

                            objCommand1.Parameters.Add("@CUR_CODE", SqlDbType.NVarChar)
                            If CUR_CODE = "" Then
                                objCommand1.Parameters("@CUR_CODE").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@CUR_CODE").Value = CUR_CODE
                            End If

                            objCommand1.Parameters.Add("@ITEM_PRICE", SqlDbType.Decimal)
                            If ITEM_PRICE = 0 Then
                                objCommand1.Parameters("@ITEM_PRICE").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@ITEM_PRICE").Value = ITEM_PRICE
                            End If

                            objCommand1.Parameters.Add("@CONVERSION_RATE", SqlDbType.Decimal)
                            If CONVERSION_RATE = 0 Then
                                objCommand1.Parameters("@CONVERSION_RATE").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@CONVERSION_RATE").Value = CONVERSION_RATE
                            End If

                            objCommand1.Parameters.Add("@ITEM_RUPEES", SqlDbType.Decimal)
                            If ITEM_RUPEES = 0 Then
                                objCommand1.Parameters("@ITEM_RUPEES").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@ITEM_RUPEES").Value = ITEM_RUPEES
                            End If

                            objCommand1.Parameters.Add("@OTHER_CHARGES", SqlDbType.Decimal)
                            If OTHER_CHARGES = 0 Then
                                objCommand1.Parameters("@OTHER_CHARGES").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@OTHER_CHARGES").Value = OTHER_CHARGES
                            End If

                            objCommand1.Parameters.Add("@VOL_NO", SqlDbType.VarChar)
                            If VOL_NO = "" Then
                                objCommand1.Parameters("@VOL_NO").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@VOL_NO").Value = VOL_NO
                            End If

                            objCommand1.Parameters.Add("@VEND_ID", SqlDbType.Int)
                            If VEND_ID = 0 Then
                                objCommand1.Parameters("@VEND_ID").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@VEND_ID").Value = VEND_ID
                            End If

                            objCommand1.Parameters.Add("@COPY_PROPOSED", SqlDbType.Int)
                            objCommand1.Parameters("@COPY_PROPOSED").Value = 1

                            objCommand1.Parameters.Add("@COPY_APPROVED", SqlDbType.Int)
                            objCommand1.Parameters("@COPY_APPROVED").Value = 1

                            objCommand1.Parameters.Add("@COPY_ORDERED", SqlDbType.Int)
                            objCommand1.Parameters("@COPY_ORDERED").Value = 1

                            objCommand1.Parameters.Add("@COPY_RECEIVED", SqlDbType.Int)
                            objCommand1.Parameters("@COPY_RECEIVED").Value = 1

                            objCommand1.Parameters.Add("@COPY_ACCESSIONED", SqlDbType.Int)
                            objCommand1.Parameters("@COPY_ACCESSIONED").Value = 1

                            objCommand1.Parameters.Add("@PROCESS_STATUS", SqlDbType.VarChar)
                            objCommand1.Parameters("@PROCESS_STATUS").Value = "Direct Accessioned"

                            objCommand1.Parameters.Add("@IP", SqlDbType.VarChar)
                            If IP = "" Then
                                objCommand1.Parameters("@IP").Value = System.DBNull.Value
                            Else
                                objCommand1.Parameters("@IP").Value = IP
                            End If

                            Dim drAcq As SqlDataReader
                            drAcq = objCommand1.ExecuteReader()
                            If drAcq.Read Then
                                intAcqID = drAcq.GetValue(0)
                            End If
                            drAcq.Close()
                        End If
                    End If

                    'Save Holding data   
                    Dim objCommand2 As New SqlCommand
                    objCommand2.Connection = SqlConn
                    objCommand2.Transaction = thisTransaction
                    objCommand2.CommandType = CommandType.Text
                    objCommand2.CommandText = "INSERT INTO HOLDINGS (CAT_NO, ACQ_ID, ACCESSION_NO, ACCESSION_DATE, FORMAT_CODE, SHOW, ISSUEABLE, VOL_NO, VOL_YEAR, VOL_EDITORS, VOL_TITLE, COPY_ISBN, CLASS_NO, BOOK_NO, PAGINATION, SIZE, ILLUSTRATION, COLLECTION_TYPE, STA_CODE, BIND_CODE, SEC_CODE, LIB_CODE, ACC_MAT_CODE, REMARKS, PHYSICAL_LOCATION, REFERENCE_NO, MEDIUM, RECORDING_CATEGORY, RECORDING_FORM, RECORDING_FORMAT, RECORDING_SPEED, RECORDING_STORAGE_TECH, RECORDING_PLAY_DURATION, VIDEO_TYPEOFVISUAL, CARTOGRAPHIC_SCALE, CARTOGRAPHIC_PROJECTION, CARTOGRAPHIC_COORDINATES, CARTOGRAPHIC_GEOGRAPHIC_LOCATION, CARTOGRAPHIC_MEDIUM, CARTOGRAPHIC_DATAGATHERING_DATE, CREATION_DATE, CARTOGRAPHIC_COMPILATION_DATE, CARTOGRAPHIC_INSPECTION_DATE, DATE_ADDED, USER_CODE, IP,VIDEO_COLOR,PLAYBACK_CHANNELS,TAPE_WIDTH,TAPE_CONFIGURATION,KIND_OF_DISK,KIND_OF_CUTTING,ENCODING_STANDARD,CAPTURE_TECHNIQUE,PHOTO_NO,PHOTO_ALBUM_NO,PHOTO_OCASION,IMAGE_VIEW_TYPE,VIEW_DATE,THEME,STYLE,CULTURE,CURRENT_SITE,CREATION_SITE,YARNCOUNT,MATERIAL_TYPE,TECHNIQUE,TECH_DETAILS,INSCRIPTIONS,DESCRIPTION,GLOBE_TYPE,ALTER_DATE ) " & _
                                                 " VALUES (@CAT_NO, @ACQ_ID, @ACCESSION_NO, @ACCESSION_DATE, @FORMAT_CODE, @SHOW, @ISSUABLE, @VOL_NO, @VOL_YEAR, @VOL_EDITORS, @VOL_TITLE, @COPY_ISBN, @CLASS_NO, @BOOK_NO, @PAGINATION, @SIZE, @ILLUSTRATION, @COLLECTION_TYPE, @STA_CODE, @BIND_CODE, @SEC_CODE, @LIB_CODE, @ACC_MAT_CODE, @REMARKS, @PHYSICAL_LOCATION, @REFERENCE_NO, @RECORDING_MEDIUM, @RECORDING_CATEGORY, @RECORDING_FORM, @RECORDING_FORMAT, @RECORDING_SPEED, @RECORDING_STORAGE_TECH, @RECORDING_PLAY_DURATION, @VIDEO_TYPEOFVISUALS, @CARTOGRAPHIC_SCALE, @CARTOGRAPHIC_PROJECTION, @CARTOGRAPHIC_COORDINATES, @CARTOGRAPHIC_GEOGRAPHIC_LOCATION, @CARTOGRAPHIC_MEDIUM, @CARTOGRAPHIC_DATAGATHERING_DATE, @CARTOGRAPHIC_CREATION_DATE, @CARTOGRAPHIC_COMPILATION_DATE, @CARTOGRAPHIC_INSPECTION_DATE, @DATE_ADDED, @USER_CODE, @IP,@VIDEO_COLOR,@PLAYBACK_CHANNELS,@TAPE_WIDTH,@TAPE_CONFIGURATION,@KIND_OF_DISK,@KIND_OF_CUTTING,@ENCODING_STANDARD,@CAPTURE_TECHNIQUE,@PHOTO_NO,@PHOTO_ALBUM_NO,@PHOTO_OCASION,@IMAGE_VIEW_TYPE,@VIEW_DATE,@THEME,@STYLE,@CULTURE,@CURRENT_SITE,@CREATION_SITE,@YARNCOUNT,@MATERIAL_TYPE,@TECHNIQUE,@TECH_DETAILS,@INSCRIPTIONS,@DESCRIPTION,@GLOBE_TYPE,@ALTER_DATE);  "

                    objCommand2.Parameters.Add("@CAT_NO", SqlDbType.Int)
                    If Label7.Text = "" Then
                        objCommand2.Parameters("@CAT_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CAT_NO").Value = Label7.Text
                    End If

                    objCommand2.Parameters.Add("@ACQ_ID", SqlDbType.Int)
                    If intAcqID = 0 Then
                        objCommand2.Parameters("@ACQ_ID").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ACQ_ID").Value = intAcqID
                    End If

                    objCommand2.Parameters.Add("@ACCESSION_NO", SqlDbType.NVarChar)
                    If ACCESSION_NO = "" Then
                        objCommand2.Parameters("@ACCESSION_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ACCESSION_NO").Value = ACCESSION_NO
                    End If

                    objCommand2.Parameters.Add("@ACCESSION_DATE", SqlDbType.DateTime)
                    If ACCESSION_DATE = "" Then
                        objCommand2.Parameters("@ACCESSION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ACCESSION_DATE").Value = ACCESSION_DATE
                    End If


                    If FORMAT_CODE = "" Then FORMAT_CODE = "PT"
                    objCommand2.Parameters.Add("@FORMAT_CODE", SqlDbType.VarChar)
                    objCommand2.Parameters("@FORMAT_CODE").Value = FORMAT_CODE

                    If SHOW = "" Then SHOW = "Y"
                    objCommand2.Parameters.Add("@SHOW", SqlDbType.VarChar)
                    objCommand2.Parameters("@SHOW").Value = SHOW

                    If ISSUABLE = "" Then ISSUABLE = "Y"
                    objCommand2.Parameters.Add("@ISSUABLE", SqlDbType.VarChar)
                    objCommand2.Parameters("@ISSUABLE").Value = ISSUABLE

                    objCommand2.Parameters.Add("@VOL_NO", SqlDbType.NVarChar)
                    If VOL_NO = "" Then
                        objCommand2.Parameters("@VOL_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VOL_NO").Value = VOL_NO
                    End If

                    objCommand2.Parameters.Add("@VOL_YEAR", SqlDbType.Int)
                    If VOL_YEAR = 0 Then
                        objCommand2.Parameters("@VOL_YEAR").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VOL_YEAR").Value = VOL_YEAR
                    End If

                    objCommand2.Parameters.Add("@VOL_EDITORS", SqlDbType.NVarChar)
                    If VOL_EDITORS = "" Then
                        objCommand2.Parameters("@VOL_EDITORS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VOL_EDITORS").Value = VOL_EDITORS
                    End If

                    objCommand2.Parameters.Add("@VOL_TITLE", SqlDbType.NVarChar)
                    If VOL_TITLE = "" Then
                        objCommand2.Parameters("@VOL_TITLE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VOL_TITLE").Value = VOL_TITLE
                    End If

                    objCommand2.Parameters.Add("@COPY_ISBN", SqlDbType.VarChar)
                    If COPY_ISBN = "" Then
                        objCommand2.Parameters("@COPY_ISBN").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@COPY_ISBN").Value = COPY_ISBN
                    End If

                    objCommand2.Parameters.Add("@CLASS_NO", SqlDbType.NVarChar)
                    If CLASS_NO = "" Then
                        objCommand2.Parameters("@CLASS_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CLASS_NO").Value = CLASS_NO
                    End If

                    objCommand2.Parameters.Add("@BOOK_NO", SqlDbType.NVarChar)
                    If BOOK_NO = "" Then
                        objCommand2.Parameters("@BOOK_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@BOOK_NO").Value = BOOK_NO
                    End If

                    objCommand2.Parameters.Add("@PAGINATION", SqlDbType.NVarChar)
                    If PAGINATION = "" Then
                        objCommand2.Parameters("@PAGINATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PAGINATION").Value = PAGINATION
                    End If

                    objCommand2.Parameters.Add("@SIZE", SqlDbType.VarChar)
                    If SIZE = "" Then
                        objCommand2.Parameters("@SIZE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@SIZE").Value = SIZE
                    End If

                    objCommand2.Parameters.Add("@ILLUSTRATION", SqlDbType.VarChar)
                    If ILLUSTRATION = "" Then
                        objCommand2.Parameters("@ILLUSTRATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ILLUSTRATION").Value = ILLUSTRATION
                    End If

                    objCommand2.Parameters.Add("@COLLECTION_TYPE", SqlDbType.VarChar)
                    If COLLECTION_TYPE = "" Then
                        objCommand2.Parameters("@COLLECTION_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@COLLECTION_TYPE").Value = COLLECTION_TYPE
                    End If

                    If STA_CODE = "" Then STA_CODE = "1"
                    objCommand2.Parameters.Add("@STA_CODE", SqlDbType.VarChar)
                    objCommand2.Parameters("@STA_CODE").Value = STA_CODE

                    objCommand2.Parameters.Add("@BIND_CODE", SqlDbType.VarChar)
                    If BIND_CODE = "" Then
                        objCommand2.Parameters("@BIND_CODE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@BIND_CODE").Value = BIND_CODE
                    End If

                    objCommand2.Parameters.Add("@SEC_CODE", SqlDbType.VarChar)
                    If SEC_CODE = "" Then
                        objCommand2.Parameters("@SEC_CODE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@SEC_CODE").Value = SEC_CODE
                    End If

                    objCommand2.Parameters.Add("@LIB_CODE", SqlDbType.NVarChar)
                    If HOLD_LIB_CODE = "" Then
                        objCommand2.Parameters("@LIB_CODE").Value = HOLD_LIB_CODE
                    Else
                        objCommand2.Parameters("@LIB_CODE").Value = LibCode
                    End If

                    objCommand2.Parameters.Add("@ACC_MAT_CODE", SqlDbType.VarChar)
                    If ACC_MAT_CODE = "" Then
                        objCommand2.Parameters("@ACC_MAT_CODE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ACC_MAT_CODE").Value = ACC_MAT_CODE
                    End If

                    objCommand2.Parameters.Add("@REMARKS", SqlDbType.NVarChar)
                    If REMARKS = "" Then
                        objCommand2.Parameters("@REMARKS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@REMARKS").Value = REMARKS
                    End If

                    objCommand2.Parameters.Add("@PHYSICAL_LOCATION", SqlDbType.NVarChar)
                    If PHYSICAL_LOCATION = "" Then
                        objCommand2.Parameters("@PHYSICAL_LOCATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PHYSICAL_LOCATION").Value = PHYSICAL_LOCATION
                    End If

                    objCommand2.Parameters.Add("@REFERENCE_NO", SqlDbType.NVarChar)
                    If REFERENCE_NO = "" Then
                        objCommand2.Parameters("@REFERENCE_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@REFERENCE_NO").Value = REFERENCE_NO
                    End If

                    objCommand2.Parameters.Add("@RECORDING_MEDIUM", SqlDbType.NVarChar)
                    If RECORDING_MEDIUM = "" Then
                        objCommand2.Parameters("@RECORDING_MEDIUM").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_MEDIUM").Value = RECORDING_MEDIUM
                    End If

                    objCommand2.Parameters.Add("@RECORDING_CATEGORY", SqlDbType.NVarChar)
                    If RECORDING_CATEGORY = "" Then
                        objCommand2.Parameters("@RECORDING_CATEGORY").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_CATEGORY").Value = RECORDING_CATEGORY
                    End If

                    objCommand2.Parameters.Add("@RECORDING_FORM", SqlDbType.NVarChar)
                    If RECORDING_FORM = "" Then
                        objCommand2.Parameters("@RECORDING_FORM").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_FORM").Value = RECORDING_FORM
                    End If

                    objCommand2.Parameters.Add("@RECORDING_FORMAT", SqlDbType.NVarChar)
                    If RECORDING_FORMAT = "" Then
                        objCommand2.Parameters("@RECORDING_FORMAT").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_FORMAT").Value = RECORDING_FORMAT
                    End If

                    objCommand2.Parameters.Add("@RECORDING_SPEED", SqlDbType.NVarChar)
                    If RECORDING_SPEED = "" Then
                        objCommand2.Parameters("@RECORDING_SPEED").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_SPEED").Value = RECORDING_SPEED
                    End If

                    objCommand2.Parameters.Add("@RECORDING_STORAGE_TECH", SqlDbType.NVarChar)
                    If RECORDING_STORAGE_TECH = "" Then
                        objCommand2.Parameters("@RECORDING_STORAGE_TECH").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_STORAGE_TECH").Value = RECORDING_STORAGE_TECH
                    End If

                    objCommand2.Parameters.Add("@RECORDING_PLAY_DURATION", SqlDbType.NVarChar)
                    If RECORDING_PLAY_DURATION = "" Then
                        objCommand2.Parameters("@RECORDING_PLAY_DURATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@RECORDING_PLAY_DURATION").Value = RECORDING_PLAY_DURATION
                    End If

                    objCommand2.Parameters.Add("@VIDEO_TYPEOFVISUALS", SqlDbType.NVarChar)
                    If VIDEO_TYPEOFVISUALS = "" Then
                        objCommand2.Parameters("@VIDEO_TYPEOFVISUALS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VIDEO_TYPEOFVISUALS").Value = VIDEO_TYPEOFVISUALS
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_SCALE", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_SCALE = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_SCALE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_SCALE").Value = CARTOGRAPHIC_SCALE
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_PROJECTION", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_PROJECTION = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_PROJECTION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_PROJECTION").Value = CARTOGRAPHIC_PROJECTION
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_COORDINATES", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_COORDINATES = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_COORDINATES").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_COORDINATES").Value = CARTOGRAPHIC_COORDINATES
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_GEOGRAPHIC_LOCATION", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_GEOGRAPHIC_LOCATION = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_GEOGRAPHIC_LOCATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_GEOGRAPHIC_LOCATION").Value = CARTOGRAPHIC_GEOGRAPHIC_LOCATION
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_MEDIUM", SqlDbType.NVarChar)
                    If CARTOGRAPHIC_MEDIUM = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_MEDIUM").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_MEDIUM").Value = CARTOGRAPHIC_MEDIUM
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_DATAGATHERING_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_DATAGATHERING_DATE = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_DATAGATHERING_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_DATAGATHERING_DATE").Value = CARTOGRAPHIC_DATAGATHERING_DATE
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_CREATION_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_CREATION_DATE = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_CREATION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_CREATION_DATE").Value = CARTOGRAPHIC_CREATION_DATE
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_COMPILATION_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_COMPILATION_DATE = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_COMPILATION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_COMPILATION_DATE").Value = CARTOGRAPHIC_COMPILATION_DATE
                    End If

                    objCommand2.Parameters.Add("@CARTOGRAPHIC_INSPECTION_DATE", SqlDbType.DateTime)
                    If CARTOGRAPHIC_INSPECTION_DATE = "" Then
                        objCommand2.Parameters("@CARTOGRAPHIC_INSPECTION_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CARTOGRAPHIC_INSPECTION_DATE").Value = CARTOGRAPHIC_INSPECTION_DATE
                    End If

                    objCommand2.Parameters.Add("@VIDEO_COLOR", SqlDbType.NVarChar)
                    If VIDEO_COLOR = "" Then
                        objCommand2.Parameters("@VIDEO_COLOR").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VIDEO_COLOR").Value = VIDEO_COLOR
                    End If

                    objCommand2.Parameters.Add("@PLAYBACK_CHANNELS", SqlDbType.NVarChar)
                    If PLAYBACK_CHANNELS = "" Then
                        objCommand2.Parameters("@PLAYBACK_CHANNELS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PLAYBACK_CHANNELS").Value = PLAYBACK_CHANNELS
                    End If

                    objCommand2.Parameters.Add("@TAPE_WIDTH", SqlDbType.NVarChar)
                    If TAPE_WIDTH = "" Then
                        objCommand2.Parameters("@TAPE_WIDTH").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@TAPE_WIDTH").Value = TAPE_WIDTH
                    End If

                    objCommand2.Parameters.Add("@TAPE_CONFIGURATION", SqlDbType.NVarChar)
                    If TAPE_CONFIGURATION = "" Then
                        objCommand2.Parameters("@TAPE_CONFIGURATION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@TAPE_CONFIGURATION").Value = TAPE_CONFIGURATION
                    End If

                    objCommand2.Parameters.Add("@KIND_OF_DISK", SqlDbType.NVarChar)
                    If KIND_OF_DISK = "" Then
                        objCommand2.Parameters("@KIND_OF_DISK").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@KIND_OF_DISK").Value = KIND_OF_DISK
                    End If

                    objCommand2.Parameters.Add("@KIND_OF_CUTTING", SqlDbType.NVarChar)
                    If KIND_OF_CUTTING = "" Then
                        objCommand2.Parameters("@KIND_OF_CUTTING").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@KIND_OF_CUTTING").Value = KIND_OF_CUTTING
                    End If

                    objCommand2.Parameters.Add("@ENCODING_STANDARD", SqlDbType.NVarChar)
                    If ENCODING_STANDARD = "" Then
                        objCommand2.Parameters("@ENCODING_STANDARD").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ENCODING_STANDARD").Value = ENCODING_STANDARD
                    End If

                    objCommand2.Parameters.Add("@CAPTURE_TECHNIQUE", SqlDbType.NVarChar)
                    If CAPTURE_TECHNIQUE = "" Then
                        objCommand2.Parameters("@CAPTURE_TECHNIQUE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CAPTURE_TECHNIQUE").Value = CAPTURE_TECHNIQUE
                    End If

                    objCommand2.Parameters.Add("@PHOTO_NO", SqlDbType.NVarChar)
                    If PHOTO_NO = "" Then
                        objCommand2.Parameters("@PHOTO_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PHOTO_NO").Value = PHOTO_NO
                    End If

                    objCommand2.Parameters.Add("@PHOTO_ALBUM_NO", SqlDbType.NVarChar)
                    If PHOTO_ALBUM_NO = "" Then
                        objCommand2.Parameters("@PHOTO_ALBUM_NO").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PHOTO_ALBUM_NO").Value = PHOTO_ALBUM_NO
                    End If

                    objCommand2.Parameters.Add("@PHOTO_OCASION", SqlDbType.NVarChar)
                    If PHOTO_OCASION = "" Then
                        objCommand2.Parameters("@PHOTO_OCASION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@PHOTO_OCASION").Value = PHOTO_OCASION
                    End If

                    objCommand2.Parameters.Add("@IMAGE_VIEW_TYPE", SqlDbType.NVarChar)
                    If IMAGE_VIEW_TYPE = "" Then
                        objCommand2.Parameters("@IMAGE_VIEW_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@IMAGE_VIEW_TYPE").Value = IMAGE_VIEW_TYPE
                    End If

                    objCommand2.Parameters.Add("@THEME", SqlDbType.NVarChar)
                    If THEME = "" Then
                        objCommand2.Parameters("@THEME").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@THEME").Value = THEME
                    End If

                    objCommand2.Parameters.Add("@STYLE", SqlDbType.NVarChar)
                    If STYLE = "" Then
                        objCommand2.Parameters("@STYLE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@STYLE").Value = STYLE
                    End If

                    objCommand2.Parameters.Add("@CULTURE", SqlDbType.NVarChar)
                    If CULTURE = "" Then
                        objCommand2.Parameters("@CULTURE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CULTURE").Value = CULTURE
                    End If

                    objCommand2.Parameters.Add("@CURRENT_SITE", SqlDbType.NVarChar)
                    If CURRENT_SITE = "" Then
                        objCommand2.Parameters("@CURRENT_SITE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CURRENT_SITE").Value = CURRENT_SITE
                    End If

                    objCommand2.Parameters.Add("@CREATION_SITE", SqlDbType.NVarChar)
                    If CREATION_SITE = "" Then
                        objCommand2.Parameters("@CREATION_SITE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@CREATION_SITE").Value = CREATION_SITE
                    End If

                    objCommand2.Parameters.Add("@YARNCOUNT", SqlDbType.NVarChar)
                    If YARNCOUNT = "" Then
                        objCommand2.Parameters("@YARNCOUNT").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@YARNCOUNT").Value = YARNCOUNT
                    End If

                    objCommand2.Parameters.Add("@MATERIAL_TYPE", SqlDbType.NVarChar)
                    If MATERIAL_TYPE = "" Then
                        objCommand2.Parameters("@MATERIAL_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@MATERIAL_TYPE").Value = MATERIAL_TYPE
                    End If

                    objCommand2.Parameters.Add("@TECHNIQUE", SqlDbType.NVarChar)
                    If TECHNIQUE = "" Then
                        objCommand2.Parameters("@TECHNIQUE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@TECHNIQUE").Value = TECHNIQUE
                    End If

                    objCommand2.Parameters.Add("@TECH_DETAILS", SqlDbType.NVarChar)
                    If TECH_DETAILS = "" Then
                        objCommand2.Parameters("@TECH_DETAILS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@TECH_DETAILS").Value = TECH_DETAILS
                    End If

                    objCommand2.Parameters.Add("@INSCRIPTIONS", SqlDbType.NVarChar)
                    If INSCRIPTIONS = "" Then
                        objCommand2.Parameters("@INSCRIPTIONS").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@INSCRIPTIONS").Value = INSCRIPTIONS
                    End If

                    objCommand2.Parameters.Add("@DESCRIPTION", SqlDbType.NVarChar)
                    If DESCRIPTION = "" Then
                        objCommand2.Parameters("@DESCRIPTION").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@DESCRIPTION").Value = DESCRIPTION
                    End If

                    objCommand2.Parameters.Add("@GLOBE_TYPE", SqlDbType.NVarChar)
                    If GLOBE_TYPE = "" Then
                        objCommand2.Parameters("@GLOBE_TYPE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@GLOBE_TYPE").Value = GLOBE_TYPE
                    End If

                    objCommand2.Parameters.Add("@ALTER_DATE", SqlDbType.DateTime)
                    If ALTER_DATE = "" Then
                        objCommand2.Parameters("@ALTER_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@ALTER_DATE").Value = ALTER_DATE
                    End If

                    objCommand2.Parameters.Add("@VIEW_DATE", SqlDbType.DateTime)
                    If VIEW_DATE = "" Then
                        objCommand2.Parameters("@VIEW_DATE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@VIEW_DATE").Value = VIEW_DATE
                    End If

                    objCommand2.Parameters.Add("@DATE_ADDED", SqlDbType.DateTime)
                    If DATE_ADDED = "" Then
                        objCommand2.Parameters("@DATE_ADDED").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@DATE_ADDED").Value = DATE_ADDED
                    End If

                    objCommand2.Parameters.Add("@USER_CODE", SqlDbType.NVarChar)
                    If USER_CODE = "" Then
                        objCommand2.Parameters("@USER_CODE").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@USER_CODE").Value = USER_CODE
                    End If

                    objCommand2.Parameters.Add("@IP", SqlDbType.VarChar)
                    If IP = "" Then
                        objCommand2.Parameters("@IP").Value = System.DBNull.Value
                    Else
                        objCommand2.Parameters("@IP").Value = IP
                    End If
                    objCommand2.ExecuteNonQuery()

                    If Label7.Text <> "" Then
                        Dim objCommand4 As New SqlCommand
                        objCommand4.Connection = SqlConn
                        objCommand4.Transaction = thisTransaction
                        objCommand4.CommandType = CommandType.Text
                        objCommand4.CommandText = "UPDATE CATS SET CAT_LEVEL ='Full' WHERE (CAT_NO = @CAT_NO)"

                        objCommand4.Parameters.Add("@CAT_NO", SqlDbType.Int)
                        objCommand4.Parameters("@CAT_NO").Value = Label7.Text

                        Dim dr4 As SqlDataReader
                        dr4 = objCommand4.ExecuteReader()
                        dr4.Close()
                    End If





















                    thisTransaction.Commit()
                    SqlConn.Close()
                    Label15.Text = "Record added Successfully!"
                    Label6.Text = ""

                    'if range of accn no  then chk if it is numeric
                    If CB_RecvAll.Checked = True Then
                        If txt_Hold_Copies.Text <> "" Then
                            If txt_Hold_Copies.Text > 1 Then
                                AddMultiHoldings()
                            End If
                        End If
                    End If

                    Me.Acq_Save_Bttn.Visible = True
                    Acq_Update_Bttn.Visible = False
                    Acq_SaveNew_Bttn.Visible = False
                    intAcqID = Nothing

                    PopulateHoldingsGrid()
                    UpdatePanel1.Update()
                Catch q As SqlException
                    thisTransaction.Rollback()
                    Label6.Text = "Database Error -SAVE: " & (q.Message() & ", " & q.Number & ", " & q.GetType.ToString)
                    Label7.Text = ""
                Catch ex As Exception
                    Label6.Text = "Error-SAVE: " & (ex.Message())
                    Label15.Text = ""
                    Label7.Text = ""
                Finally
                    SqlConn.Close()
                End Try
            End If
        End If
    End Sub
    'delete selected copeis
    Protected Sub Hold_Delete_Bttn_Click1(ByVal sender As Object, ByVal e As EventArgs) Handles Hold_Delete_Bttn.Click
        Dim thisTransaction As SqlClient.SqlTransaction = Nothing
        Try
            'validation for cat_no
            Dim CAT_NO As Long = Nothing
            If Me.Label7.Text <> "" Then
                CAT_NO = Convert.ToInt16(TrimX(Label7.Text))
                CAT_NO = RemoveQuotes(CAT_NO)
                If Not IsNumeric(CAT_NO) = True Then
                    Label15.Text = "Error: Input is not Valid !"
                    Label1.Text = ""
                    Exit Sub
                End If
                If Len(CAT_NO) > 10 Then
                    Label15.Text = "Error: Input is not Valid !"
                    Label1.Text = ""
                    Exit Sub
                End If
                CAT_NO = " " & CAT_NO & " "
                If InStr(1, CAT_NO, "CREATE", 1) > 0 Or InStr(1, CAT_NO, "DELETE", 1) > 0 Or InStr(1, CAT_NO, "DROP", 1) > 0 Or InStr(1, CAT_NO, "INSERT", 1) > 1 Or InStr(1, CAT_NO, "TRACK", 1) > 1 Or InStr(1, CAT_NO, "TRACE", 1) > 1 Then
                    Label15.Text = "Error: Input is not Valid !"
                    Label1.Text = ""
                    Exit Sub
                End If
                CAT_NO = TrimX(CAT_NO)
            Else
                Label6.Text = "No Record selected!"
                Label15.Text = ""
                Exit Sub
            End If


            For Each row As GridViewRow In Grid2.Rows
                Dim cb As CheckBox = DirectCast(row.FindControl("cbd"), CheckBox)
                If cb IsNot Nothing AndAlso cb.Checked = True Then
                    Dim ID As Integer = Convert.ToInt32(Grid2.DataKeys(row.RowIndex).Value)

                    'First Check the status of each Accession No / Delete only if status is other than 2
                    Dim str As Object = Nothing
                    Dim flag As Object = Nothing
                    str = "SELECT HOLD_ID FROM HOLDINGS WHERE (HOLD_ID = '" & Trim(ID) & "')  AND (STA_CODE = '2') AND (LIB_CODE = '" & Trim(LibCode) & "')"
                    Dim cmd1 As New SqlCommand(str, SqlConn)
                    SqlConn.Open()
                    flag = cmd1.ExecuteScalar
                    SqlConn.Close()

                    If flag <> Nothing Then
                        Label6.Text = "This Acc. No is issued!"
                        Label15.Text = ""
                        Continue For
                    Else
                        'validation for acq_id
                        Dim ACQ_ID As Long = Nothing
                        If Replace(Grid2.Rows(row.RowIndex).Cells(11).Text, "&nbsp;", "") <> "" Then
                            ACQ_ID = Convert.ToInt32(Grid2.Rows(row.RowIndex).Cells(11).Text)
                            ACQ_ID = RemoveQuotes(ACQ_ID)
                            If Not IsNumeric(ACQ_ID) = True Then
                                Label15.Text = "Error: Input is not Valid !"
                                Label1.Text = ""
                                Exit Sub
                            End If
                            If Len(ACQ_ID) > 10 Then
                                Label15.Text = "Error: Input is not Valid !"
                                Label1.Text = ""
                                Exit Sub
                            End If
                            ACQ_ID = " " & ACQ_ID & " "
                            If InStr(1, ACQ_ID, "CREATE", 1) > 0 Or InStr(1, ACQ_ID, "DELETE", 1) > 0 Or InStr(1, ACQ_ID, "DROP", 1) > 0 Or InStr(1, ACQ_ID, "INSERT", 1) > 1 Or InStr(1, ACQ_ID, "TRACK", 1) > 1 Or InStr(1, ACQ_ID, "TRACE", 1) > 1 Then
                                Label15.Text = "Error: Input is not Valid !"
                                Label1.Text = ""
                                Exit Sub
                            End If
                            ACQ_ID = TrimX(ACQ_ID)

                            Dim str2 As Object = Nothing
                            Dim flag2 As Object = Nothing
                            str2 = "SELECT ACQ_ID FROM ACQUISITIONS WHERE (ACQ_ID = '" & Trim(ACQ_ID) & "')  AND (PROCESS_STATUS = 'Direct Accessioned') AND (COPY_ACCESSIONED ='1') AND (LIB_CODE = '" & Trim(LibCode) & "')"
                            Dim cmd2 As New SqlCommand(str2, SqlConn)
                            SqlConn.Open()
                            flag2 = cmd2.ExecuteScalar
                            SqlConn.Close()

                            If flag2 = Nothing Then
                                Label6.Text = "This copy is purchased under BOOKS ACQUISITION Module - delete its record there itself!"
                                Label15.Text = ""
                                Continue For
                            End If
                        End If

                        If SqlConn.State = 0 Then
                            SqlConn.Open()
                        End If

                        thisTransaction = SqlConn.BeginTransaction()
                        Dim objCommand As New SqlCommand
                        objCommand.Connection = SqlConn
                        objCommand.Transaction = thisTransaction
                        objCommand.CommandType = CommandType.Text
                        objCommand.CommandText = "DELETE FROM  HOLDINGS WHERE HOLD_ID = @HOLD_ID "

                        objCommand.Parameters.Add("@HOLD_ID", SqlDbType.Int)
                        objCommand.Parameters("@HOLD_ID").Value = ID

                        objCommand.ExecuteNonQuery()


                        'count copies from holdings
                        If Grid2.Rows(row.RowIndex).Cells(11).Text <> "" Then
                            Dim objCommand2 As New SqlCommand
                            objCommand2.Connection = SqlConn
                            objCommand2.Transaction = thisTransaction
                            objCommand2.CommandType = CommandType.Text
                            objCommand2.CommandText = "DELETE FROM  ACQUISITIONS WHERE (ACQ_ID = @ACQ_ID AND LIB_CODE = @LIB_CODE)"

                            objCommand2.Parameters.Add("@ACQ_ID", SqlDbType.Int)
                            objCommand2.Parameters("@ACQ_ID").Value = ACQ_ID

                            If LibCode = "" Then LibCode = System.DBNull.Value
                            objCommand2.Parameters.Add("@LIB_CODE", SqlDbType.NVarChar)
                            objCommand2.Parameters("@LIB_CODE").Value = LibCode

                            Dim dr2 As SqlDataReader
                            dr2 = objCommand2.ExecuteReader()
                            dr2.Close()
                        End If

                        'update cats table status
                        Dim objCommand4 As New SqlCommand
                        objCommand4.Connection = SqlConn
                        objCommand4.Transaction = thisTransaction
                        objCommand4.CommandType = CommandType.Text
                        objCommand4.CommandText = "UPDATE CATS SET CAT_LEVEL = (SELECT CASE WHEN COUNT(*)= 0 THEN 'New' Else 'Full' END as a FROM HOLDINGS WHERE CAT_NO = @CAT_NO) WHERE (CAT_NO = @CAT_NO)"

                        objCommand4.Parameters.Add("@CAT_NO", SqlDbType.Int)
                        objCommand4.Parameters("@CAT_NO").Value = CAT_NO

                        Dim dr4 As SqlDataReader
                        dr4 = objCommand4.ExecuteReader()
                        dr4.Close()

                        thisTransaction.Commit()
                        SqlConn.Close()

                    End If
                End If
            Next

            PopulateHoldingsGrid()
        Catch s As Exception
            thisTransaction.Rollback()
            Label1.Text = ""
            Label15.Text = "Error: " & (s.Message())
        Finally
            SqlConn.Close()
        End Try

    End Sub

   
End Class